{"version":3,"sources":["components/login/LoginForm.js","components/login/LoginModal.js","components/login/LoginButton.js","components/login/LoginControl.js","components/general/NavBar.js","components/general/CustomLoader.js","components/forms/guestPicker/GuestInput.js","components/forms/guestPicker/GuestPicker.js","components/home/NewEventForm.js","components/home/NewEventModal.js","components/home/UserEvents.js","components/home/Home.js","components/greetings/GreetingsTabs.js","components/greetings/Greeting.js","components/greetings/Greetings.js","components/greetings/AddGreetingForm.js","components/greetings/AddGreetingModal.js","components/greetings/AddGreeting.js","components/greetings/GreetingsBox.js","components/chat/UsernameForm.js","components/chat/MessageList.js","components/chat/SendMessageForm.js","components/chat/TypingIndicator.js","components/chat/WhosOnlineList.js","components/chat/ChatScreen.js","components/chat/ChatContainer.js","components/mainPages/EventParty.js","components/mainPages/EventDetails.js","components/mainPages/GreetingsMgmt.js","components/general/RedirectIntercept.js","components/mainPages/MyEvents.js","components/mainPages/About.js","App.js","utils/AjaxUtils.js","utils/TransportLayer.js","stores/Store.js","index.js"],"names":["LoginForm","inject","stores","dummyLogin","store","observer","react_default","a","createElement","type","placeholder","className","onClick","this","props","Component","LoginModal","isModal","isLoginModal","toggleModal","toggleLoginModal","index_es","open","onClose","closeOnEsc","closeOnOverlayClick","login_LoginForm","LoginButton","login_LoginModal","LoginControl","currentUserExists","username","currentUser","name","email","phone","logout","_this$props","concat","login_LoginButton","NavBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","links","title","to","NavLink","activeClassName","exact","role","aria-label","id","htmlFor","map","l","i","key","login_LoginControl","CustomLoader","_Component","apply","arguments","inherits","createClass","value","isLoading","react_loader_spinner_default","color","height","children","GuestInput","guest","onChange","handleChange","required","disabled","action","e","_this2","updateGuest","index","target","GuestPicker","guestsChange","reaction","guests","g","objectSpread","setUsersFromPicker","roleId","guestPicker_GuestInput","addInput","observable","_this3","push","_this4","NewEventForm","addEvent","handleSubmit","preventDefault","date","users","onSubmit","guestPicker_GuestPicker","general_CustomLoader","NewEventModal","isNewEventModal","toggleNewEventModal","center","styles","modal","width","home_NewEventForm","UserEvents","userId","getEvents","events","moment","format","Link","length","Home","isSignedIn","futureUserEvents","currentParties","home_NewEventModal","home_UserEvents","alert","GreetingsTabs","greetingTabsTitles","setGreetingType","currentGreetingType","t","count","Greeting","updateGreeting","deleteGreeting","quillModules","toolbar","font","list","direction","background","align","greeting","isEditMode","lib_default","theme","text","handleChangeQuill","modules","checked","isPrivate","user","handleSaveText","react_fontawesome_index_es","icon","faSave","handleCancel","faTimes","Parser","toggleEdit","faEdit","handleDelete","faTrash","createdAt","_this5","_this6","_this7","_this8","Greetings","greetings","filter","typeId","greetings_Greeting","AddGreetingForm","createGreeting","AddGreetingModal","isAddGreetingModal","toggleAddGreetingModal","greetings_AddGreetingForm","AddGreeting","greetings_AddGreetingModal","GreetingsBox","getGreetingTypes","componentDidMount","greetings_GreetingsTabs","greetings_Greetings","greetings_AddGreeting","UsernameForm","state","bind","assertThisInitialized","setState","MessageList","messages","message","senderId","SendMessageForm","TypingIndicator","usersWhoAreTyping","slice","join","WhosOnlineList","WhosOnlineList_WhosOnlineListItem","presenceState","presence","renderUsers","WhosOnlineListItem","style","backgroundColor","ChatScreen","chatRoomId","currentEvent","currentRoom","sendMessage","sendTypingEvent","roomId","isTypingIn","catch","error","console","Chatkit","ChatManager","instanceLocator","currentUsername","tokenProvider","TokenProvider","url","connect","then","subscribeToRoom","messageLimit","hooks","onNewMessage","toConsumableArray","onUserStartedTyping","onUserStoppedTyping","onUserCameOnline","forceUpdate","onUserWentOffline","onUserJoined","chat_WhosOnlineList","chat_MessageList","chat_TypingIndicator","chat_SendMessageForm","ChatContainer","chatLogin","onUsernameSubmitted","response","currentScreen","chat_UsernameForm","chat_ChatScreen","EventParty","event","getEventFull","createChatRoom","parseQueryParams","currentGreetings","setGreetingView","chat_ChatContainer","greetings_GreetingsBox","_this2$props","eventId","EventDetails","currentUsers","getUsersByRole","userItems","u","eventsUsers","GreetingsMgmt","eventTitle","roleTItle","currentRole","ownGreetings","RedirectIntercept","redirectTo","resetRedirectTo","Redirect","MyEvents","userEvents","About","href","rel","App","BrowserRouter","general_RedirectIntercept","general_NavBar","Route","path","render","home_Home","mainPages_MyEvents","mainPages_About","_ref","match","mainPages_EventDetails","params","_ref2","mainPages_EventParty","_ref3","mainPages_GreetingsMgmt","ajaxUtils","AjaxUtils","queryApi","asyncToGenerator","regenerator_default","mark","_callee","method","body","wrap","_context","prev","next","t0","axios","get","sent","abrupt","post","put","delete","Error","data","t1","stop","_x","_x2","_x3","EVENTS_PATH","GREETING_PATH","GREETING_TYPES_PATH","USERS_PATH","CHAT_PATH","CHAT_ROOMS_PATH","CHAT_USERS_PATH","transportLayer","getUserById","getEventsByUser","createEvent","updateUser","updateObject","greetingId","greetingObject","LS_USER_KEY","Store","initializerDefineProperty","Store_descriptor","Store_descriptor2","Store_descriptor3","Store_descriptor4","Store_descriptor5","Store_descriptor6","Store_descriptor7","Store_descriptor8","Store_descriptor9","Store_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","getEventDetails","queryParams","updateUserInStorage","_callee2","_context2","localStorage","setItem","JSON","stringify","removeItem","_descriptor32","_descriptor33","_descriptor34","_descriptor35","_descriptor36","_descriptor37","interceptors","use","status","isAuthenticated","Promise","reject","initialize","greetingView","greetingTypes","Date","now","eventDate","end","add","isBetween","_callee3","_context3","getUserFromStorage","computed","paramsObject","keys","forEach","k","_callee4","_context4","getUser","parse","getItem","_callee5","_context5","_callee6","_context6","_this9","_callee7","_context7","_this10","_callee8","_context8","_this11","_callee9","isRedirect","_context9","_this12","_callee10","_context10","_this13","_callee11","_context11","_this14","_callee12","currentGreeting","_context12","_this15","find","_callee13","currentIndex","_context13","_this16","findIndex","splice","_this17","_this18","_this19","_this20","_this21","view","_this22","_callee14","_context14","_this23","ReactDOM","index_module","src_App_0","document","getElementById"],"mappings":"2iBAOMA,MAJLC,aAAO,SAAAC,GAAM,MAAK,CACfC,WAAYD,EAAOE,MAAMD,kBAE5BE,qMAGO,OACIC,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,SAAOC,KAAK,OAAOC,YAAY,aAC/BJ,GAAAC,EAAAC,cAAA,WACAF,GAAAC,EAAAC,cAAA,UAAQG,UAAU,MAAMF,KAAK,SAASG,QAASC,KAAKC,MAAMX,YAA1D,SACAG,GAAAC,EAAAC,cAAA,WACAF,GAAAC,EAAAC,cAAA,aAAOF,GAAAC,EAAAC,cAAA,yDARCO,uBAcTf,MCVTgB,MALLf,aAAO,SAAAC,GAAM,MAAK,CACfe,QAASf,EAAOE,MAAMc,aACtBC,YAAajB,EAAOE,MAAMgB,wBAE7Bf,qMAGO,OACIC,GAAAC,EAAAC,cAACa,GAAA,EAAD,CAAOC,KAAMT,KAAKC,MAAMG,QAASM,QAASV,KAAKC,MAAMK,YAAaK,YAAY,EAAOC,qBAAqB,GACtGnB,GAAAC,EAAAC,cAACkB,GAAD,cAJSX,uBAUVC,MCbTW,MAJL1B,aAAO,SAAAC,GAAM,MAAK,CACjBiB,YAAajB,EAAOE,MAAMgB,wBAE3Bf,qMAGO,OACIC,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,QAAMI,QAASC,KAAKC,MAAMK,aAA1B,SACAb,GAAAC,EAAAC,cAACoB,GAAD,cALUb,uBAWXY,MCTTE,MANL5B,aAAO,SAAAC,GAAM,MAAK,CACf4B,kBAAmB5B,EAAOE,MAAM0B,kBAChCC,SAAU7B,EAAOE,MAAM4B,YAAe9B,EAAOE,MAAM4B,YAAYC,MAAQ/B,EAAOE,MAAM4B,YAAYE,OAAShC,EAAOE,MAAM4B,YAAYG,MAAS,GAC3IC,OAAQlC,EAAOE,MAAMgC,cAExB/B,qMAEY,IAAAgC,EAC2CxB,KAAKC,MAA7CgB,EADHO,EACGP,kBAAmBM,EADtBC,EACsBD,OAAQL,EAD9BM,EAC8BN,SAEnC,OACIzB,GAAAC,EAAAC,cAAA,OAAKG,UAAU,aACVmB,EACGxB,GAAAC,EAAAC,cAAA,QAAMI,QAASwB,GAAf,MAAAE,OAA8BP,EAA9B,aAEAzB,GAAAC,EAAAC,cAAC+B,GAAD,cATOxB,uBAgBZc,MCtBTW,eACF,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,GAAA,EAAAD,CAAA7B,KAAA2B,IACVC,EAAAC,OAAAE,GAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,GAAA,EAAAH,CAAAF,GAAAM,KAAAjC,QACKkC,MAAQ,CAGT,CAAEC,MAAO,YAAaC,GAAI,WAC1B,CAAED,MAAO,QAASC,GAAI,WANhBR,0EAWV,OACInC,GAAAC,EAAAC,cAAA,UAAQG,UAAU,UACdL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACXL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,GAAAC,EAAAC,cAAC0C,GAAA,EAAD,CAASC,gBAAgB,cAAeF,GAAG,IAAItC,UAAU,OAAOyC,OAAK,GAAC9C,GAAAC,EAAAC,cAAA,QAAM6C,KAAK,MAAMC,aAAW,mBAA5B,gBAAtE,cACAhD,GAAAC,EAAAC,cAAA,SAAOG,UAAU,WAAWF,KAAK,WAAW8C,GAAG,aAC/CjD,GAAAC,EAAAC,cAAA,SAAOG,UAAU,YAAY6C,QAAQ,YAAWlD,GAAAC,EAAAC,cAAA,QAAMG,UAAU,aAChEL,GAAAC,EAAAC,cAAA,MAAIG,UAAU,QACTE,KAAKkC,MAAMU,IAAI,SAACC,EAAGC,GAAJ,OAAUrD,GAAAC,EAAAC,cAAA,MAAIoD,IAAKD,GAAGrD,GAAAC,EAAAC,cAAC0C,GAAA,EAAD,CAASD,GAAIS,EAAET,GAAIE,gBAAgB,cAAcC,OAAK,GAAEM,EAAEV,UAChG1C,GAAAC,EAAAC,cAAA,UAAIF,GAAAC,EAAAC,cAACqD,GAAD,kBArBX9C,cAqCNyB,0BCtCFsB,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAApB,OAAAC,GAAA,EAAAD,CAAA7B,KAAAiD,GAAApB,OAAAE,GAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,GAAA,EAAAH,CAAAoB,GAAAE,MAAAnD,KAAAoD,YAAA,OAAAvB,OAAAwB,GAAA,EAAAxB,CAAAoB,EAAAC,GAAArB,OAAAyB,GAAA,EAAAzB,CAAAoB,EAAA,EAAAF,IAAA,SAAAQ,MAAA,WAEQ,OACI9D,GAAAC,EAAAC,cAAA,WACKK,KAAKC,MAAMuD,UACP/D,GAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACZL,GAAAC,EAAAC,cAAC8D,GAAA/D,EAAD,CAAQE,KAAK,UAAU8D,MAAM,UAAUC,OAAQ3D,KAAKC,MAAM0D,QAAU,MAGxElE,GAAAC,EAAAC,cAAA,WAAMK,KAAKC,MAAM2D,eATrCX,EAAA,CAAkC/C,cAgBnB+C,uDC6BAY,GA5CdrE,sWAOY,IACGsE,EAAU9D,KAAKC,MAAf6D,MAER,OACIrE,GAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,GAAAC,EAAAC,cAAA,UAAQyB,KAAK,OAAOmC,MAAOO,EAAMlE,KAAMmE,SAAU/D,KAAKgE,aAAcC,UAAQ,GACxExE,GAAAC,EAAAC,cAAA,UAAQ4D,MAAM,GAAGW,UAAQ,GAAzB,KACAzE,GAAAC,EAAAC,cAAA,UAAQ4D,MAAM,SAAd,SACA9D,GAAAC,EAAAC,cAAA,UAAQ4D,MAAM,SAAd,UAGY,UAAfO,EAAMlE,MACHH,GAAAC,EAAAC,cAAA,SACIyB,KAAK,QACLxB,KAAK,QACLC,YAAY,QACZkE,SAAU/D,KAAKgE,aACfT,MAAOO,EAAMzC,MACb4C,UAAQ,IAIA,UAAfH,EAAMlE,MACHH,GAAAC,EAAAC,cAAA,SACIyB,KAAK,QACLxB,KAAK,MACLC,YAAY,QACZkE,SAAU/D,KAAKgE,aACfT,MAAOO,EAAMxC,MACb2C,UAAQ,YAnCP/D,yDAEpBiE,0FAAsB,SAAAC,GACnBC,EAAKpE,MAAMqE,YAAYD,EAAKpE,MAAMsE,MAAOH,EAAEI,OAAOpD,KAAMgD,EAAEI,OAAOjB,oBC2B1DkB,GA7BdjF,iZAYGkF,aAAeC,aACX,kBAAM/C,EAAKgD,OAAOhC,IAAI,SAAAiC,GAAO,OAAOhD,OAAAiD,GAAA,EAAAjD,CAAA,GAAKgD,MACzC,SAAAD,GAAM,OAAIhD,EAAK3B,MAAM8E,mBAAmBH,EAAQhD,EAAK3B,MAAM+E,oFAGtD,IAAAX,EAAArE,KACL,OACIP,GAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACVE,KAAK4E,OAAOhC,IAAI,SAACiC,EAAG/B,GAAJ,OACbrD,GAAAC,EAAAC,cAACsF,GAAD,CAAYlC,IAAKD,EAAGgB,MAAOe,EAAGN,MAAOzB,EAAGwB,YAAaD,EAAKC,gBAE9D7E,GAAAC,EAAAC,cAAA,UAAQG,UAAU,cAAcF,KAAK,SAASG,QAASC,KAAKkF,UAA5D,aAtBUhF,mDACrBiF,8EAAoB,CAAC,CAAEvF,KAAM,GAAIyB,MAAO,GAAIC,MAAO,+CAEnD6C,0FAAkB,WACfiB,EAAKR,OAAOS,KAAK,CAAEzF,KAAM,GAAIyB,MAAO,GAAIC,MAAO,mDAGlD6C,0FAAqB,SAACI,EAAO3E,EAAM2D,GAChC+B,EAAKV,OAAOL,GAAO3E,GAAQ2D,eCuDpBgC,GA/DdnG,aAAO,SAAAC,GAAM,MAAK,CACfmG,SAAUnG,EAAOE,MAAMiG,SACvBhC,UAAWnE,EAAOE,MAAMiE,eAE3BhE,0gBAcGiG,aAAe,SAAArB,GACXA,EAAEsB,iBACF9D,EAAK3B,MAAMuF,SAAS5D,EAAKO,MAAOP,EAAK+D,KAAM/D,EAAKgE,OAAO,8EAIvD,OACInG,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,uBACAF,GAAAC,EAAAC,cAAA,QAAMG,UAAU,sBAAsB+F,SAAU7F,KAAKyF,cACjDhG,GAAAC,EAAAC,cAAA,uBACAF,GAAAC,EAAAC,cAAA,SACIyB,KAAK,QACLxB,KAAK,OACLC,YAAY,QACZkE,SAAU/D,KAAKgE,aACfT,MAAOvD,KAAKmC,MACZ8B,UAAQ,IAGZxE,GAAAC,EAAAC,cAAA,sBACAF,GAAAC,EAAAC,cAAA,SACIyB,KAAK,OACLxB,KAAK,iBACLC,YAAY,OACZkE,SAAU/D,KAAKgE,aACfT,MAAOvD,KAAK2F,KACZ1B,UAAQ,IAGZxE,GAAAC,EAAAC,cAAA,wBACAF,GAAAC,EAAAC,cAACmG,GAAD,CAAad,OAAQ,EAAGD,mBAAoB/E,KAAK+E,qBAEjDtF,GAAAC,EAAAC,cAAA,4BACAF,GAAAC,EAAAC,cAACmG,GAAD,CAAad,OAAQ,EAAGD,mBAAoB/E,KAAK+E,qBAEjDtF,GAAAC,EAAAC,cAACoG,GAAD,CAAcvC,UAAWxD,KAAKC,MAAMuD,UAAWG,OAAQ,IACnDlE,GAAAC,EAAAC,cAAA,UAAQG,UAAU,MAAMF,KAAK,UAA7B,kBAlDGM,kDACtBiF,8EAAmB,yCACnBA,8EAAkB,0CAClBA,8EAAmB,iDAEnBhB,0FAAsB,SAAAC,GACnBC,EAAKD,EAAEI,OAAOpD,MAAQgD,EAAEI,OAAOjB,2DAGlCY,0FAA4B,SAACS,EAAQI,GAClCI,EAAKQ,MAAMZ,GAAUJ,mBCDdoB,GAfd5G,aAAO,SAAAC,GAAM,MAAK,CACfe,QAASf,EAAOE,MAAM0G,gBACtB3F,YAAajB,EAAOE,MAAM2G,yBAE7B1G,qMAGO,OACIC,GAAAC,EAAAC,cAACa,GAAA,EAAD,CAAOC,KAAMT,KAAKC,MAAMG,QAASM,QAASV,KAAKC,MAAMK,YAAa6F,QAAM,EAACC,OAAQ,CAAEC,MAAO,CAAEC,MAAO,UAC/F7G,GAAAC,EAAAC,cAAC4G,GAAD,cAJYrG,oDCsBbsG,GA5BdpH,aAAO,SAAAC,GAAM,MAAK,CACfoH,OAAQpH,EAAOE,MAAM4B,YAAc9B,EAAOE,MAAM4B,YAAYuB,GAAK,UAEpElD,6NAEGkH,UAAY,WAAM,IAAAlF,EACmBI,EAAK3B,MAA9B0G,EADMnF,EACNmF,OAAQF,EADFjF,EACEiF,OAAQ7G,EADV4B,EACU5B,KACxB,OAAO+G,EAAO/D,IAAI,SAAAwB,GACd,OAAQ3E,GAAAC,EAAAC,cAAA,OAAKoD,IAAKqB,EAAE1B,IAChBjD,GAAAC,EAAAC,cAAA,YAAOyE,EAAEjC,OACT1C,GAAAC,EAAAC,cAAA,YAAOiH,KAAOxC,EAAEuB,MAAMkB,OAAO,YAC7BpH,GAAAC,EAAAC,cAAA,YAAMF,GAAAC,EAAAC,cAACmH,GAAA,EAAD,CAAM1E,GAAE,WAAAX,OAAa2C,EAAE1B,GAAf,KAAAjB,OAAqBgF,IAA7B,YACNhH,GAAAC,EAAAC,cAAA,YAAMF,GAAAC,EAAAC,cAACmH,GAAA,EAAD,CAAM1E,GAAE,WAAAX,OAAa2C,EAAE1B,GAAf,KAAAjB,OAAqBgF,EAArB,eAAR,cACI,YAAT7G,GAAsBH,GAAAC,EAAAC,cAAA,YAAMF,GAAAC,EAAAC,cAACmH,GAAA,EAAD,CAAM1E,GAAE,WAAAX,OAAa2C,EAAE1B,GAAf,KAAAjB,OAAqBgF,EAArB,WAAR,yFAMrC,OACIhH,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,UAAKK,KAAKC,MAAMkC,OAChB1C,GAAAC,EAAAC,cAAA,OAAKG,UAAU,eAAeE,KAAKC,MAAM0G,OAAOI,OAAS/G,KAAK0G,YAAc,oCAlBnExG,sBCyCV8G,GA3Cd5H,aAAO,SAAAC,GAAM,MAAK,CACjBiB,YAAajB,EAAOE,MAAM2G,oBAC1B1C,UAAWnE,EAAOE,MAAMiE,UACxByD,WAAY5H,EAAOE,MAAM0H,WACzBC,iBAAkB7H,EAAOE,MAAM2H,iBAC/BC,eAAgB9H,EAAOE,MAAM4H,oBAE9B3H,qMAGG,OACEC,GAAAC,EAAAC,cAAA,OAAKG,UAAU,6BACbL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbL,GAAAC,EAAAC,cAAA,WACEF,GAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAf,aACAL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,eAAcL,GAAAC,EAAAC,cAAA,sBAA7B,kDAIJF,GAAAC,EAAAC,cAAA,OAAKG,UAAU,aACZE,KAAKC,MAAMgH,YAAcxH,GAAAC,EAAAC,cAAA,UAAQG,UAAU,MAAMF,KAAK,SAASG,QAASC,KAAKC,MAAMK,aAA1D,aAC1Bb,GAAAC,EAAAC,cAACyH,GAAD,MACCpH,KAAKC,MAAMgH,WACVxH,GAAAC,EAAAC,cAACoG,GAAD,CAAcvC,UAAWxD,KAAKC,MAAMuD,WAClC/D,GAAAC,EAAAC,cAAC0H,GAAD,CAAYlF,MAAM,kBAAkBwE,OAAQ3G,KAAKC,MAAMkH,eAAgBvH,KAAK,YAC5EH,GAAAC,EAAAC,cAAC0H,GAAD,CAAYlF,MAAM,kBAAkBwE,OAAQ3G,KAAKC,MAAMiH,iBAAkBtH,KAAK,YAG9EH,GAAAC,EAAAC,cAAA,6BACEF,GAAAC,EAAAC,cAAA,WACAF,GAAAC,EAAAC,cAAA,WAFF,yBAGwBF,GAAAC,EAAAC,cAAA,WACtBF,GAAAC,EAAAC,cAAA,UAAQG,UAAU,MAAMC,QAAS,kBAAMuH,MAAM,UAA7C,sBAzBCpH,sBCWJqH,GAvBdnI,aAAO,SAAAC,GAAM,MAAK,CACjBmI,mBAAoBnI,EAAOE,MAAMiI,mBACjCC,gBAAiBpI,EAAOE,MAAMkI,gBAC9B7H,KAAMP,EAAOE,MAAMmI,yBAEpBlI,qMAEU,IAAAoC,EAAA5B,KACP,OACEP,GAAAC,EAAAC,cAAA,OAAKG,UAAU,2BACZE,KAAKC,MAAMuH,mBAAmB5E,IAAI,SAAA+E,GAAC,OACjClI,GAAAC,EAAAC,cAAA,QACCI,QAAS,kBAAM6B,EAAK3B,MAAMwH,gBAAgBE,EAAEjF,KAC5C5C,UAAS,gBAAA2B,OAAkBG,EAAK3B,MAAML,OAAS+H,EAAEjF,GAAK,aAAa,IACnEK,IAAK4E,EAAEjF,IACNiF,EAAExF,MAJJ,IAIYwF,EAAEC,MAAQ,GAAKnI,GAAAC,EAAAC,cAAA,QAAMG,UAAU,qBAAqB6H,EAAEC,kBATjD1H,wFCyGb2H,GAxGdzI,aAAO,SAAAC,GAAM,MAAK,CACfyI,eAAgBzI,EAAOE,MAAMuI,eAC7BC,eAAgB1I,EAAOE,MAAMwI,eAC7B5G,YAAa9B,EAAOE,MAAM4B,iBAE7B3B,k1BAqCGwI,aAAe,CACXC,QAAS,CACL,CAAC,CAAEC,KAAQ,KACX,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,cACD,CAAC,CAAEC,KAAQ,WAAa,CAAEA,KAAQ,WAClC,CAAC,CAAEC,UAAa,QAChB,CAAC,CAAE1E,MAAS,IAAM,CAAE2E,WAAc,KAClC,CAAC,CAAEC,MAAS,KACZ,CAAC,qFAIA,IAAA9G,EAC6BxB,KAAKC,MAA/BsI,EADH/G,EACG+G,SAAUpH,EADbK,EACaL,YAElB,OACI1B,GAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACXL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,QACVE,KAAKwI,WACF/I,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAC8I,GAAA/I,EAAD,CACIgJ,MAAM,OACNnF,MAAOvD,KAAK2I,KACZ5E,SAAU/D,KAAK4I,kBACfC,QAAS7I,KAAKgI,eAElBvI,GAAAC,EAAAC,cAAA,yBACAF,GAAAC,EAAAC,cAAA,SACIyB,KAAK,YACLxB,KAAK,WACLkJ,QAAS9I,KAAK+I,UACdhF,SAAU/D,KAAKgE,eAElBuE,EAASS,KAAKtG,KAAOvB,EAAYuB,IAC9BjD,GAAAC,EAAAC,cAAA,OAAKG,UAAU,WACXL,GAAAC,EAAAC,cAAA,QAAMI,QAASC,KAAKiJ,eAAgB9G,MAAM,QAAO1C,GAAAC,EAAAC,cAACuJ,GAAA,EAAD,CAAiBC,KAAMC,QACxE3J,GAAAC,EAAAC,cAAA,QAAMI,QAASC,KAAKqJ,aAAclH,MAAM,UAAS1C,GAAAC,EAAAC,cAACuJ,GAAA,EAAD,CAAiBC,KAAMG,UAKpF7J,GAAAC,EAAAC,cAAA,OAAKG,UAAU,YACVyJ,KAAOhB,EAASI,MAChBJ,EAASS,MAAQT,EAASS,KAAKtG,KAAOvB,EAAYuB,IAC/CjD,GAAAC,EAAAC,cAAA,OAAKG,UAAU,WACXL,GAAAC,EAAAC,cAAA,QAAMI,QAASC,KAAKwJ,WAAYrH,MAAM,QAAO1C,GAAAC,EAAAC,cAACuJ,GAAA,EAAD,CAAiBC,KAAMM,QACpEhK,GAAAC,EAAAC,cAAA,QAAMI,QAASC,KAAK0J,aAAcvH,MAAM,UAAS1C,GAAAC,EAAAC,cAACuJ,GAAA,EAAD,CAAiBC,KAAMQ,WAO5FlK,GAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,GAAAC,EAAAC,cAAA,WAAM4I,EAASS,KAAOT,EAASS,KAAK5H,KAAOpB,KAAKC,MAAMkB,YAAYC,KAAlE,KAA0EwF,KAAO2B,EAASqB,WAAW/C,OAAO,qBA3FzG3G,iDAClBiF,8EAAkB,+CAClBA,+EAAwB,6CACxBA,+EAAuB,qDAEvBhB,0FAA2B,WACxBE,EAAKsE,KAAOtE,EAAKpE,MAAMsI,SAASI,KAChCtE,EAAK0E,UAAY1E,EAAKpE,MAAMsI,SAASQ,yDAGxC5E,0FAAsB,SAAAC,GACnBgB,EAAKhB,EAAEI,OAAOpD,MAA0B,aAAlBgD,EAAEI,OAAO5E,KAAsBwE,EAAEI,OAAOsE,QAAU1E,EAAEI,OAAOjB,0DAGpFY,0FAA2B,SAAAC,GACxBkB,EAAKqD,KAAOvE,iDAGfD,0FAAsB,WACnB0F,EAAKL,aACLK,EAAKlB,KAAOkB,EAAK5J,MAAMsI,SAASI,sDAGnCxE,0FAAwB,WACrB2F,EAAK7J,MAAM6H,eAAegC,EAAK7J,MAAMsI,SAAS7F,GAAI,CAAEiG,KAAMmB,EAAKnB,KAAMI,UAAWe,EAAKf,YACrFe,EAAKN,4DAGRrF,0FAAsB,WACnB4F,EAAK9J,MAAM8H,eAAegC,EAAK9J,MAAMsI,SAAS7F,iDAGjDyB,0FAAoB,WACjB6F,EAAKxB,YAAcwB,EAAKxB,4BC3BjByB,GAlBd7K,aAAO,SAAAC,GAAM,MAAK,CAEfO,KAAMP,EAAOE,MAAMmI,yBAEtBlI,qMAEY,IAAAoC,EAAA5B,KACL,OACIP,GAAAC,EAAAC,cAAA,WACKK,KAAKC,MAAMiK,WACRlK,KAAKC,MAAMiK,UACNC,OAAO,SAAAtF,GAAC,OAAIA,EAAEuF,SAAWxI,EAAK3B,MAAML,OACpCgD,IAAI,SAAAiC,GAAC,OAAIpF,GAAAC,EAAAC,cAAC0K,GAAD,CAAUtH,IAAK8B,EAAEnC,GAAI6F,SAAU1D,cAPzC3E,sBC+EToK,GAhFdlL,aAAO,SAAAC,GAAM,MAAK,CACfkL,eAAgBlL,EAAOE,MAAMgL,eAC7B/G,UAAWnE,EAAOE,MAAMiE,eAE3BhE,6kBAmBGwI,aAAe,CACXC,QAAS,CACL,CAAC,CAAEC,KAAQ,KACX,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,cACD,CAAC,CAAEC,KAAQ,WAAa,CAAEA,KAAQ,WAClC,CAAC,CAAEC,UAAa,QAChB,CAAC,CAAE1E,MAAS,IAAM,CAAE2E,WAAc,KAClC,CAAC,CAAEC,MAAS,KACZ,CAAC,qFAKL,OACI7I,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,0BACAF,GAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAAyB+F,SAAU7F,KAAKyF,cACpDhG,GAAAC,EAAAC,cAAA,aAAwB,IAAhBK,KAAKoK,OAAe,WAAa,QAAzC,KAEiB,IAAhBpK,KAAKoK,OAED3K,GAAAC,EAAAC,cAAC8I,GAAA/I,EAAD,CACGgJ,MAAM,OACNnF,MAAOvD,KAAK2I,KACZ5E,SAAU/D,KAAK4I,kBACfC,QAAS7I,KAAKgI,eAIjBvI,GAAAC,EAAAC,cAAA,SACGyB,KAAK,OACLxB,KAAK,OACLC,YAAY,WACZkE,SAAU/D,KAAKgE,aACfT,MAAOvD,KAAK2I,KACZ1E,UAAQ,IAIhBxE,GAAAC,EAAAC,cAAA,yBACAF,GAAAC,EAAAC,cAAA,SACIyB,KAAK,YACLxB,KAAK,WACLkJ,QAAS9I,KAAK+I,UACdhF,SAAU/D,KAAKgE,eAGnBvE,GAAAC,EAAAC,cAACoG,GAAD,CAAcvC,UAAWxD,KAAKC,MAAMuD,UAAWG,OAAQ,IACnDlE,GAAAC,EAAAC,cAAA,UAAQC,KAAK,UAAb,kBAnEMM,iDACzBiF,8EAAkB,8CAClBA,+EAAuB,0CACvBA,+EAAoB,gDAEpBhB,0FAAsB,SAAAC,GACnBC,EAAKD,EAAEI,OAAOpD,MAA0B,aAAlBgD,EAAEI,OAAO5E,KAAsBwE,EAAEI,OAAOsE,QAAU1E,EAAEI,OAAOjB,0DAGpFY,0FAA2B,SAAAC,GACxBgB,EAAKuD,KAAOvE,iDAGfD,0FAAsB,SAAAC,GACnBA,EAAEsB,iBACFJ,EAAKrF,MAAMsK,eAAejF,EAAKqD,KAAMrD,EAAKyD,UAAWzD,EAAK8E,yBCPnDI,GAfdpL,aAAO,SAAAC,GAAM,MAAK,CACfe,QAASf,EAAOE,MAAMkL,mBACtBnK,YAAajB,EAAOE,MAAMmL,4BAE7BlL,qMAGO,OACIC,GAAAC,EAAAC,cAACa,GAAA,EAAD,CAAOC,KAAMT,KAAKC,MAAMG,QAASM,QAASV,KAAKC,MAAMK,YAAa6F,QAAM,EAACC,OAAQ,CAAEC,MAAO,CAAEC,MAAO,UAC/F7G,GAAAC,EAAAC,cAACgL,GAAD,cAJezK,sBCOhB0K,GAddxL,aAAO,SAAAC,GAAM,MAAK,CACfiB,YAAajB,EAAOE,MAAMmL,kNAItB,OACIjL,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,UAAQC,KAAK,SAASE,UAAU,MAAMC,QAASC,KAAKC,MAAMK,aAA1D,gBACAb,GAAAC,EAAAC,cAACkL,GAAD,cALU3K,kBCmBX4K,GApBd1L,aAAO,SAAAC,GAAM,MAAK,CACjB0L,iBAAkB1L,EAAOE,MAAMwL,sBAEhCvL,6NAECwL,kBAAoB,WAClBpJ,EAAK3B,MAAM8K,8FAIX,OACEtL,GAAAC,EAAAC,cAAA,WACEF,GAAAC,EAAAC,cAACsL,GAAD,MACAxL,GAAAC,EAAAC,cAACuL,GAAD,CAAWhB,UAAWlK,KAAKC,MAAMiK,YACjCzK,GAAAC,EAAAC,cAACwL,GAAD,cAVmBjL,sBCgCZkL,eAvCX,SAAAA,EAAYnL,GAAO,IAAA2B,EAAA,OAAAC,OAAAC,GAAA,EAAAD,CAAA7B,KAAAoL,IACfxJ,EAAAC,OAAAE,GAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,GAAA,EAAAH,CAAAuJ,GAAAnJ,KAAAjC,KAAMC,KACDoL,MAAQ,CACTnK,SAAU,IAEdU,EAAKiE,SAAWjE,EAAKiE,SAASyF,KAAdzJ,OAAA0J,GAAA,EAAA1J,QAAA0J,GAAA,EAAA1J,CAAAD,KAChBA,EAAKmC,SAAWnC,EAAKmC,SAASuH,KAAdzJ,OAAA0J,GAAA,EAAA1J,QAAA0J,GAAA,EAAA1J,CAAAD,KANDA,0EASVwC,GACLA,EAAEsB,iBACF1F,KAAKC,MAAM4F,SAAS7F,KAAKqL,MAAMnK,2CAG1BkD,GACLpE,KAAKwL,SAAS,CAAEtK,SAAUkD,EAAEI,OAAOjB,yCAInC,OACI9D,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,WAEIF,GAAAC,EAAAC,cAAA,QAAMkG,SAAU7F,KAAK6F,UACjBpG,GAAAC,EAAAC,cAAA,SACIC,KAAK,OACLC,YAAY,OACZkE,SAAU/D,KAAK+D,SACfE,UAAQ,IAEZxE,GAAAC,EAAAC,cAAA,WACAF,GAAAC,EAAAC,cAAA,UAAQG,UAAU,MAAMF,KAAK,UAA7B,uBAhCGM,2CCiBZuL,yLAfP,OACIhM,GAAAC,EAAAC,cAAA,OAAKG,UAAU,0BACXL,GAAAC,EAAAC,cAAA,UACKK,KAAKC,MAAMyL,SAAS9I,IAAI,SAAC+I,EAASpH,GAAV,OACrB9E,GAAAC,EAAAC,cAAA,MAAIoD,IAAKwB,GACL9E,GAAAC,EAAAC,cAAA,QAAMG,UAAU,mBAAmB6L,EAAQC,UAAiB,IAC5DnM,GAAAC,EAAAC,cAAA,OAAKG,UAAU,WAAW6L,EAAQhD,kBARpCzI,cCyCX2L,eAxCX,SAAAA,EAAY5L,GAAO,IAAA2B,EAAA,OAAAC,OAAAC,GAAA,EAAAD,CAAA7B,KAAA6L,IACfjK,EAAAC,OAAAE,GAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,GAAA,EAAAH,CAAAgK,GAAA5J,KAAAjC,KAAMC,KACDoL,MAAQ,CACT1C,KAAM,IAEV/G,EAAKiE,SAAWjE,EAAKiE,SAASyF,KAAdzJ,OAAA0J,GAAA,EAAA1J,QAAA0J,GAAA,EAAA1J,CAAAD,KAChBA,EAAKmC,SAAWnC,EAAKmC,SAASuH,KAAdzJ,OAAA0J,GAAA,EAAA1J,QAAA0J,GAAA,EAAA1J,CAAAD,KANDA,0EASVwC,GACLA,EAAEsB,iBACF1F,KAAKC,MAAM4F,SAAS7F,KAAKqL,MAAM1C,MAC/B3I,KAAKwL,SAAS,CAAE7C,KAAM,sCAGjBvE,GACLpE,KAAKwL,SAAS,CAAE7C,KAAMvE,EAAEI,OAAOjB,QAC3BvD,KAAKC,MAAM8D,UACX/D,KAAKC,MAAM8D,4CAKf,OACItE,GAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,QAAMkG,SAAU7F,KAAK6F,UACjBpG,GAAAC,EAAAC,cAAA,SACIC,KAAK,OACLC,YAAY,qCACZkE,SAAU/D,KAAK+D,SACfR,MAAOvD,KAAKqL,MAAM1C,iBAhChBzI,cCef4L,yLAbP,OAAI9L,KAAKC,MAAM8L,kBAAkBhF,OAAS,EAElCtH,GAAAC,EAAAC,cAAA,OAAKG,UAAU,UAAf,GAAA2B,OACQzB,KAAKC,MAAM8L,kBACVC,MAAM,EAAG,GACTC,KAAK,SAHd,eAODxM,GAAAC,EAAAC,cAAA,mBAXeO,cCAxBgM,8LACY,IAAAtK,EAAA5B,KACV,OACIP,GAAAC,EAAAC,cAAA,MAAIG,UAAU,oBACTE,KAAKC,MAAM2F,MAAMhD,IAAI,SAACoG,EAAMzE,GACzB,OAAIyE,EAAKtG,KAAOd,EAAK3B,MAAMkB,YAAYuB,GAE/BjD,GAAAC,EAAAC,cAACwM,GAAD,CAAoBpJ,IAAKwB,EAAO6H,cAAc,UACzCpD,EAAK5H,KADV,UAMJ3B,GAAAC,EAAAC,cAACwM,GAAD,CAAoBpJ,IAAKwB,EAAO6H,cAAepD,EAAKqD,SAAShB,OACxDrC,EAAK5H,0CAS1B,OAAIpB,KAAKC,MAAM2F,MACJ5F,KAAKsM,cAEL7M,GAAAC,EAAAC,cAAA,8BA1BUO,cA+BvBqM,yLAEE,OACI9M,GAAAC,EAAAC,cAAA,UACIF,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,OAAKG,UAAU,mBAAmB0M,MAAO,CACrCC,gBAA8C,WAA7BzM,KAAKC,MAAMmM,cAA6B,UAAY,cAE7E3M,GAAAC,EAAAC,cAAA,WAAMK,KAAKC,MAAM2D,kBARA1D,cAclBgM,MCgEAQ,GAtGdtN,aAAO,SAAAC,GAAM,MAAK,CACfsN,WAAYtN,EAAOE,MAAMqN,aAAaD,iBAEzCnN,4BAEG,SAAAkN,EAAYzM,GAAO,IAAA2B,EAAA,OAAAC,OAAAC,GAAA,EAAAD,CAAA7B,KAAA0M,IACf9K,EAAAC,OAAAE,GAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,GAAA,EAAAH,CAAA6K,GAAAzK,KAAAjC,KAAMC,KACDoL,MAAQ,CACTlK,YAAa,GACb0L,YAAa,GACbnB,SAAU,GACVK,kBAAmB,IAEvBnK,EAAKkL,YAAclL,EAAKkL,YAAYxB,KAAjBzJ,OAAA0J,GAAA,EAAA1J,QAAA0J,GAAA,EAAA1J,CAAAD,KACnBA,EAAKmL,gBAAkBnL,EAAKmL,gBAAgBzB,KAArBzJ,OAAA0J,GAAA,EAAA1J,QAAA0J,GAAA,EAAA1J,CAAAD,KATRA,6EAYP+G,GACR3I,KAAKqL,MAAMlK,YAAY2L,YAAY,CAC/BnE,OACAqE,OAAQhN,KAAKqL,MAAMwB,YAAYnK,+CAKnC1C,KAAKqL,MAAMlK,YACN8L,WAAW,CAAED,OAAQhN,KAAKqL,MAAMwB,YAAYnK,KAC5CwK,MAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,QAASA,iDAG3B,IAAA9I,EAAArE,KACI,IAAIqN,KAAQC,YAAY,CACxCC,gBAAiB,8CACjB9G,OAAQzG,KAAKC,MAAMuN,gBACnBC,cAAe,IAAIJ,KAAQK,cAAc,CACrCC,IAAK,yBAMRC,UACAC,KAAK,SAAA1M,GAEF,OADAkD,EAAKmH,SAAS,CAAErK,gBACTA,EAAY2M,gBAAgB,CAC/Bd,OAAQ3I,EAAKpE,MAAM0M,WACnBoB,aAAc,IACdC,MAAO,CACHC,aAAc,SAAAtC,GACVtH,EAAKmH,SAAS,CACVE,SAAS7J,OAAAqM,GAAA,EAAArM,CAAKwC,EAAKgH,MAAMK,UAAjBjK,OAAA,CAA2BkK,OAI3CwC,oBAAqB,SAAAnF,GACjB3E,EAAKmH,SAAS,CACVO,kBAAkBlK,OAAAqM,GAAA,EAAArM,CAAKwC,EAAKgH,MAAMU,mBAAjBtK,OAAA,CAAoCuH,EAAK5H,UAIlEgN,oBAAqB,SAAApF,GACjB3E,EAAKmH,SAAS,CACVO,kBAAmB1H,EAAKgH,MAAMU,kBAAkB5B,OAC5C,SAAAjJ,GAAQ,OAAIA,IAAa8H,EAAK5H,UAK1CiN,iBAAkB,kBAAMhK,EAAKiK,eAC7BC,kBAAmB,kBAAMlK,EAAKiK,eAC9BE,aAAc,kBAAMnK,EAAKiK,oBAKpCT,KAAK,SAAAhB,GACFxI,EAAKmH,SAAS,CAAEqB,kBAEnBK,MAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,QAASA,sCAI3C,OACI1N,GAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACXL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,GAAAC,EAAAC,cAAA,SAAOG,UAAU,8BACbL,GAAAC,EAAAC,cAAC8O,GAAD,CACItN,YAAanB,KAAKqL,MAAMlK,YACxByE,MAAO5F,KAAKqL,MAAMwB,YAAYjH,SAGtCnG,GAAAC,EAAAC,cAAA,WAASG,UAAU,uBACfL,GAAAC,EAAAC,cAAC+O,GAAD,CAAahD,SAAU1L,KAAKqL,MAAMK,WAClCjM,GAAAC,EAAAC,cAACgP,GAAD,CAAiB5C,kBAAmB/L,KAAKqL,MAAMU,oBAC/CtM,GAAAC,EAAAC,cAACiP,GAAD,CAAiB/I,SAAU7F,KAAK8M,YAAa/I,SAAU/D,KAAK+M,4BA1F3D7M,wBC0BV2O,GAlCdzP,aAAO,SAAAC,GAAM,MAAK,CACfyP,UAAWzP,EAAOE,MAAMuP,gBAE3BtP,4BAEG,SAAAqP,IAAc,IAAAjN,EAAA,OAAAC,OAAAC,GAAA,EAAAD,CAAA7B,KAAA6O,IACVjN,EAAAC,OAAAE,GAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,GAAA,EAAAH,CAAAgN,GAAA5M,KAAAjC,QAOJ+O,oBAAsB,SAAA7N,GAClBU,EAAK3B,MAAM6O,UAAU,CAAE5N,aAClB2M,KAAK,SAAAmB,GACFpN,EAAK4J,SAAS,CACVgC,gBAAiBtM,EACjB+N,cAAe,iBAGtB/B,MAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,QAASA,MAd3CvL,EAAKyJ,MAAQ,CACTmC,gBAAiB,GACjByB,cAAe,4BAJTrN,0EAoBV,MAAiC,6BAA7B5B,KAAKqL,MAAM4D,cACJxP,GAAAC,EAAAC,cAACuP,GAAD,CAAcrJ,SAAU7F,KAAK+O,sBAEP,eAA7B/O,KAAKqL,MAAM4D,cACJxP,GAAAC,EAAAC,cAACwP,GAAD,CAAY3B,gBAAiBxN,KAAKqL,MAAMmC,uBADnD,SAxBoBtN,wBC8CbkP,GA/CdhQ,aAAO,SAAAC,GAAM,MAAK,CACfgQ,MAAOhQ,EAAOE,MAAMqN,aACpB5D,KAAM3J,EAAOE,MAAM4B,YACnBmO,aAAcjQ,EAAOE,MAAM+P,aAC3B9L,UAAWnE,EAAOE,MAAMiE,UACxB+L,eAAgBlQ,EAAOE,MAAMgQ,eAC7BC,iBAAkBnQ,EAAOE,MAAMiQ,iBAC/BC,iBAAkBpQ,EAAOE,MAAMkQ,iBAC/BC,gBAAiBrQ,EAAOE,MAAMmQ,sBAEjClQ,6WAaY,IACG6P,EAAUrP,KAAKC,MAAfoP,MACR,OACI5P,GAAAC,EAAAC,cAAA,OAAKG,UAAU,8BACXL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAf,aACAL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,eAAf,0DAERL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,GAAAC,EAAAC,cAACoG,GAAD,CAAcvC,UAAWxD,KAAKC,MAAMuD,WAC/B6L,GAAS5P,GAAAC,EAAAC,cAAA,wBAAgB0P,EAAMlN,OAC/BkN,GAASA,EAAM1C,YAAclN,GAAAC,EAAAC,cAACgQ,GAAD,MAC7B3P,KAAKC,MAAM+I,MAAQvJ,GAAAC,EAAAC,cAAA,UAAKK,KAAKC,MAAM+I,KAAK5H,MACzC3B,GAAAC,EAAAC,cAACiQ,GAAD,CAAc1F,UAAWlK,KAAKC,MAAMwP,8BA3BvCvP,gEAEpBiE,0FAA2B,WAAM,IAAA0L,EACiCxL,EAAKpE,MAA5DwG,EADsBoJ,EACtBpJ,OAAQqJ,EADcD,EACdC,QAASN,EADKK,EACLL,iBAAkBE,EADbG,EACaH,gBAC3CF,EAAiB,CAAEM,UAASrJ,WAC5BiJ,EAAgB,OAEZrL,EAAKpE,MAAMoP,QAAUhL,EAAKpE,MAAMoP,MAAM1C,YACtCtI,EAAKpE,MAAMsP,sCCsCRQ,GA1Dd3Q,aAAO,SAAAC,GAAM,MAAK,CACfgQ,MAAOhQ,EAAOE,MAAMqN,aACpBhH,MAAOvG,EAAOE,MAAMyQ,aACpBV,aAAcjQ,EAAOE,MAAM+P,aAC3B9L,UAAWnE,EAAOE,MAAMiE,UACxBgM,iBAAkBnQ,EAAOE,MAAMiQ,uBAElChQ,qSAOGyQ,eAAiB,SAAAjL,GACb,IAAMkL,EAAYtO,EAAK3B,MAAM2F,MACxBuE,OAAO,SAAAgG,GAAC,OAAIA,EAAEC,YAAYpL,SAAWA,IACrCpC,IAAI,SAAAuN,GAAC,OAAI1Q,GAAAC,EAAAC,cAAA,MAAIoD,IAAKoN,EAAEzN,IAAKyN,EAAE/O,MAAQ+O,EAAE9O,OAAS8O,EAAE7O,SAErD,OADa7B,GAAAC,EAAAC,cAAA,UAAKuQ,8EAIb,IACGb,EAAUrP,KAAKC,MAAfoP,MACR,OACI5P,GAAAC,EAAAC,cAAA,OAAKG,UAAU,gCACXL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,aAEXL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAf,aACAL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,eAAf,qDAGRL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,GAAAC,EAAAC,cAACoG,GAAD,CAAcvC,UAAWxD,KAAKC,MAAMuD,WAC/B6L,GACG5P,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,UAAK0P,EAAMlN,OACX1C,GAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACXL,GAAAC,EAAAC,cAAA,qBACAF,GAAAC,EAAAC,cAAA,YAAOiH,KAAOyI,EAAM1J,MAAMkB,OAAO,YACjCpH,GAAAC,EAAAC,cAAA,2BACAF,GAAAC,EAAAC,cAAA,WAAMK,KAAKiQ,eAAe,IAC1BxQ,GAAAC,EAAAC,cAAA,2BACAF,GAAAC,EAAAC,cAAA,WAAMK,KAAKiQ,eAAe,IAC1BxQ,GAAAC,EAAAC,cAAA,uBACAF,GAAAC,EAAAC,cAAA,WAAMK,KAAKiQ,eAAe,KAE9BxQ,GAAAC,EAAAC,cAAA,UAAQC,KAAK,SAASE,UAAU,MAAMC,QAAS,kBAAMuH,MAAM,UAA3D,oBAzCTpH,gEACtBiE,0FAA2B,WAAM,IAAA0L,EACgBxL,EAAKpE,MAA3CwG,EADsBoJ,EACtBpJ,OAAQqJ,EADcD,EACdC,SAChBN,EAF8BK,EACLL,kBACR,CAAEM,UAASrJ,gCCwBrB4J,GApCdjR,aAAO,SAAAC,GAAM,MAAK,CACfmQ,iBAAkBnQ,EAAOE,MAAMiQ,iBAC/Bc,WAAYjR,EAAOE,MAAMqN,aAAevN,EAAOE,MAAMqN,aAAazK,MAAQ,KAC1EoO,UAAWlR,EAAOE,MAAMiR,YAAcnR,EAAOE,MAAMiR,YAAYrO,MAAQ,KACvEsO,aAAcpR,EAAOE,MAAMkR,aAC3Bf,gBAAiBrQ,EAAOE,MAAMmQ,sBAEjClQ,6WASO,OACIC,GAAAC,EAAAC,cAAA,OAAKG,UAAU,iCACXL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAf,aACAL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,eAAf,oBAA+CE,KAAKC,MAAMsQ,UAA1D,8FAIR9Q,GAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,GAAAC,EAAAC,cAAA,2BAAmBK,KAAKC,MAAMqQ,YAC9B7Q,GAAAC,EAAAC,cAACiQ,GAAD,CAAc1F,UAAWlK,KAAKC,MAAMwQ,yBApBhCvQ,gEACvBiE,0FAA2B,WAAM,IAAA0L,EACiCxL,EAAKpE,MAA5DwG,EADsBoJ,EACtBpJ,OAAQqJ,EADcD,EACdC,QAASN,EADKK,EACLL,iBAAkBE,EADbG,EACaH,gBAC3CF,EAAiB,CAAEM,UAASrJ,WAC5BiJ,EAAgB,sCCGTgB,GAhBdtR,aAAO,SAAAC,GAAM,MAAK,CACfsR,WAAYtR,EAAOE,MAAMoR,WACzBC,gBAAiBvR,EAAOE,MAAMqR,sBAEjCpR,6WAMY,IACGmR,EAAe3Q,KAAKC,MAApB0Q,WACR,OAAOlR,GAAAC,EAAAC,cAACkR,GAAA,EAAD,CAAUzO,GAAIuO,WAPGzQ,gEAC3BiE,0FAA2B,WACxBE,EAAKpE,MAAM2Q,uCCmBJE,GA1Bd1R,aAAO,SAAAC,GAAM,MAAK,CACfmE,UAAWnE,EAAOE,MAAMiE,UACxBuN,WAAY1R,EAAOE,MAAMwR,iBAE5BvR,sMAGO,OACIC,GAAAC,EAAAC,cAAA,OAAKG,UAAU,+BACXL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAf,UACAL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,eAAf,+DAGRL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,GAAAC,EAAAC,cAACoG,GAAD,CAAcvC,UAAWxD,KAAKC,MAAMuD,WAChC/D,GAAAC,EAAAC,cAAC0H,GAAD,CAAYlF,MAAM,YAAYwE,OAAQ3G,KAAKC,MAAM8Q,WAAYnR,KAAK,mBAbvEM,wBCyBR8Q,yLA/BP,OACIvR,GAAAC,EAAAC,cAAA,OAAKG,UAAU,8BACXL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,aAEXL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,GAAAC,EAAAC,cAAA,WACIF,GAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAf,SACAL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,eAAf,0CAIRL,GAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,GAAAC,EAAAC,cAAA,sBACAF,GAAAC,EAAAC,cAAA,qBACAF,GAAAC,EAAAC,cAAA,2BACAF,GAAAC,EAAAC,cAAA,UAAIF,GAAAC,EAAAC,cAAA,KAAGsR,KAAK,uBAAuBzM,OAAO,SAAS0M,IAAI,uBAAnD,iBACJzR,GAAAC,EAAAC,cAAA,UACIF,GAAAC,EAAAC,cAAA,2BACAF,GAAAC,EAAAC,cAAA,yBACAF,GAAAC,EAAAC,cAAA,6BACAF,GAAAC,EAAAC,cAAA,2BACAF,GAAAC,EAAAC,cAAA,6BACAF,GAAAC,EAAAC,cAAA,iCAxBRO,cC2DLiR,GA5Cd/R,aAAO,SAAAC,GAAM,MAAK,CACfsR,WAAYtR,EAAOE,MAAMoR,iBAE5BnR,sMAGO,OACIC,GAAAC,EAAAC,cAACyR,GAAA,EAAD,KACI3R,GAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACVE,KAAKC,MAAM0Q,YAAclR,GAAAC,EAAAC,cAAC0R,GAAD,MAC1B5R,GAAAC,EAAAC,cAAC2R,GAAD,MAGA7R,GAAAC,EAAAC,cAAC4R,GAAA,EAAD,CAAOC,KAAK,IAAIjP,OAAK,EAACkP,OAAQ,kBAAMhS,GAAAC,EAAAC,cAAC+R,GAAD,SAGpCjS,GAAAC,EAAAC,cAAC4R,GAAA,EAAD,CAAOC,KAAK,UAAUjP,OAAK,EAACkP,OAAQ,kBAAMhS,GAAAC,EAAAC,cAACgS,GAAD,SAG1ClS,GAAAC,EAAAC,cAAC4R,GAAA,EAAD,CAAOC,KAAK,SAASjP,OAAK,EAACkP,OAAQ,kBAAMhS,GAAAC,EAAAC,cAACiS,GAAD,SAIzCnS,GAAAC,EAAAC,cAAC4R,GAAA,EAAD,CAAOC,KAAK,2BAA2BjP,OAAK,EAACkP,OAAQ,SAAAI,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACjDrS,GAAAC,EAAAC,cAACoS,GAAD,CAAcjC,QAASgC,EAAME,OAAOlC,QAASrJ,OAAQqL,EAAME,OAAOvL,YAItEhH,GAAAC,EAAAC,cAAC4R,GAAA,EAAD,CAAOC,KAAK,iCAAiCjP,OAAK,EAACkP,OAAQ,SAAAQ,GAAA,IAAGH,EAAHG,EAAGH,MAAH,OACvDrS,GAAAC,EAAAC,cAACuS,GAAD,CAAYpC,QAASgC,EAAME,OAAOlC,QAASrJ,OAAQqL,EAAME,OAAOvL,YAIpEhH,GAAAC,EAAAC,cAAC4R,GAAA,EAAD,CAAOC,KAAK,qCAAqCjP,OAAK,EAACkP,OAAQ,SAAAU,GAAA,IAAGL,EAAHK,EAAGL,MAAH,OAC3DrS,GAAAC,EAAAC,cAACyS,GAAD,CAAetC,QAASgC,EAAME,OAAOlC,QAASrJ,OAAQqL,EAAME,OAAOvL,qBA9BzEvG,yECmBHmS,GADG,IApCd,SAAAC,IAAezQ,OAAAC,GAAA,EAAAD,CAAA7B,KAAAsS,GAAAtS,KAWfuS,SAXc,eAAAV,EAAAhQ,OAAA2Q,GAAA,EAAA3Q,CAAA4Q,GAAA/S,EAAAgT,KAWH,SAAAC,EAAOC,EAAQjF,EAAKkF,GAApB,IAAA7D,EAAA,OAAAyD,GAAA/S,EAAAoT,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAG,GAGKN,EAHLG,EAAAE,KAIM,QAJNF,EAAAG,GAAA,EAOM,SAPNH,EAAAG,GAAA,EAUM,QAVNH,EAAAG,GAAA,GAaM,WAbNH,EAAAG,GAAA,0BAAAH,EAAAE,KAAA,EAKsBE,KAAMC,IAAIzF,GALhC,cAKKqB,EALL+D,EAAAM,KAAAN,EAAAO,OAAA,0BAAAP,EAAAE,KAAA,GAQsBE,KAAMI,KAAK5F,EAAKkF,GARtC,eAQK7D,EARL+D,EAAAM,KAAAN,EAAAO,OAAA,2BAAAP,EAAAE,KAAA,GAWsBE,KAAMK,IAAI7F,EAAKkF,GAXrC,eAWK7D,EAXL+D,EAAAM,KAAAN,EAAAO,OAAA,2BAAAP,EAAAE,KAAA,GAcsBE,KAAMM,OAAO9F,GAdnC,eAcKqB,EAdL+D,EAAAM,KAAAN,EAAAO,OAAA,0BAiBW,IAAII,MAAJ,sBAAAjS,OAAgCmR,IAjB3C,eAAAG,EAAAO,OAAA,SAmBItE,EAAS2E,MAnBb,cAAAZ,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAAAA,EAAAa,GAAA,yBAAAb,EAAAc,SAAAlB,EAAA3S,KAAA,aAXG,gBAAA8T,EAAAC,EAAAC,GAAA,OAAAnC,EAAA1O,MAAAnD,KAAAoD,YAAA,GACVpD,KAAKiU,YAAc,UACnBjU,KAAKkU,cAAgB,aACrBlU,KAAKmU,oBAAL,GAAA1S,OAA8BzB,KAAKkU,cAAnC,UACAlU,KAAKoU,WAAa,SAClBpU,KAAKqU,UAAY,QACjBrU,KAAKsU,gBAAL,GAAA7S,OAA0BzB,KAAKqU,UAA/B,UACArU,KAAKuU,gBAAL,GAAA9S,OAA0BzB,KAAKqU,UAA/B,WCgEOG,GADQ,2CAnEnBlF,aAAe,SAACQ,EAASrJ,GACrB,IAAMkH,EAAG,GAAAlM,OAAM4Q,GAAU4B,YAAhB,KAAAxS,OAA+BqO,EAA/B,KAAArO,OAA0CgF,GACnD,OAAO4L,GAAUE,SAAS,MAAO5E,SAIrC8G,YAAc,SAAAhO,GACV,IAAMkH,EAAG,GAAAlM,OAAM4Q,GAAU+B,WAAhB,KAAA3S,OAA8BgF,GACvC,OAAO4L,GAAUE,SAAS,MAAO5E,SAIrC+G,gBAAkB,SAAAjO,GACd,IAAMkH,EAAG,GAAAlM,OAAM4Q,GAAU+B,WAAhB,KAAA3S,OAA8BgF,GAA9BhF,OAAuC4Q,GAAU4B,aAC1D,OAAO5B,GAAUE,SAAS,MAAO5E,SAIrCgH,YAAc,SAAAtF,GACV,IAAM1B,EAAM0E,GAAU4B,YACtB,OAAO5B,GAAUE,SAAS,OAAQ5E,EAAK0B,SAI3CuF,WAAa,SAACnO,EAAQoO,GAClB,IAAMlH,EAAG,GAAAlM,OAAM4Q,GAAU+B,WAAhB,KAAA3S,OAA8BgF,GACvC,OAAO4L,GAAUE,SAAS,MAAO5E,EAAKkH,SAI1C9J,iBAAmB,WACf,IAAM4C,EAAG,GAAAlM,OAAM4Q,GAAU8B,qBACzB,OAAO9B,GAAUE,SAAS,MAAO5E,SAIrC7F,eAAiB,SAACgN,EAAYD,GAC1B,IAAMlH,EAAG,GAAAlM,OAAM4Q,GAAU6B,cAAhB,KAAAzS,OAAiCqT,GAC1C,OAAOzC,GAAUE,SAAS,MAAO5E,EAAKkH,SAI1CtK,eAAiB,SAACwK,GACd,IAAMpH,EAAM0E,GAAU6B,cACtB,OAAO7B,GAAUE,SAAS,OAAQ5E,EAAKoH,SAI3ChN,eAAiB,SAAA+M,GACb,IAAMnH,EAAG,GAAAlM,OAAM4Q,GAAU6B,cAAhB,KAAAzS,OAAiCqT,GAC1C,OAAOzC,GAAUE,SAAS,SAAU5E,SAMxC4B,eAAiB,SAAAO,GACb,IAAMnC,EAAM0E,GAAUiC,gBACtB,OAAOjC,GAAUE,SAAS,OAAQ5E,EAAK,CAAEmC,kBAG7ChB,UAAY,SAAA+D,GACR,IAAMlF,EAAM0E,GAAUkC,gBACtB,OAAOlC,GAAUE,SAAS,OAAQ5E,EAAKkF,KC9DzCmC,GAAc,OAkRLzV,GADD,kBAtPV,SAAA0V,IAAc,IAAArT,EAAA5B,KAAA6B,OAAAC,GAAA,EAAAD,CAAA7B,KAAAiV,GAAApT,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,eAAAmV,GAAAnV,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,cAAAoV,GAAApV,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,cAAAqV,GAAArV,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,eAAAsV,GAAAtV,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,mBAAAuV,GAAAvV,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,aAAAwV,GAAAxV,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,gBAAAyV,GAAAzV,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,sBAAA0V,GAAA1V,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,aAAA2V,GAAA3V,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,cAAA4V,GAAA5V,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,eAAA6V,GAAA7V,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,kBAAA8V,GAAA9V,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,qBAAA+V,GAAA/V,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,YAAAgW,GAAAhW,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,aAAAiW,GAAAjW,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,eAAAkW,GAAAlW,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,aAAAmW,GAAAnW,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,mBAAAoW,GAAApW,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,aAAAqW,GAAArW,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,qBAAAsW,GAAAtW,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,eAAAuW,GAAAvW,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,mBAAAwW,GAAAxW,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,kBAAAyW,GAAAzW,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,UAAA0W,GAAA1W,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,kBAAA2W,GAAA3W,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,WAAA4W,GAAA5W,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,aAAA6W,GAAA7W,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,iBAAA8W,GAAA9W,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,iBAAA+W,GAAA/W,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,iBAAAgX,GAAAhX,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,SAAAiX,GAAAjX,WAwLd8O,UAxLc,eAAA+C,EAAAhQ,OAAA2Q,GAAA,EAAA3Q,CAAA4Q,GAAA/S,EAAAgT,KAwLF,SAAAC,EAAME,GAAN,OAAAJ,GAAA/S,EAAAoT,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEEuB,GAAe1F,UAAU+D,GAF3B,OAAAE,EAAAE,KAAA,qBAAAF,EAAAC,KAAA,EAAAD,EAAAG,GAAAH,EAAA,SAAAA,EAAAG,GAAA,wBAAAH,EAAAc,SAAAlB,EAAA3S,KAAA,YAxLE,gBAAA8T,GAAA,OAAAjC,EAAA1O,MAAAnD,KAAAoD,YAAA,GAAApD,KAiMdkX,gBAAkBvS,aACd,kBAAA9C,OAAAiD,GAAA,EAAAjD,CAAA,GAAYD,EAAKuV,cACjB,SAAAnF,GACQA,EAAOvL,QAAUuL,EAAOlC,SACxBlO,EAAK0N,aAAa0C,EAAOlC,QAASkC,EAAOvL,UArMvCzG,KA0MdoX,oBAAsBzS,aAClB,kBAAA9C,OAAAiD,GAAA,EAAAjD,CAAA,GAAYD,EAAKT,cADSU,OAAA2Q,GAAA,EAAA3Q,CAAA4Q,GAAA/S,EAAAgT,KAE1B,SAAA2E,IAAA,OAAA5E,GAAA/S,EAAAoT,KAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,WACQrR,EAAKT,YADb,CAAAmW,EAAArE,KAAA,eAEQsE,aAAaC,QAAQxC,GAAayC,KAAKC,UAAU9V,EAAKT,cACtDS,EAAKqF,YAAa,EAH1BqQ,EAAArE,KAAA,EAIcrR,EAAK8S,kBAJnB,OAAA4C,EAAArE,KAAA,gBAOQsE,aAAaI,WAAW3C,IACxBpT,EAAKqF,YAAa,EAClBrF,EAAKmP,WAAa,GAT1B,yBAAAuG,EAAAzD,SAAAwD,EAAArX,UA5MU6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,mBAAA4X,GAAA5X,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,sBAAA6X,GAAA7X,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,yBAAA8X,GAAA9X,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,kBAAA+X,GAAA/X,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,kBAAAgY,GAAAhY,MAAA6B,OAAAqT,GAAA,EAAArT,CAAA7B,KAAA,iBAAAiY,GAAAjY,MAEVmT,KAAM+E,aAAalJ,SAASmJ,IACxB,SAAAnJ,GAAQ,OAAIA,GACZ,SAAA7B,GAOI,OAN8B,MAA1BA,EAAM6B,SAASoJ,OACfxW,EAAKyW,iBAAkB,EAGvBjL,QAAQD,MAAMA,EAAM6B,UAEjBsJ,QAAQC,OAAOpL,KAE9BnN,KAAKwY,uEAOoB,IAAAnU,EAAArE,KACzB,OAAIA,KAAKyP,iBAAiB1I,OACf/G,KAAKyP,iBAAiBtF,OAAO,SAAAtF,GAAC,OAAIA,EAAE4B,SAAWpC,EAAKlD,YAAYuB,KAEpE,+CAWP,QADe1C,KAAKmB,uDAmCpB,GAAInB,KAAKyP,iBAAiB1I,OAAQ,CAC9B,IAAMmD,EAAkC,QAAtBlK,KAAKyY,aAAyBzY,KAAKyP,iBAAmBzP,KAAKyQ,aAC7E,OAAOzQ,KAAK0Y,cACP9V,IAAI,SAAA+E,GAAC,MACD,CACGjF,GAAIiF,EAAEjF,GACNP,MAAOwF,EAAE/H,KACTgI,MAAOsC,EACFC,OAAO,SAAAtF,GAAC,OAAIA,EAAEuF,SAAWzC,EAAEjF,KAC3BqE,UAGrB,MAAO,4CAIP,OAAO/G,KAAK+Q,WAAW5G,OAAO,SAAA/F,GAAC,OAAI,IAAIuU,KAAKvU,EAAEuB,MAAQ,IAAIgT,8CAI1D,OAAO3Y,KAAK+Q,WACP5G,OAAO,SAAA/F,GACJ,IAAMwU,EAAMhS,OACNiS,EAAYjS,KAAOxC,EAAEuB,MACrBmT,EAAMlS,KAAOxC,EAAEuB,MAAMoT,IAAI,EAAG,KAClC,OAAOH,EAAII,UAAUH,EAAWC,2DAtH3C3T,+EAA0B,oDAC1BA,+EAAyB,oDACzBA,+EAAyB,qDACzBA,8EAA0B,uDAC1BA,8EAA8B,iDAC9BA,8EAAwB,oDACxBA,8EAA2B,0DAC3BA,+EAAiC,gDAEjCA,+EAAwB,iDAExBA,8EAAyB,CACtBsB,OAAQ,KACRqJ,QAAS,sDAIZ3K,+EAA0B,qDAC1BA,+EAA6B,wDAC7BA,+EAAgC,+CAChCA,+EAAuB,gDACvBA,+EAAwB,qDACxBA,+EAA0B,mDAkB1BhB,iHAAoB,SAAA8U,IAAA,OAAAxG,GAAA/S,EAAAoT,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,OACjB7N,EAAK+T,qBADY,wBAAAD,EAAArF,SAAAoF,EAAAjZ,sDAIpBoZ,kIAOAjV,0FAA0B,SAAAkV,GACvBxX,OAAOyX,KAAKD,GAAcE,QAAQ,SAAAC,GAC9BlU,EAAK6R,YAAYqC,GAAKH,EAAaG,wDAI1CJ,iIAMAjV,iHAAoB,SAAAsV,IAAA,OAAAhH,GAAA/S,EAAAoT,KAAA,SAAA4G,GAAA,cAAAA,EAAA1G,KAAA0G,EAAAzG,MAAA,cAAAyG,EAAAzG,KAAA,EACXpJ,EAAK8P,QAAQ,GADF,OAEjB9P,EAAKtJ,mBAFY,wBAAAmZ,EAAA7F,SAAA4F,EAAAzZ,+DAKpBmE,0FAA4B,WACzB2F,EAAK3I,YAAcsW,KAAKmC,MAAMrC,aAAasC,QAAQ7E,MAC5ClL,EAAK3I,6DAGfgD,kIAAsB,SAAA2V,EAAOhK,EAASrJ,GAAhB,IAAAkN,EAAA,OAAAlB,GAAA/S,EAAAoT,KAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cAAA8G,EAAA/G,KAAA,EAEfjJ,EAAKvG,WAAY,EAFFuW,EAAA9G,KAAA,EAGIuB,GAAelF,aAAaQ,EAASrJ,GAHzC,OAGTkN,EAHSoG,EAAA1G,KAIftJ,EAAK6C,aAAe+G,EAAKtE,MACzBtF,EAAKyG,YAAcmD,EAAKnR,KACxBuH,EAAK0F,iBAAmBkE,EAAKzJ,UAC7BH,EAAKiG,aAAe2D,EAAK/N,MACzBmE,EAAK4P,QAAQlT,GACbsD,EAAKvG,WAAY,EATFuW,EAAA9G,KAAA,uBAAA8G,EAAA/G,KAAA,GAAA+G,EAAA7G,GAAA6G,EAAA,SAAAA,EAAA7G,GAAA,yBAAA6G,EAAAlG,SAAAiG,EAAA9Z,KAAA,yHActBmE,iHAA0B,SAAA6V,IAAA,OAAAvH,GAAA/S,EAAAoT,KAAA,SAAAmH,GAAA,cAAAA,EAAAjH,KAAAiH,EAAAhH,MAAA,cAAAgH,EAAAhH,KAAA,EAEIuB,GAAezJ,mBAFnB,OAEvBf,EAAK0O,cAFkBuB,EAAA5G,KAAA,wBAAA4G,EAAApG,SAAAmG,EAAAha,4DAK1BoZ,qIAgBAA,iIAIAA,mIAUAjV,0FAAyB,SAAAiG,GACtB8P,EAAKxS,oBAAsB0C,8CAG9BjG,kIAAiB,SAAAgW,EAAM1T,GAAN,IAAAuC,EAAA,OAAAyJ,GAAA/S,EAAAoT,KAAA,SAAAsH,GAAA,cAAAA,EAAApH,KAAAoH,EAAAnH,MAAA,cAAAmH,EAAApH,KAAA,EAEVqH,EAAK7W,WAAY,EAFP4W,EAAAnH,KAAA,EAGSuB,GAAeC,YAAYhO,GAHpC,OAGJuC,EAHIoR,EAAA/G,KAIVgH,EAAKlZ,YAAc6H,EACnBqR,EAAK7W,WAAY,EALP4W,EAAAnH,KAAA,sBAAAmH,EAAApH,KAAA,EAAAoH,EAAAlH,GAAAkH,EAAA,SAAAA,EAAAlH,GAAA,yBAAAkH,EAAAvG,SAAAsG,EAAAna,KAAA,qHAUjBmE,iHAAyB,SAAAmW,IAAA,IAAA3T,EAAA,OAAA8L,GAAA/S,EAAAoT,KAAA,SAAAyH,GAAA,cAAAA,EAAAvH,KAAAuH,EAAAtH,MAAA,cAAAsH,EAAAvH,KAAA,EAElBwH,EAAKhX,WAAY,EAFC+W,EAAAtH,KAAA,EAGGuB,GAAeE,gBAAgB8F,EAAKrZ,YAAYuB,IAHnD,OAGZiE,EAHY4T,EAAAlH,KAIlBmH,EAAKzJ,WAAapK,EAClB6T,EAAKhX,WAAY,EALC+W,EAAAtH,KAAA,sBAAAsH,EAAAvH,KAAA,EAAAuH,EAAArH,GAAAqH,EAAA,SAAAA,EAAArH,GAAA,yBAAAqH,EAAA1G,SAAAyG,EAAAta,KAAA,wDAUzBmE,kIAAkB,SAAAsW,EAAOtY,EAAOwD,EAAMC,EAAO8U,GAA3B,IAAAjU,EAAA4I,EAAA,OAAAoD,GAAA/S,EAAAoT,KAAA,SAAA6H,GAAA,cAAAA,EAAA3H,KAAA2H,EAAA1H,MAAA,cAAA0H,EAAA3H,KAAA,EAEX4H,EAAKpX,WAAY,EACXiD,EAASmU,EAAKzZ,YAAYuB,GAHrBiY,EAAA1H,KAAA,EAISuB,GAAeG,YAAY,CAAExS,QAAOwD,OAAMc,SAAQb,UAJ3D,OAILyJ,EAJKsL,EAAAtH,KAKXuH,EAAK1U,sBACL0U,EAAKpX,WAAY,EACbkX,IACAE,EAAKjK,WAAL,GAAAlP,OAAqB4Q,GAAU4B,YAA/B,KAAAxS,OAA8C4N,EAAM3M,GAApD,KAAAjB,OAA0DmZ,EAAKzZ,YAAYuB,KAE/EkY,EAAK7J,WAAW1L,KAAKgK,GAVVsL,EAAA1H,KAAA,uBAAA0H,EAAA3H,KAAA,GAAA2H,EAAAzH,GAAAyH,EAAA,SAAAA,EAAAzH,GAAA,yBAAAyH,EAAA9G,SAAA4G,EAAAza,KAAA,uHAelBmE,kIAAoB,SAAA0W,EAAMhG,GAAN,IAAA7L,EAAA,OAAAyJ,GAAA/S,EAAAoT,KAAA,SAAAgI,GAAA,cAAAA,EAAA9H,KAAA8H,EAAA7H,MAAA,cAAA6H,EAAA9H,KAAA,EAAA8H,EAAA7H,KAAA,EAEMuB,GAAeI,WAAWmG,EAAK5Z,YAAYuB,GAAImS,GAFrD,QAEP7L,EAFO8R,EAAAzH,QAIT0H,EAAK5Z,YAAc6H,GAJV8R,EAAA7H,KAAA,sBAAA6H,EAAA9H,KAAA,EAAA8H,EAAA5H,GAAA4H,EAAA,SAAAA,EAAA5H,GAAA,yBAAA4H,EAAAjH,SAAAgH,EAAA7a,KAAA,oHAUpBmE,kIAAwB,SAAA6W,EAAOrS,EAAMI,EAAWqB,GAAxB,IAAA3D,EAAAqJ,EAAAvH,EAAA,OAAAkK,GAAA/S,EAAAoT,KAAA,SAAAmI,GAAA,cAAAA,EAAAjI,KAAAiI,EAAAhI,MAAA,cAAAgI,EAAAjI,KAAA,EAEjBkI,EAAK1X,WAAY,EACXiD,EAASyU,EAAK/Z,YAAYuB,GAC1BoN,EAAUoL,EAAKtO,aAAalK,GAJjBuY,EAAAhI,KAAA,EAKMuB,GAAejK,eAAe,CAAE9D,SAAQqJ,UAASnH,OAAMI,YAAWqB,WALxE,OAKX7B,EALW0S,EAAA5H,KAMjB6H,EAAKxQ,yBACLwQ,EAAK1X,WAAY,EACjB0X,EAAKzL,iBAAiBpK,KAAKkD,GARV0S,EAAAhI,KAAA,uBAAAgI,EAAAjI,KAAA,GAAAiI,EAAA/H,GAAA+H,EAAA,SAAAA,EAAA/H,GAAA,yBAAA+H,EAAApH,SAAAmH,EAAAhb,KAAA,yHAaxBmE,kIAAwB,SAAAgX,EAAOrG,EAAYD,GAAnB,IAAAuG,EAAA,OAAA3I,GAAA/S,EAAAoT,KAAA,SAAAuI,GAAA,cAAAA,EAAArI,KAAAqI,EAAApI,MAAA,cAAAoI,EAAApI,KAAA,EACEuB,GAAe1M,eAAegN,EAAYD,GAD5C,OAAAwG,EAAAhI,OAGb+H,EAAkBE,EAAK7L,iBAAiB8L,KAAK,SAAA1W,GAAC,OAAIA,EAAEnC,KAAOoS,IAC/DjT,OAAOyX,KAAKzE,GAAc0E,QAAQ,SAAAC,GAC9B4B,EAAgB5B,GAAK3E,EAAa2E,MALrB,wBAAA6B,EAAAxH,SAAAsH,EAAAnb,mHAUxBmE,kIAAwB,SAAAqX,EAAM1G,GAAN,IAAA2G,EAAA,OAAAhJ,GAAA/S,EAAAoT,KAAA,SAAA4I,GAAA,cAAAA,EAAA1I,KAAA0I,EAAAzI,MAAA,cAAAyI,EAAAzI,KAAA,EACfuB,GAAezM,eAAe+M,GADf,OAEjB2G,EAAeE,EAAKlM,iBAAiBmM,UAAU,SAAA/W,GAAC,OAAIA,EAAEnC,KAAOoS,IACjE6G,EAAKlM,iBAAiBoM,OAAOJ,EAAc,GAHtB,wBAAAC,EAAA7H,SAAA2H,EAAAxb,yGAMxBmE,0FAAgB,WAEb2X,EAAK3a,YAAc,KACnB2a,EAAK3E,YAAYrH,QAAU,KAC3BgM,EAAK3E,YAAY1Q,OAAS,KAC1BqV,EAAKnL,WAAa,yDAsCrBxM,0FAA0B,WACvB4X,EAAK1b,cAAgB0b,EAAK1b,qEAG7B8D,0FAA6B,WAC1B6X,EAAK/V,iBAAmB+V,EAAK/V,2EAGhC9B,0FAAgC,WAC7B8X,EAAKxR,oBAAsBwR,EAAKxR,uEAGnCtG,0FAAyB,WACtB+X,EAAKvL,WAAa,yDAGrBxM,0FAAyB,SAAAgY,GACtBC,EAAK3D,aAAe0D,qDAIvBhY,iHAAwB,SAAAkY,IAAA,IAAArP,EAAA,OAAAyF,GAAA/S,EAAAoT,KAAA,SAAAwJ,GAAA,cAAAA,EAAAtJ,KAAAsJ,EAAArJ,MAAA,cAAAqJ,EAAArJ,KAAA,EACAuB,GAAejF,eAAegN,EAAK3P,aAAalK,IADhD,OACfsK,EADesP,EAAAjJ,KAErBkJ,EAAK3P,aAAaD,WAAaK,EAFV,wBAAAsP,EAAAzI,SAAAwI,EAAArc,gBC1Q7Bwc,KAAS/K,OACLhS,GAAAC,EAAAC,cAAC8c,GAAA,EAAD,CAAUld,MAAOA,IACbE,GAAAC,EAAAC,cAAC+c,GAAD,OAEJC,SAASC,eAAe","file":"static/js/main.4a9b65e3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n    dummyLogin: stores.store.dummyLogin\r\n}))\r\n@observer\r\nclass LoginForm extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type='text' placeholder='Username' />\r\n                <br />\r\n                <button className='btn' type='button' onClick={this.props.dummyLogin}>Login</button>\r\n                <br />\r\n                <small><i>hard-coded login user 'Ami' for now</i></small>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Modal from 'react-responsive-modal';\r\nimport LoginForm from './LoginForm';\r\n\r\n\r\n@inject(stores => ({\r\n    isModal: stores.store.isLoginModal,\r\n    toggleModal: stores.store.toggleLoginModal\r\n}))\r\n@observer\r\nclass LoginModal extends Component {\r\n    render() {\r\n        return (\r\n            <Modal open={this.props.isModal} onClose={this.props.toggleModal} closeOnEsc={false} closeOnOverlayClick={false}>\r\n                <LoginForm />\r\n            </Modal >\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginModal;","import React, { Component } from 'react';\r\nimport LoginModal from './LoginModal';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n  toggleModal: stores.store.toggleLoginModal,\r\n}))\r\n@observer\r\nclass LoginButton extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span onClick={this.props.toggleModal}>Login</span>\r\n                <LoginModal />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginButton;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport LoginButton from './LoginButton';\r\n\r\n@inject(stores => ({\r\n    currentUserExists: stores.store.currentUserExists,\r\n    username: stores.store.currentUser ? (stores.store.currentUser.name || stores.store.currentUser.email || stores.store.currentUser.phone) : '',\r\n    logout: stores.store.logout\r\n}))\r\n@observer\r\nclass LoginControl extends Component {\r\n    render() {\r\n        const { currentUserExists, logout, username } = this.props;\r\n\r\n        return (\r\n            <div className='login-btn'>\r\n                {currentUserExists ?\r\n                    <span onClick={logout}>{`Hi ${username}, Logout`}</span>\r\n                    :\r\n                    <LoginButton />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginControl;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport LoginControl from '../login/LoginControl';\r\n\r\nclass NavBar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.links = [\r\n            // { title: '🎉', to: '/' },\r\n            // { title: 'Surprizer', to: '/' },\r\n            { title: 'My Events', to: '/events' },\r\n            { title: 'About', to: '/about' }\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <div className='outer-wrapper'>\r\n                    <div className='container'>\r\n                        <NavLink activeClassName='active-link'  to=\"/\" className=\"logo\" exact><span role=\"img\" aria-label=\"Surprizer title\">🎉</span> Surprizer</NavLink>\r\n                        <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\r\n                        <label className=\"menu-icon\" htmlFor=\"menu-btn\"><span className=\"navicon\"></span></label>\r\n                        <ul className=\"menu\">\r\n                            {this.links.map((l, i) => <li key={i}><NavLink to={l.to} activeClassName='active-link' exact>{l.title}</NavLink></li>)}\r\n                            <li><LoginControl /></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            // <div className='outer-wrapper nav-wrapper'>\r\n            //     <div className='container nav-container'>\r\n            //         {this.links.map((l, i) => <NavLink key={i} to={l.to} activeClassName='active-link' exact>{l.title}</NavLink>)}\r\n            //         <LoginControl />\r\n            //     </div>\r\n            // </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport class CustomLoader extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.isLoading ?\r\n                    (<div className=\"loader-container\">\r\n                        <Loader type=\"Circles\" color=\"#9c27b0\" height={this.props.height || 80} />\r\n                    </div>)\r\n                    :\r\n                    <div>{this.props.children}</div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomLoader;","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { action } from 'mobx';\r\n\r\n@observer\r\nclass GuestInput extends Component {\r\n\r\n    @action handleChange = e => {\r\n        this.props.updateGuest(this.props.index, e.target.name, e.target.value);\r\n    };\r\n\r\n    render() {\r\n        const { guest } = this.props;\r\n\r\n        return (\r\n            <div className='guest-input'>\r\n                <select name='type' value={guest.type} onChange={this.handleChange} required>\r\n                    <option value='' disabled>-</option>\r\n                    <option value='email'>Email</option>\r\n                    <option value='phone'>Phone</option>\r\n                </select>\r\n\r\n                {guest.type === 'email' &&\r\n                    <input\r\n                        name='email'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        onChange={this.handleChange}\r\n                        value={guest.email}\r\n                        required\r\n                    />\r\n                }\r\n\r\n                {guest.type === 'phone' &&\r\n                    <input\r\n                        name='phone'\r\n                        type='tel'\r\n                        placeholder='Phone'\r\n                        onChange={this.handleChange}\r\n                        value={guest.phone}\r\n                        required\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuestInput;","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable, action, reaction } from 'mobx';\r\n\r\nimport GuestInput from './GuestInput';\r\n\r\n@observer\r\nclass GuestPicker extends Component {\r\n    @observable guests = [{ type: '', email: '', phone: '' }];\r\n\r\n    @action addInput = () => {\r\n        this.guests.push({ type: '', email: '', phone: '' });\r\n    };\r\n\r\n    @action updateGuest = (index, type, value) => {\r\n        this.guests[index][type] = value;\r\n    };\r\n\r\n    guestsChange = reaction(\r\n        () => this.guests.map(g => { return { ...g } }),\r\n        guests => this.props.setUsersFromPicker(guests, this.props.roleId)\r\n    );\r\n\r\n    render() {\r\n        return (\r\n            <div className='guest-picker'>\r\n                {this.guests.map((g, i) =>\r\n                    <GuestInput key={i} guest={g} index={i} updateGuest={this.updateGuest} />\r\n                )}\r\n                <button className='icon-button' type='button' onClick={this.addInput}>+</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuestPicker;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\n\r\nimport GuestPicker from '../forms/guestPicker/GuestPicker';\r\nimport CustomLoader from '../general/CustomLoader';\r\n\r\n@inject(stores => ({\r\n    addEvent: stores.store.addEvent,\r\n    isLoading: stores.store.isLoading\r\n}))\r\n@observer\r\nclass NewEventForm extends Component {\r\n    @observable title = '';\r\n    @observable date = '';\r\n    @observable users = {};\r\n\r\n    @action handleChange = e => {\r\n        this[e.target.name] = e.target.value;\r\n    };\r\n\r\n    @action setUsersFromPicker = (guests, roleId) => {\r\n        this.users[roleId] = guests;\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.addEvent(this.title, this.date, this.users, true);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>New Event</h2>\r\n                <form className='form new-event-form' onSubmit={this.handleSubmit}>\r\n                    <label>Title:</label>\r\n                    <input\r\n                        name='title'\r\n                        type='text'\r\n                        placeholder='Title'\r\n                        onChange={this.handleChange}\r\n                        value={this.title}\r\n                        required\r\n                    />\r\n\r\n                    <label>Date:</label>\r\n                    <input\r\n                        name='date'\r\n                        type='datetime-local'\r\n                        placeholder='date'\r\n                        onChange={this.handleChange}\r\n                        value={this.date}\r\n                        required\r\n                    />\r\n\r\n                    <label>Guests:</label>\r\n                    <GuestPicker roleId={2} setUsersFromPicker={this.setUsersFromPicker} />\r\n\r\n                    <label>Surprisees:</label>\r\n                    <GuestPicker roleId={3} setUsersFromPicker={this.setUsersFromPicker} />\r\n\r\n                    <CustomLoader isLoading={this.props.isLoading} height={40}>\r\n                        <button className='btn' type='submit'>Save</button>\r\n                    </CustomLoader>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewEventForm;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Modal from 'react-responsive-modal';\r\n\r\nimport NewEventForm from './NewEventForm';\r\n\r\n@inject(stores => ({\r\n    isModal: stores.store.isNewEventModal,\r\n    toggleModal: stores.store.toggleNewEventModal\r\n}))\r\n@observer\r\nclass NewEventModal extends Component {\r\n    render() {\r\n        return (\r\n            <Modal open={this.props.isModal} onClose={this.props.toggleModal} center styles={{ modal: { width: '100%' } }}>\r\n                <NewEventForm />\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewEventModal;","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n@inject(stores => ({\r\n    userId: stores.store.currentUser ? stores.store.currentUser.id : null,\r\n}))\r\n@observer\r\nclass UserEvents extends Component {\r\n    getEvents = () => {\r\n        const { events, userId, type } = this.props;\r\n        return events.map(e => {\r\n            return (<div key={e.id}>\r\n                <span>{e.title}</span>\r\n                <span>{moment(e.date).format('L HH:mm')}</span>\r\n                <span><Link to={`/events/${e.id}/${userId}`}>details</Link></span>\r\n                <span><Link to={`/events/${e.id}/${userId}/greetings`}>greetings</Link></span>\r\n                {type === 'current' && <span><Link to={`/events/${e.id}/${userId}/party`}>party!</Link></span>}\r\n            </div>)\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>{this.props.title}</h3>\r\n                <div className='user-events'>{this.props.events.length ? this.getEvents() : 'Nothing at the moment...'}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserEvents;","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport CustomLoader from '../general/CustomLoader';\r\nimport NewEventModal from './NewEventModal';\r\nimport UserEvents from './UserEvents';\r\n\r\n@inject(stores => ({\r\n  toggleModal: stores.store.toggleNewEventModal,\r\n  isLoading: stores.store.isLoading,\r\n  isSignedIn: stores.store.isSignedIn,\r\n  futureUserEvents: stores.store.futureUserEvents,\r\n  currentParties: stores.store.currentParties,\r\n}))\r\n@observer\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className='outer-wrapper home banner'>\r\n        <div className='container'>\r\n          <div className='hero'>\r\n            <div>\r\n              <div className='title'>Surprize!</div>\r\n              <div className='description'><b>Surprizer</b> lets you organize virtual surprise parties.</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='main-body'>\r\n            {this.props.isSignedIn && <button className='btn' type='button' onClick={this.props.toggleModal}>New Event</button>}\r\n            <NewEventModal />\r\n            {this.props.isSignedIn ? (\r\n              <CustomLoader isLoading={this.props.isLoading}>\r\n                <UserEvents title='Current Parties' events={this.props.currentParties} type='current' />\r\n                <UserEvents title='Upcoming Events' events={this.props.futureUserEvents} type='future' />\r\n              </CustomLoader>\r\n            ) : (\r\n                <div>Please sign in.\r\n                  <br />\r\n                  <br />\r\n                  Don't have an account?<br />\r\n                  <button className='btn' onClick={() => alert('soon')}>Sign Up</button>\r\n                </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n  greetingTabsTitles: stores.store.greetingTabsTitles,\r\n  setGreetingType: stores.store.setGreetingType,\r\n  type: stores.store.currentGreetingType,\r\n}))\r\n@observer\r\nclass GreetingsTabs extends Component {\r\n  render() {\r\n    return (\r\n      <div className='greeting-tabs-container'>\r\n        {this.props.greetingTabsTitles.map(t =>\r\n          (<span\r\n            onClick={() => this.props.setGreetingType(t.id)}\r\n            className={`greeting-tab ${this.props.type === t.id ? 'active-tab':''}`}\r\n            key={t.id}>\r\n            {t.title} {t.count > 0 && <span className='greeting-tab-pill'>{t.count}</span>}\r\n          </span>)\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GreetingsTabs;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport ReactQuill from 'react-quill';\r\nimport '../../../node_modules/react-quill/dist/quill.snow.css';\r\nimport Parser from 'html-react-parser';\r\nimport moment from 'moment';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faSave, faTrash, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@inject(stores => ({\r\n    updateGreeting: stores.store.updateGreeting,\r\n    deleteGreeting: stores.store.deleteGreeting,\r\n    currentUser: stores.store.currentUser\r\n}))\r\n@observer\r\nclass Greeting extends Component {\r\n    @observable text = '';\r\n    @observable isEditMode = false;\r\n    @observable isPrivate = false;\r\n\r\n    @action componentDidMount = () => {\r\n        this.text = this.props.greeting.text;\r\n        this.isPrivate = this.props.greeting.isPrivate;\r\n    };\r\n\r\n    @action handleChange = e => {\r\n        this[e.target.name] = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n    };\r\n\r\n    @action handleChangeQuill = e => {\r\n        this.text = e;\r\n    };\r\n\r\n    @action handleCancel = () => {\r\n        this.toggleEdit();\r\n        this.text = this.props.greeting.text;\r\n    };\r\n\r\n    @action handleSaveText = () => {\r\n        this.props.updateGreeting(this.props.greeting.id, { text: this.text, isPrivate: this.isPrivate });\r\n        this.toggleEdit();\r\n    };\r\n\r\n    @action handleDelete = () => {\r\n        this.props.deleteGreeting(this.props.greeting.id);\r\n    };\r\n\r\n    @action toggleEdit = () => {\r\n        this.isEditMode = !this.isEditMode;\r\n    };\r\n\r\n    quillModules = {\r\n        toolbar: [\r\n            [{ 'font': [] }],\r\n            ['bold', 'italic', 'underline', 'strike'],\r\n            ['blockquote'],\r\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n            [{ 'direction': 'rtl' }],\r\n            [{ 'color': [] }, { 'background': [] }],\r\n            [{ 'align': [] }],\r\n            ['clean']\r\n        ],\r\n    }\r\n\r\n    render() {\r\n        const { greeting, currentUser } = this.props;\r\n\r\n        return (\r\n            <div className='greeting-wrapper'>\r\n                <div className='left'>\r\n                    {this.isEditMode ?\r\n                        <div>\r\n                            <ReactQuill\r\n                                theme='snow'\r\n                                value={this.text}\r\n                                onChange={this.handleChangeQuill}\r\n                                modules={this.quillModules}\r\n                            />\r\n                            <label>Private:</label>\r\n                            <input\r\n                                name='isPrivate'\r\n                                type='checkbox'\r\n                                checked={this.isPrivate}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            {greeting.user.id === currentUser.id &&\r\n                                <div className='buttons'>\r\n                                    <span onClick={this.handleSaveText} title='Save'><FontAwesomeIcon icon={faSave} /></span>\r\n                                    <span onClick={this.handleCancel} title='Cancel'><FontAwesomeIcon icon={faTimes} /></span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div className='readonly'>\r\n                            {Parser(greeting.text)}\r\n                            {greeting.user && greeting.user.id === currentUser.id &&\r\n                                <div className='buttons'>\r\n                                    <span onClick={this.toggleEdit} title='Edit'><FontAwesomeIcon icon={faEdit} /></span>\r\n                                    <span onClick={this.handleDelete} title='Delete'><FontAwesomeIcon icon={faTrash} /></span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n                <div className='right'>\r\n                    <div>{greeting.user ? greeting.user.name : this.props.currentUser.name}, {moment(greeting.createdAt).format('L HH:mm')}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Greeting;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Greeting from './Greeting';\r\n\r\n@inject(stores => ({\r\n    // greetings: stores.store.currentGreetings,\r\n    type: stores.store.currentGreetingType,\r\n}))\r\n@observer\r\nclass Greetings extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.greetings &&\r\n                    this.props.greetings\r\n                        .filter(g => g.typeId === this.props.type)\r\n                        .map(g => <Greeting key={g.id} greeting={g} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Greetings;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport ReactQuill from 'react-quill';\r\nimport '../../../node_modules/react-quill/dist/quill.snow.css';\r\n\r\nimport CustomLoader from '../general/CustomLoader';\r\n\r\n@inject(stores => ({\r\n    createGreeting: stores.store.createGreeting,\r\n    isLoading: stores.store.isLoading\r\n}))\r\n@observer\r\nclass AddGreetingForm extends Component {\r\n    @observable text = '';\r\n    @observable isPrivate = false;\r\n    @observable typeId = 1;\r\n\r\n    @action handleChange = e => {\r\n        this[e.target.name] = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n    };\r\n\r\n    @action handleChangeQuill = e => {\r\n        this.text = e;\r\n    };\r\n\r\n    @action handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.createGreeting(this.text, this.isPrivate, this.typeId);\r\n    };\r\n\r\n    quillModules = {\r\n        toolbar: [\r\n            [{ 'font': [] }],\r\n            ['bold', 'italic', 'underline', 'strike'],\r\n            ['blockquote'],\r\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n            [{ 'direction': 'rtl' }],\r\n            [{ 'color': [] }, { 'background': [] }],\r\n            [{ 'align': [] }],\r\n            ['clean']\r\n        ],\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Add Greeting</h2>\r\n                <form className='form new-greeting-form' onSubmit={this.handleSubmit}>\r\n                    <label>{this.typeId === 1 ? 'Greeting' : 'Title'}:</label>\r\n\r\n                    {this.typeId === 1 ?\r\n                        //  Rich text editor for text greetings }\r\n                        (<ReactQuill\r\n                            theme='snow'\r\n                            value={this.text}\r\n                            onChange={this.handleChangeQuill}\r\n                            modules={this.quillModules}\r\n                        />)\r\n                        :\r\n                        // Simple text input for file greetings }\r\n                        (<input\r\n                            name='text'\r\n                            type='text'\r\n                            placeholder='Greeting'\r\n                            onChange={this.handleChange}\r\n                            value={this.text}\r\n                            required\r\n                        />)\r\n                    }\r\n\r\n                    <label>Private:</label>\r\n                    <input\r\n                        name='isPrivate'\r\n                        type='checkbox'\r\n                        checked={this.isPrivate}\r\n                        onChange={this.handleChange}\r\n                    />\r\n\r\n                    <CustomLoader isLoading={this.props.isLoading} height={40}>\r\n                        <button type='submit'>Save</button>\r\n                    </CustomLoader>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddGreetingForm;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Modal from 'react-responsive-modal';\r\n\r\nimport AddGreetingForm from './AddGreetingForm';\r\n\r\n@inject(stores => ({\r\n    isModal: stores.store.isAddGreetingModal,\r\n    toggleModal: stores.store.toggleAddGreetingModal\r\n}))\r\n@observer\r\nclass AddGreetingModal extends Component {\r\n    render() {\r\n        return (\r\n            <Modal open={this.props.isModal} onClose={this.props.toggleModal} center styles={{ modal: { width: '100%' } }}>\r\n                <AddGreetingForm />\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddGreetingModal;","import React, { Component } from 'react';\r\nimport AddGreetingModal from './AddGreetingModal';\r\nimport { inject } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n    toggleModal: stores.store.toggleAddGreetingModal\r\n}))\r\nclass AddGreeting extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button type='button' className='btn' onClick={this.props.toggleModal}>Add Greeting</button>\r\n                <AddGreetingModal />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddGreeting;","import React, { Component } from 'react';\r\nimport GreetingsTabs from './GreetingsTabs';\r\nimport Greetings from './Greetings';\r\nimport { inject, observer } from 'mobx-react';\r\nimport AddGreeting from './AddGreeting';\r\n\r\n@inject(stores => ({\r\n  getGreetingTypes: stores.store.getGreetingTypes\r\n}))\r\n@observer\r\nclass GreetingsBox extends Component {\r\n  componentDidMount = () => {\r\n    this.props.getGreetingTypes();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <GreetingsTabs />\r\n        <Greetings greetings={this.props.greetings} />\r\n        <AddGreeting />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GreetingsBox;","import React, { Component } from 'react'\r\n\r\nclass UsernameForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this) //refactor\r\n        this.onChange = this.onChange.bind(this)\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state.username)\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ username: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {/* <h3>What is your name?</h3> */}\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Name\"\r\n                            onChange={this.onChange}\r\n                            required\r\n                        />\r\n                        <br />\r\n                        <button className='btn' type=\"submit\">Join Chat</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsernameForm","import React, { Component } from 'react';\r\n\r\nclass MessageList extends Component {\r\n    render() {\r\n        return (\r\n            <div className='message-list-container'>\r\n                <ul>\r\n                    {this.props.messages.map((message, index) => (\r\n                        <li key={index}>\r\n                            <span className='sender-username'>{message.senderId}</span>{' '}\r\n                            <div className='message'>{message.text}</div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList;","import React, { Component } from 'react';\r\n\r\nclass SendMessageForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            text: '',\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state.text)\r\n        this.setState({ text: '' })\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ text: e.target.value })\r\n        if (this.props.onChange) {\r\n            this.props.onChange()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='send-container'>\r\n                <div>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Type a message here then hit ENTER\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.text}\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendMessageForm;","import React, { Component } from 'react';\r\n\r\nclass TypingIndicator extends Component {\r\n    render() {\r\n        if (this.props.usersWhoAreTyping.length > 0) {\r\n            return (\r\n                <div className='typing'>\r\n                    {`${this.props.usersWhoAreTyping\r\n                        .slice(0, 2)\r\n                        .join(' and ')} is typing`}\r\n                </div>\r\n            )\r\n        }\r\n        return <div />\r\n    }\r\n}\r\n\r\nexport default TypingIndicator;","import React, { Component } from 'react';\r\n\r\nclass WhosOnlineList extends Component {\r\n    renderUsers() {\r\n        return (\r\n            <ul className='whos-online-list'>\r\n                {this.props.users.map((user, index) => {\r\n                    if (user.id === this.props.currentUser.id) {\r\n                        return (\r\n                            <WhosOnlineListItem key={index} presenceState=\"online\">\r\n                                {user.name} (You)\r\n                      </WhosOnlineListItem>\r\n                        )\r\n                    }\r\n                    return (\r\n                        <WhosOnlineListItem key={index} presenceState={user.presence.state}>\r\n                            {user.name}\r\n                        </WhosOnlineListItem>\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (this.props.users) {\r\n            return this.renderUsers()\r\n        } else {\r\n            return <p>Loading...</p>\r\n        }\r\n    }\r\n}\r\n\r\nclass WhosOnlineListItem extends Component {\r\n    render() {\r\n        return (\r\n            <li>\r\n                <div>\r\n                    <div className='whos-online-pill' style={{\r\n                        backgroundColor: this.props.presenceState === 'online' ? '#539eff' : '#414756',\r\n                    }} /></div>\r\n                <div>{this.props.children}</div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WhosOnlineList;","import React, { Component } from 'react';\r\nimport Chatkit from '@pusher/chatkit';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport MessageList from './MessageList';\r\nimport SendMessageForm from './SendMessageForm';\r\nimport TypingIndicator from './TypingIndicator';\r\nimport WhosOnlineList from './WhosOnlineList';\r\n\r\n@inject(stores => ({\r\n    chatRoomId: stores.store.currentEvent.chatRoomId\r\n}))\r\n@observer\r\nclass ChatScreen extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentUser: {},\r\n            currentRoom: {},\r\n            messages: [],\r\n            usersWhoAreTyping: [],\r\n        }\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.sendTypingEvent = this.sendTypingEvent.bind(this)\r\n    }\r\n\r\n    sendMessage(text) {\r\n        this.state.currentUser.sendMessage({\r\n            text,\r\n            roomId: this.state.currentRoom.id,\r\n        })\r\n    }\r\n\r\n    sendTypingEvent() {\r\n        this.state.currentUser\r\n            .isTypingIn({ roomId: this.state.currentRoom.id })\r\n            .catch(error => console.error('error', error))\r\n    }\r\n\r\n    componentDidMount() {\r\n        const chatManager = new Chatkit.ChatManager({\r\n            instanceLocator: 'v1:us1:09d50864-3dac-4251-b92a-0b851b4da892',\r\n            userId: this.props.currentUsername,\r\n            tokenProvider: new Chatkit.TokenProvider({\r\n                url: '/chat/authenticate',\r\n                // url: 'http://localhost:5000/chat/authenticate',\r\n            }),\r\n        })\r\n\r\n        chatManager\r\n            .connect()\r\n            .then(currentUser => {\r\n                this.setState({ currentUser });\r\n                return currentUser.subscribeToRoom({\r\n                    roomId: this.props.chatRoomId,\r\n                    messageLimit: 100,\r\n                    hooks: {\r\n                        onNewMessage: message => {\r\n                            this.setState({\r\n                                messages: [...this.state.messages, message],\r\n                            })\r\n                        },\r\n\r\n                        onUserStartedTyping: user => {\r\n                            this.setState({\r\n                                usersWhoAreTyping: [...this.state.usersWhoAreTyping, user.name],\r\n                            })\r\n                        },\r\n\r\n                        onUserStoppedTyping: user => {\r\n                            this.setState({\r\n                                usersWhoAreTyping: this.state.usersWhoAreTyping.filter(\r\n                                    username => username !== user.name\r\n                                ),\r\n                            })\r\n                        },\r\n\r\n                        onUserCameOnline: () => this.forceUpdate(),\r\n                        onUserWentOffline: () => this.forceUpdate(),\r\n                        onUserJoined: () => this.forceUpdate(),\r\n                    },\r\n                })\r\n\r\n            })\r\n            .then(currentRoom => {\r\n                this.setState({ currentRoom })\r\n            })\r\n            .catch(error => console.error('error', error))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='chat-screen-container'>\r\n                <div className='chat-container'>\r\n                    <aside className='whos-online-list-container'>\r\n                        <WhosOnlineList\r\n                            currentUser={this.state.currentUser}\r\n                            users={this.state.currentRoom.users}\r\n                        />\r\n                    </aside>\r\n                    <section className='chat-list-container'>\r\n                        <MessageList messages={this.state.messages} />\r\n                        <TypingIndicator usersWhoAreTyping={this.state.usersWhoAreTyping} />\r\n                        <SendMessageForm onSubmit={this.sendMessage} onChange={this.sendTypingEvent} />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatScreen;","import React, { Component } from 'react';\r\nimport UsernameForm from './UsernameForm';\r\nimport ChatScreen from './ChatScreen';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n    chatLogin: stores.store.chatLogin\r\n}))\r\n@observer\r\nclass ChatContainer extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            currentUsername: '',\r\n            currentScreen: 'WhatIsYourUsernameScreen',\r\n        }\r\n    }\r\n\r\n    onUsernameSubmitted = username => {\r\n        this.props.chatLogin({ username })\r\n            .then(response => {\r\n                this.setState({\r\n                    currentUsername: username,\r\n                    currentScreen: 'ChatScreen',\r\n                })\r\n            })\r\n            .catch(error => console.error('error', error))\r\n    }\r\n\r\n    render() {  //refactor//////////////////////////////\r\n        if (this.state.currentScreen === 'WhatIsYourUsernameScreen') {\r\n            return <UsernameForm onSubmit={this.onUsernameSubmitted} />\r\n        }\r\n        if (this.state.currentScreen === 'ChatScreen') {\r\n            return <ChatScreen currentUsername={this.state.currentUsername} />\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChatContainer;","import React, { Component } from 'react';\r\nimport { action } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport GreetingsBox from '../greetings/GreetingsBox';\r\nimport CustomLoader from '../general/CustomLoader';\r\nimport ChatContainer from '../chat/ChatContainer';\r\n\r\n@inject(stores => ({\r\n    event: stores.store.currentEvent,\r\n    user: stores.store.currentUser,\r\n    getEventFull: stores.store.getEventFull,\r\n    isLoading: stores.store.isLoading,\r\n    createChatRoom: stores.store.createChatRoom,\r\n    parseQueryParams: stores.store.parseQueryParams,\r\n    currentGreetings: stores.store.currentGreetings,\r\n    setGreetingView: stores.store.setGreetingView,\r\n}))\r\n@observer\r\nclass EventParty extends Component {\r\n\r\n    @action componentDidMount = () => {\r\n        const { userId, eventId, parseQueryParams, setGreetingView } = this.props;\r\n        parseQueryParams({ eventId, userId });\r\n        setGreetingView('all');\r\n\r\n        if (this.props.event && !this.props.event.chatRoomId) {\r\n            this.props.createChatRoom();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { event } = this.props;\r\n        return (\r\n            <div className='outer-wrapper party banner'>\r\n                <div className='container'>\r\n                    <div className='hero'>\r\n                        <div>\r\n                            <div className='title'>Party on!</div>\r\n                            <div className='description'>This is the real party! Chat with people and mingle.</div>\r\n                        </div></div>\r\n                    <div className='main-body'>\r\n                        <CustomLoader isLoading={this.props.isLoading}>\r\n                            {event && <h3>Welcome to {event.title}</h3>}\r\n                            {event && event.chatRoomId && <ChatContainer />}\r\n                            {this.props.user && <h2>{this.props.user.name}</h2>}\r\n                            <GreetingsBox greetings={this.props.currentGreetings} />\r\n                        </CustomLoader>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventParty;","import React, { Component } from 'react';\r\nimport { action } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\nimport moment from 'moment';\r\n\r\nimport CustomLoader from '../general/CustomLoader';\r\n\r\n@inject(stores => ({\r\n    event: stores.store.currentEvent,\r\n    users: stores.store.currentUsers,\r\n    getEventFull: stores.store.getEventFull,\r\n    isLoading: stores.store.isLoading,\r\n    parseQueryParams: stores.store.parseQueryParams,\r\n}))\r\n@observer\r\nclass EventDetails extends Component {\r\n    @action componentDidMount = () => {\r\n        const { userId, eventId, parseQueryParams } = this.props;\r\n        parseQueryParams({ eventId, userId });\r\n    };\r\n\r\n    getUsersByRole = roleId => {\r\n        const userItems = this.props.users\r\n            .filter(u => u.eventsUsers.roleId === roleId)\r\n            .map(u => <li key={u.id}>{u.name || u.email || u.phone}</li>);\r\n        const list = <ul>{userItems}</ul>;\r\n        return list;\r\n    };\r\n\r\n    render() {\r\n        const { event } = this.props;\r\n        return (\r\n            <div className='outer-wrapper banner details'>\r\n                <div className='container'>\r\n\r\n                    <div className='hero'>\r\n                        <div>\r\n                            <div className='title'>The Event</div>\r\n                            <div className='description'>Some details about the event you're organizing.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='main-body'>\r\n                        <CustomLoader isLoading={this.props.isLoading}>\r\n                            {event && (\r\n                                <div>\r\n                                    <h3>{event.title}</h3>\r\n                                    <div className='event-datails'>\r\n                                        <span>Date:</span>\r\n                                        <span>{moment(event.date).format('L HH:mm')}</span>\r\n                                        <span>Organizers:</span>\r\n                                        <div>{this.getUsersByRole(1)}</div>\r\n                                        <span>Surprizees:</span>\r\n                                        <div>{this.getUsersByRole(3)}</div>\r\n                                        <span>Guests:</span>\r\n                                        <div>{this.getUsersByRole(2)}</div>\r\n                                    </div>\r\n                                    <button type='button' className='btn' onClick={() => alert('soon')}>Edit</button>\r\n                                </div>\r\n                            )}\r\n                        </CustomLoader>\r\n                    </div></div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventDetails;","import React, { Component } from 'react';\r\nimport { action } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport GreetingsBox from '../greetings/GreetingsBox';\r\n\r\n@inject(stores => ({\r\n    parseQueryParams: stores.store.parseQueryParams,\r\n    eventTitle: stores.store.currentEvent ? stores.store.currentEvent.title : null,\r\n    roleTItle: stores.store.currentRole ? stores.store.currentRole.title : null,\r\n    ownGreetings: stores.store.ownGreetings,\r\n    setGreetingView: stores.store.setGreetingView,\r\n}))\r\n@observer\r\nclass GreetingsMgmt extends Component {\r\n    @action componentDidMount = () => {\r\n        const { userId, eventId, parseQueryParams, setGreetingView } = this.props;\r\n        parseQueryParams({ eventId, userId });\r\n        setGreetingView('own');\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='outer-wrapper greeting banner'>\r\n                <div className='container'>\r\n                    <div className='hero'>\r\n                        <div>\r\n                            <div className='title'>Greetings</div>\r\n                            <div className='description'>Your are here as {this.props.roleTItle}. Here you can write greetings and upload files that will be seen on the surprize party.</div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='main-body'>\r\n                        <h3>Greetings for {this.props.eventTitle}</h3>\r\n                        <GreetingsBox greetings={this.props.ownGreetings} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GreetingsMgmt;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { action } from 'mobx';\r\n\r\n@inject(stores => ({\r\n    redirectTo: stores.store.redirectTo,\r\n    resetRedirectTo: stores.store.resetRedirectTo,\r\n}))\r\n@observer\r\nclass RedirectIntercept extends Component {\r\n    @action componentDidMount = () => {\r\n        this.props.resetRedirectTo();\r\n    };\r\n\r\n    render() {\r\n        const { redirectTo } = this.props;\r\n        return <Redirect to={redirectTo} />\r\n    }\r\n}\r\n\r\nexport default RedirectIntercept;","import React, { Component } from 'react';\r\nimport CustomLoader from '../general/CustomLoader';\r\nimport UserEvents from '../home/UserEvents';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n    isLoading: stores.store.isLoading,\r\n    userEvents: stores.store.userEvents,\r\n}))\r\n@observer\r\nclass MyEvents extends Component {\r\n    render() {\r\n        return (\r\n            <div className='outer-wrapper events banner'>\r\n                <div className='container'>\r\n                    <div className='hero'>\r\n                        <div>\r\n                            <div className='title'>Events</div>\r\n                            <div className='description'>Here you can view all your events, past present & future.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='main-body'>\r\n                        <CustomLoader isLoading={this.props.isLoading}>\r\n                            <UserEvents title='My Events' events={this.props.userEvents} type='all' />\r\n                        </CustomLoader>\r\n                    </div>\r\n                </div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyEvents;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div className='outer-wrapper about banner'>\r\n                <div className='container'>\r\n\r\n                    <div className='hero'>\r\n                        <div>\r\n                            <div className='title'>About</div>\r\n                            <div className='description'>A little bit about Surprizer and me.</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='main-body'>\r\n                        <h3>About Me</h3>\r\n                        <div>I'm me</div>\r\n                        <h3>Photo Credits</h3>\r\n                        <h4><a href='https://unsplash.com' target='_blank' rel=\"noopener noreferrer\">unsplash.com</a></h4>\r\n                        <ul>\r\n                            <li>Ambreen Hasan</li>\r\n                            <li>Jason Leung</li>\r\n                            <li>Pablo Heimplatz</li>\r\n                            <li>Adi Goldstein</li>\r\n                            <li>Monique Carrati</li>\r\n                            <li>rawpixel</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\nimport NavBar from './components/general/NavBar';\r\nimport Home from './components/home/Home';\r\nimport EventParty from './components/mainPages/EventParty';\r\nimport EventDetails from './components/mainPages/EventDetails';\r\nimport GreetingsMgmt from './components/mainPages/GreetingsMgmt';\r\n// import Header from './components/general/Header';\r\nimport RedirectIntercept from './components/general/RedirectIntercept';\r\n\r\nimport { inject, observer } from 'mobx-react';\r\nimport MyEvents from './components/mainPages/MyEvents';\r\nimport About from './components/mainPages/About';\r\n\r\n@inject(stores => ({\r\n    redirectTo: stores.store.redirectTo\r\n}))\r\n@observer\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className='page-container'>\r\n                    {this.props.redirectTo && <RedirectIntercept />}\r\n                    <NavBar />\r\n\r\n                    {/* Home page */}\r\n                    <Route path=\"/\" exact render={() => <Home />} />\r\n\r\n                    {/* My events page */}\r\n                    <Route path=\"/events\" exact render={() => <MyEvents />} />\r\n\r\n                    {/* About page */}\r\n                    <Route path=\"/about\" exact render={() => <About />} />\r\n\r\n                    {/* TODO: ===================== if response with wrong params - redirect to 401 page */}\r\n                    {/* Event details page, visible to organizer */}\r\n                    <Route path=\"/events/:eventId/:userId\" exact render={({ match }) => (\r\n                        <EventDetails eventId={match.params.eventId} userId={match.params.userId} />\r\n                    )} />\r\n\r\n                    {/* Live party page, visible to everyone (content security trimmed) */}\r\n                    <Route path=\"/events/:eventId/:userId/party\" exact render={({ match }) => (\r\n                        <EventParty eventId={match.params.eventId} userId={match.params.userId} />\r\n                    )} />\r\n\r\n                    {/* Upload greetins page, visible to guests */}\r\n                    <Route path=\"/events/:eventId/:userId/greetings\" exact render={({ match }) => (\r\n                        <GreetingsMgmt eventId={match.params.eventId} userId={match.params.userId} />\r\n                    )} />\r\n\r\n                    {/* <Header /> */}\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import axios from 'axios';\r\n\r\nclass AjaxUtils {\r\n    constructor() {\r\n        this.EVENTS_PATH = '/events';\r\n        this.GREETING_PATH = '/greetings';\r\n        this.GREETING_TYPES_PATH = `${this.GREETING_PATH}/types`;\r\n        this.USERS_PATH = '/users';\r\n        this.CHAT_PATH = '/chat';\r\n        this.CHAT_ROOMS_PATH = `${this.CHAT_PATH}/rooms`;\r\n        this.CHAT_USERS_PATH = `${this.CHAT_PATH}/users`;\r\n    }\r\n\r\n    // Return a promise\r\n    queryApi = async (method, url, body) => {\r\n        let response;\r\n        try {\r\n            switch (method) {\r\n                case 'get':\r\n                    response = await axios.get(url);\r\n                    break;\r\n                case 'post':\r\n                    response = await axios.post(url, body);\r\n                    break;\r\n                case 'put':\r\n                    response = await axios.put(url, body);\r\n                    break;\r\n                case 'delete':\r\n                    response = await axios.delete(url);\r\n                    break;\r\n                default:\r\n                    throw new Error(`Unexpected method: ${method}`);\r\n            }\r\n            return response.data;\r\n        }\r\n        catch (error) { throw error; }\r\n    };\r\n}\r\n\r\nconst ajaxUtils = new AjaxUtils();\r\nexport default ajaxUtils;","import ajaxUtils from './AjaxUtils';\r\n\r\n// Return a promise\r\nclass TransportLayer {\r\n\r\n    // Get event with all greetings (trimmed by user permissions)\r\n    getEventFull = (eventId, userId) => {\r\n        const url = `${ajaxUtils.EVENTS_PATH}/${eventId}/${userId}`;\r\n        return ajaxUtils.queryApi('get', url);\r\n    };\r\n\r\n    // Get event with all greetings (trimmed by user permissions)\r\n    getUserById = userId => {\r\n        const url = `${ajaxUtils.USERS_PATH}/${userId}`;\r\n        return ajaxUtils.queryApi('get', url);\r\n    };\r\n\r\n    // Get events for current user (minus future events where he's surprisee)\r\n    getEventsByUser = userId => {\r\n        const url = `${ajaxUtils.USERS_PATH}/${userId}${ajaxUtils.EVENTS_PATH}`;\r\n        return ajaxUtils.queryApi('get', url);\r\n    };\r\n\r\n    // Create event\r\n    createEvent = event => {\r\n        const url = ajaxUtils.EVENTS_PATH;\r\n        return ajaxUtils.queryApi('post', url, event);\r\n    }\r\n\r\n    // Update user\r\n    updateUser = (userId, updateObject) => {\r\n        const url = `${ajaxUtils.USERS_PATH}/${userId}`;\r\n        return ajaxUtils.queryApi('put', url, updateObject);\r\n    };\r\n\r\n    // Get greeting types\r\n    getGreetingTypes = () => {\r\n        const url = `${ajaxUtils.GREETING_TYPES_PATH}`;\r\n        return ajaxUtils.queryApi('get', url);\r\n    }\r\n\r\n    // Update greeting\r\n    updateGreeting = (greetingId, updateObject) => {\r\n        const url = `${ajaxUtils.GREETING_PATH}/${greetingId}`;\r\n        return ajaxUtils.queryApi('put', url, updateObject);\r\n    };\r\n\r\n    // Create greeting\r\n    createGreeting = (greetingObject) => {\r\n        const url = ajaxUtils.GREETING_PATH;\r\n        return ajaxUtils.queryApi('post', url, greetingObject);\r\n    };\r\n\r\n    // Delete greeting\r\n    deleteGreeting = greetingId => {\r\n        const url = `${ajaxUtils.GREETING_PATH}/${greetingId}`;\r\n        return ajaxUtils.queryApi('delete', url);\r\n    };\r\n\r\n    // ===== chat related\r\n\r\n    // Create chat room\r\n    createChatRoom = eventId => {\r\n        const url = ajaxUtils.CHAT_ROOMS_PATH;\r\n        return ajaxUtils.queryApi('post', url, { eventId });\r\n    }\r\n\r\n    chatLogin = body => {\r\n        const url = ajaxUtils.CHAT_USERS_PATH;\r\n        return ajaxUtils.queryApi('post', url, body);\r\n    };\r\n}\r\n\r\nconst transportLayer = new TransportLayer();\r\nexport default transportLayer;","import { observable, action, reaction, computed } from 'mobx';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport transportLayer from '../utils/TransportLayer';\r\nimport ajaxUtils from '../utils/AjaxUtils';\r\n\r\nconst LS_USER_KEY = 'user';\r\n\r\nclass Store {\r\n    @observable currentEvent = null;\r\n    @observable currentUser = null;\r\n    @observable currentRole = null;\r\n    @observable currentUsers = [];\r\n    @observable currentGreetings = [];\r\n    @observable userEvents = [];\r\n    @observable greetingTypes = [];\r\n    @observable currentGreetingType = 1;\r\n\r\n    @observable isSignedIn = false;\r\n\r\n    @observable queryParams = {\r\n        userId: null,\r\n        eventId: null\r\n    };\r\n\r\n    // UI related\r\n    @observable isLoginModal = false;\r\n    @observable isNewEventModal = false;\r\n    @observable isAddGreetingModal = false;\r\n    @observable isLoading = false;\r\n    @observable redirectTo = null;\r\n    @observable greetingView = null;\r\n\r\n    constructor() {\r\n        // Handle ajax errors\r\n        axios.interceptors.response.use(\r\n            response => response,\r\n            error => {\r\n                if (error.response.status === 401) {\r\n                    this.isAuthenticated = false;\r\n                }\r\n                else {\r\n                    console.error(error.response);\r\n                }\r\n                return Promise.reject(error);\r\n            });\r\n        this.initialize();\r\n    };\r\n\r\n    @action initialize = async () => {\r\n        this.getUserFromStorage();\r\n    };\r\n\r\n    @computed get ownGreetings() {\r\n        if (this.currentGreetings.length) {\r\n            return this.currentGreetings.filter(g => g.userId === this.currentUser.id);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    @action parseQueryParams = paramsObject => {\r\n        Object.keys(paramsObject).forEach(k => {\r\n            this.queryParams[k] = paramsObject[k];\r\n        });\r\n    };\r\n\r\n    @computed get currentUserExists() {\r\n        const exists = this.currentUser ? true : false;\r\n        return exists;\r\n    }\r\n\r\n    // Only until proper login implemented\r\n    @action dummyLogin = async () => {\r\n        await this.getUser(1);\r\n        this.toggleLoginModal();\r\n    };\r\n\r\n    @action getUserFromStorage = () => {\r\n        this.currentUser = JSON.parse(localStorage.getItem(LS_USER_KEY))\r\n            || this.currentUser;\r\n    };\r\n\r\n    @action getEventFull = async (eventId, userId) => {\r\n        try {\r\n            this.isLoading = true;\r\n            const data = await transportLayer.getEventFull(eventId, userId);\r\n            this.currentEvent = data.event;\r\n            this.currentRole = data.role;\r\n            this.currentGreetings = data.greetings;\r\n            this.currentUsers = data.users;\r\n            this.getUser(userId);\r\n            this.isLoading = false;\r\n        }\r\n        catch (err) { throw err; }\r\n    }\r\n\r\n    @action getGreetingTypes = async () => {\r\n        // TODO: only if something changed on the server\r\n        this.greetingTypes = await transportLayer.getGreetingTypes();\r\n    }\r\n\r\n    @computed get greetingTabsTitles() {\r\n        if (this.currentGreetings.length) {\r\n            const greetings = this.greetingView === 'all' ? this.currentGreetings : this.ownGreetings;\r\n            return this.greetingTypes\r\n                .map(t =>\r\n                    ({\r\n                        id: t.id,\r\n                        title: t.type,\r\n                        count: greetings\r\n                            .filter(g => g.typeId === t.id)\r\n                            .length\r\n                    }))\r\n        }\r\n        return [];\r\n    };\r\n\r\n    @computed get futureUserEvents() {\r\n        return this.userEvents.filter(e => new Date(e.date) > new Date());\r\n    };\r\n\r\n    @computed get currentParties() {\r\n        return this.userEvents\r\n            .filter(e => {\r\n                const now = moment();\r\n                const eventDate = moment(e.date);\r\n                const end = moment(e.date).add(4, 'h');\r\n                return now.isBetween(eventDate, end);\r\n            });\r\n    };\r\n\r\n    @action setGreetingType = typeId => {\r\n        this.currentGreetingType = typeId;\r\n    }\r\n\r\n    @action getUser = async userId => {\r\n        try {\r\n            this.isLoading = true;\r\n            const user = await transportLayer.getUserById(userId);\r\n            this.currentUser = user;\r\n            this.isLoading = false;\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action getEventsByUser = async () => {\r\n        try {\r\n            this.isLoading = true;\r\n            const events = await transportLayer.getEventsByUser(this.currentUser.id);\r\n            this.userEvents = events;\r\n            this.isLoading = false;\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action addEvent = async (title, date, users, isRedirect) => {\r\n        try {\r\n            this.isLoading = true;\r\n            const userId = this.currentUser.id;\r\n            const event = await transportLayer.createEvent({ title, date, userId, users });\r\n            this.toggleNewEventModal();\r\n            this.isLoading = false;\r\n            if (isRedirect) {\r\n                this.redirectTo = `${ajaxUtils.EVENTS_PATH}/${event.id}/${this.currentUser.id}`;\r\n            }\r\n            this.userEvents.push(event);\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action updateUser = async updateObject => {\r\n        try {\r\n            const user = await transportLayer.updateUser(this.currentUser.id, updateObject);\r\n            if (user) {\r\n                this.currentUser = user;\r\n            }\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action createGreeting = async (text, isPrivate, typeId) => {\r\n        try {\r\n            this.isLoading = true;\r\n            const userId = this.currentUser.id;\r\n            const eventId = this.currentEvent.id;\r\n            const greeting = await transportLayer.createGreeting({ userId, eventId, text, isPrivate, typeId });\r\n            this.toggleAddGreetingModal();\r\n            this.isLoading = false;\r\n            this.currentGreetings.push(greeting);\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action updateGreeting = async (greetingId, updateObject) => {\r\n        const greeting = await transportLayer.updateGreeting(greetingId, updateObject);\r\n        if (greeting) {\r\n            let currentGreeting = this.currentGreetings.find(g => g.id === greetingId);\r\n            Object.keys(updateObject).forEach(k => {\r\n                currentGreeting[k] = updateObject[k];\r\n            });\r\n        }\r\n    };\r\n\r\n    @action deleteGreeting = async greetingId => {\r\n        await transportLayer.deleteGreeting(greetingId);\r\n        let currentIndex = this.currentGreetings.findIndex(g => g.id === greetingId);\r\n        this.currentGreetings.splice(currentIndex, 1);\r\n    };\r\n\r\n    @action logout = () => {\r\n        // TODO: logout user if he's signed-in\r\n        this.currentUser = null;\r\n        this.queryParams.eventId = null;\r\n        this.queryParams.userId = null;\r\n        this.redirectTo = '/';\r\n    };\r\n\r\n    chatLogin = async body => {\r\n        try {\r\n            await transportLayer.chatLogin(body);\r\n        }\r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    getEventDetails = reaction(\r\n        () => ({ ...this.queryParams }),\r\n        params => {\r\n            if (params.userId && params.eventId) {\r\n                this.getEventFull(params.eventId, params.userId);\r\n            }\r\n        }\r\n    );\r\n\r\n    updateUserInStorage = reaction(\r\n        () => ({ ...this.currentUser }),\r\n        async () => {\r\n            if (this.currentUser) {\r\n                localStorage.setItem(LS_USER_KEY, JSON.stringify(this.currentUser))\r\n                this.isSignedIn = true;\r\n                await this.getEventsByUser();\r\n            }\r\n            else {\r\n                localStorage.removeItem(LS_USER_KEY);\r\n                this.isSignedIn = false;\r\n                this.userEvents = [];\r\n            }\r\n        }\r\n    );\r\n\r\n    // UI related\r\n    @action toggleLoginModal = () => {\r\n        this.isLoginModal = !this.isLoginModal;\r\n    };\r\n\r\n    @action toggleNewEventModal = () => {\r\n        this.isNewEventModal = !this.isNewEventModal;\r\n    };\r\n\r\n    @action toggleAddGreetingModal = () => {\r\n        this.isAddGreetingModal = !this.isAddGreetingModal;\r\n    };\r\n\r\n    @action resetRedirectTo = () => {\r\n        this.redirectTo = null;\r\n    };\r\n\r\n    @action setGreetingView = view => {\r\n        this.greetingView = view;\r\n    };\r\n\r\n    // Chat related\r\n    @action createChatRoom = async () => {\r\n        const roomId = await transportLayer.createChatRoom(this.currentEvent.id);\r\n        this.currentEvent.chatRoomId = roomId;\r\n    };\r\n}\r\n\r\nconst store = new Store();\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\n\nimport './index.css';\nimport App from './App';\nimport store from './stores/Store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));"],"sourceRoot":""}