{"version":3,"sources":["components/login/LoginForm.js","components/login/LoginModal.js","components/login/LoginButton.js","components/login/LoginControl.js","components/general/NavBar.js","components/general/CustomLoader.js","components/forms/guestPicker/GuestInput.js","components/forms/guestPicker/GuestPicker.js","components/home/NewEventForm.js","components/home/NewEventModal.js","components/home/UserEvents.js","components/home/Home.js","components/greetings/GreetingsTabs.js","components/greetings/Greeting.js","components/greetings/Greetings.js","components/greetings/AddGreetingForm.js","components/greetings/AddGreetingModal.js","components/greetings/AddGreeting.js","components/greetings/GreetingsBox.js","components/chat/UsernameForm.js","components/chat/MessageList.js","components/chat/SendMessageForm.js","components/chat/TypingIndicator.js","components/chat/WhosOnlineList.js","components/chat/ChatScreen.js","components/chat/ChatContainer.js","components/mainPages/EventParty.js","components/mainPages/EventDetails.js","components/mainPages/GreetingsMgmt.js","components/general/RedirectIntercept.js","components/mainPages/MyEvents.js","components/mainPages/About.js","App.js","utils/AjaxUtils.js","utils/TransportLayer.js","stores/Store.js","index.js"],"names":["LoginForm","inject","stores","dummyLogin","store","observer","react_default","a","createElement","type","placeholder","className","onClick","this","props","Component","LoginModal","isModal","isLoginModal","toggleModal","toggleLoginModal","index_es","open","onClose","closeOnEsc","closeOnOverlayClick","login_LoginForm","LoginButton","login_LoginModal","LoginControl","currentUserExists","username","currentUser","name","email","phone","logout","_this$props","concat","login_LoginButton","NavBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","initializerDefineProperty","_descriptor","assertThisInitialized","_descriptor2","_descriptor3","links","title","to","_this2","NavLink","handleClick","activeClassName","exact","role","aria-label","checked","isChecked","onChange","handleCheck","id","htmlFor","map","l","i","key","login_LoginControl","observable","action","e","_this3","target","_this4","CustomLoader","_Component","apply","arguments","inherits","createClass","value","isLoading","react_loader_spinner_default","color","height","children","GuestInput","guest","handleChange","required","disabled","updateGuest","index","GuestPicker","guestsChange","reaction","guests","g","objectSpread","setUsersFromPicker","roleId","guestPicker_GuestInput","addInput","push","NewEventForm","addEvent","handleSubmit","preventDefault","date","users","onSubmit","guestPicker_GuestPicker","general_CustomLoader","NewEventModal","isNewEventModal","toggleNewEventModal","center","styles","modal","width","home_NewEventForm","UserEvents","userId","getEvents","events","moment","format","Link","length","Home","isSignedIn","futureUserEvents","currentParties","home_NewEventModal","home_UserEvents","alert","GreetingsTabs","greetingTabsTitles","setGreetingType","currentGreetingType","t","count","Greeting","updateGreeting","deleteGreeting","quillModules","toolbar","font","list","direction","background","align","greeting","isEditMode","lib_default","theme","text","handleChangeQuill","modules","isPrivate","user","handleSaveText","react_fontawesome_index_es","icon","faSave","handleCancel","faTimes","Parser","toggleEdit","faEdit","handleDelete","faTrash","createdAt","_this5","_this6","_this7","_this8","Greetings","greetings","filter","typeId","greetings_Greeting","AddGreetingForm","createGreeting","AddGreetingModal","isAddGreetingModal","toggleAddGreetingModal","greetings_AddGreetingForm","AddGreeting","greetings_AddGreetingModal","GreetingsBox","getGreetingTypes","componentDidMount","greetings_GreetingsTabs","greetings_Greetings","greetings_AddGreeting","UsernameForm","state","bind","setState","MessageList","messages","message","senderId","SendMessageForm","typ","TypingIndicator","usersWhoAreTyping","slice","join","WhosOnlineList","WhosOnlineList_WhosOnlineListItem","presenceState","presence","renderUsers","WhosOnlineListItem","style","backgroundColor","ChatScreen","chatRoomId","currentEvent","currentRoom","sendMessage","sendTypingEvent","roomId","isTypingIn","catch","error","console","Chatkit","ChatManager","instanceLocator","currentUsername","tokenProvider","TokenProvider","url","connect","then","subscribeToRoom","messageLimit","hooks","onNewMessage","toConsumableArray","onUserStartedTyping","onUserStoppedTyping","onUserCameOnline","forceUpdate","onUserWentOffline","onUserJoined","chat_WhosOnlineList","chat_MessageList","chat_TypingIndicator","chat_SendMessageForm","ChatContainer","chatLogin","onUsernameSubmitted","response","currentScreen","chat_UsernameForm","chat_ChatScreen","EventParty","event","getEventFull","createChatRoom","parseQueryParams","currentGreetings","setGreetingView","chat_ChatContainer","greetings_GreetingsBox","_this2$props","eventId","EventDetails","currentUsers","getUsersByRole","userItems","u","eventsUsers","GreetingsMgmt","eventTitle","roleTItle","currentRole","ownGreetings","RedirectIntercept","redirectTo","resetRedirectTo","Redirect","MyEvents","userEvents","About","href","rel","App","BrowserRouter","general_RedirectIntercept","general_NavBar","Route","path","render","home_Home","mainPages_MyEvents","mainPages_About","_ref","match","mainPages_EventDetails","params","_ref2","mainPages_EventParty","_ref3","mainPages_GreetingsMgmt","ajaxUtils","AjaxUtils","queryApi","asyncToGenerator","regenerator_default","mark","_callee","method","body","wrap","_context","prev","next","t0","axios","get","sent","abrupt","post","put","delete","Error","data","t1","stop","_x","_x2","_x3","EVENTS_PATH","GREETING_PATH","GREETING_TYPES_PATH","USERS_PATH","CHAT_PATH","CHAT_ROOMS_PATH","CHAT_USERS_PATH","transportLayer","getUserById","getEventsByUser","createEvent","updateUser","updateObject","greetingId","greetingObject","LS_USER_KEY","Store","Store_descriptor","Store_descriptor2","Store_descriptor3","Store_descriptor4","Store_descriptor5","Store_descriptor6","Store_descriptor7","Store_descriptor8","Store_descriptor9","Store_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","getEventDetails","queryParams","updateUserInStorage","_callee2","_context2","localStorage","setItem","JSON","stringify","removeItem","_descriptor32","_descriptor33","_descriptor34","_descriptor35","_descriptor36","_descriptor37","interceptors","use","Promise","reject","initialize","greetingView","greetingTypes","Date","now","eventDate","end","add","isBetween","_callee3","_context3","getUserFromStorage","computed","paramsObject","keys","forEach","k","_callee4","_context4","getUser","parse","getItem","_callee5","_context5","_callee6","_context6","_this9","_callee7","_context7","_this10","_callee8","_context8","_this11","_callee9","isRedirect","_context9","_this12","_callee10","_context10","_this13","_callee11","_context11","_this14","_callee12","currentGreeting","_context12","_this15","find","_callee13","currentIndex","_context13","_this16","findIndex","splice","_this17","_this18","_this19","_this20","_this21","view","_this22","_callee14","_context14","_this23","ReactDOM","index_module","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7651b43c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n    dummyLogin: stores.store.dummyLogin\r\n}))\r\n@observer\r\nclass LoginForm extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type='text' placeholder='Username' />\r\n                <br />\r\n                <button className='btn' type='button' onClick={this.props.dummyLogin}>Login</button>\r\n                <br />\r\n                <small><i>hard-coded login user 'Ami' for now</i></small>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Modal from 'react-responsive-modal';\r\nimport LoginForm from './LoginForm';\r\n\r\n\r\n@inject(stores => ({\r\n    isModal: stores.store.isLoginModal,\r\n    toggleModal: stores.store.toggleLoginModal\r\n}))\r\n@observer\r\nclass LoginModal extends Component {\r\n    render() {\r\n        return (\r\n            <Modal open={this.props.isModal} onClose={this.props.toggleModal} closeOnEsc={false} closeOnOverlayClick={false}>\r\n                <LoginForm />\r\n            </Modal >\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginModal;","import React, { Component } from 'react';\r\nimport LoginModal from './LoginModal';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n  toggleModal: stores.store.toggleLoginModal,\r\n}))\r\n@observer\r\nclass LoginButton extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span onClick={this.props.toggleModal}>Login</span>\r\n                <LoginModal />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginButton;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport LoginButton from './LoginButton';\r\n\r\n@inject(stores => ({\r\n    currentUserExists: stores.store.currentUserExists,\r\n    username: stores.store.currentUser ? (stores.store.currentUser.name || stores.store.currentUser.email || stores.store.currentUser.phone) : '',\r\n    logout: stores.store.logout\r\n}))\r\n@observer\r\nclass LoginControl extends Component {\r\n    render() {\r\n        const { currentUserExists, logout, username } = this.props;\r\n\r\n        return (\r\n            <div className='login-btn'>\r\n                {currentUserExists ?\r\n                    <span onClick={logout}>{`Hi ${username}, Logout`}</span>\r\n                    :\r\n                    <LoginButton />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginControl;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport LoginControl from '../login/LoginControl';\r\nimport { observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\n@observer\r\nclass NavBar extends Component {\r\n    @observable isChecked = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.links = [\r\n            { title: 'My Events', to: '/events' },\r\n            { title: 'About', to: '/about' }\r\n        ];\r\n    }\r\n\r\n    @action handleCheck = e => {\r\n        this[e.target.name] = e.target.checked;\r\n    };\r\n\r\n    @action handleClick = e => {\r\n        this.isChecked = false;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <div className='outer-wrapper'>\r\n                    <div className='container'>\r\n                        <NavLink onClick={this.handleClick} activeClassName='active-link' to=\"/\" className=\"logo\" exact><span role=\"img\" aria-label=\"Surprizer title\">🎉</span> Surprizer</NavLink>\r\n                        <input name='isChecked' checked={this.isChecked} onChange={this.handleCheck} className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\r\n                        <label className=\"menu-icon\" htmlFor=\"menu-btn\"><span className=\"navicon\"></span></label>\r\n                        <ul className=\"menu\">\r\n                            {this.links.map((l, i) => <li onClick={this.handleClick} key={i}><NavLink to={l.to} activeClassName='active-link' exact>{l.title}</NavLink></li>)}\r\n                            <li onClick={this.handleClick}><LoginControl /></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport class CustomLoader extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.isLoading ?\r\n                    (<div className=\"loader-container\">\r\n                        <Loader type=\"Circles\" color=\"#9c27b0\" height={this.props.height || 80} />\r\n                    </div>)\r\n                    :\r\n                    <div>{this.props.children}</div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomLoader;","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { action } from 'mobx';\r\n\r\n@observer\r\nclass GuestInput extends Component {\r\n\r\n    @action handleChange = e => {\r\n        this.props.updateGuest(this.props.index, e.target.name, e.target.value);\r\n    };\r\n\r\n    render() {\r\n        const { guest } = this.props;\r\n\r\n        return (\r\n            <div className='guest-input'>\r\n                <select name='type' value={guest.type} onChange={this.handleChange} required>\r\n                    <option value='' disabled>-</option>\r\n                    <option value='email'>Email</option>\r\n                    <option value='phone'>Phone</option>\r\n                </select>\r\n\r\n                {guest.type === 'email' &&\r\n                    <input\r\n                        name='email'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        onChange={this.handleChange}\r\n                        value={guest.email}\r\n                        required\r\n                    />\r\n                }\r\n\r\n                {guest.type === 'phone' &&\r\n                    <input\r\n                        name='phone'\r\n                        type='tel'\r\n                        placeholder='Phone'\r\n                        onChange={this.handleChange}\r\n                        value={guest.phone}\r\n                        required\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuestInput;","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable, action, reaction } from 'mobx';\r\n\r\nimport GuestInput from './GuestInput';\r\n\r\n@observer\r\nclass GuestPicker extends Component {\r\n    @observable guests = [{ type: '', email: '', phone: '' }];\r\n\r\n    @action addInput = () => {\r\n        this.guests.push({ type: '', email: '', phone: '' });\r\n    };\r\n\r\n    @action updateGuest = (index, type, value) => {\r\n        this.guests[index][type] = value;\r\n    };\r\n\r\n    guestsChange = reaction(\r\n        () => this.guests.map(g => { return { ...g } }),\r\n        guests => this.props.setUsersFromPicker(guests, this.props.roleId)\r\n    );\r\n\r\n    render() {\r\n        return (\r\n            <div className='guest-picker'>\r\n                {this.guests.map((g, i) =>\r\n                    <GuestInput key={i} guest={g} index={i} updateGuest={this.updateGuest} />\r\n                )}\r\n                <button className='icon-button' type='button' onClick={this.addInput}>+</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuestPicker;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\n\r\nimport GuestPicker from '../forms/guestPicker/GuestPicker';\r\nimport CustomLoader from '../general/CustomLoader';\r\n\r\n@inject(stores => ({\r\n    addEvent: stores.store.addEvent,\r\n    isLoading: stores.store.isLoading\r\n}))\r\n@observer\r\nclass NewEventForm extends Component {\r\n    @observable title = '';\r\n    @observable date = '';\r\n    @observable users = {};\r\n\r\n    @action handleChange = e => {\r\n        this[e.target.name] = e.target.value;\r\n    };\r\n\r\n    @action setUsersFromPicker = (guests, roleId) => {\r\n        this.users[roleId] = guests;\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.addEvent(this.title, this.date, this.users, true);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>New Event</h2>\r\n                <form className='form new-event-form' onSubmit={this.handleSubmit}>\r\n                    <label>Title:</label>\r\n                    <input\r\n                        name='title'\r\n                        type='text'\r\n                        placeholder='Title'\r\n                        onChange={this.handleChange}\r\n                        value={this.title}\r\n                        required\r\n                    />\r\n\r\n                    <label>Date:</label>\r\n                    <input\r\n                        name='date'\r\n                        type='datetime-local'\r\n                        placeholder='date'\r\n                        onChange={this.handleChange}\r\n                        value={this.date}\r\n                        required\r\n                    />\r\n\r\n                    <label>Guests:</label>\r\n                    <GuestPicker roleId={2} setUsersFromPicker={this.setUsersFromPicker} />\r\n\r\n                    <label>Surprisees:</label>\r\n                    <GuestPicker roleId={3} setUsersFromPicker={this.setUsersFromPicker} />\r\n\r\n                    <CustomLoader isLoading={this.props.isLoading} height={40}>\r\n                        <button className='btn' type='submit'>Save</button>\r\n                    </CustomLoader>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewEventForm;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Modal from 'react-responsive-modal';\r\n\r\nimport NewEventForm from './NewEventForm';\r\n\r\n@inject(stores => ({\r\n    isModal: stores.store.isNewEventModal,\r\n    toggleModal: stores.store.toggleNewEventModal\r\n}))\r\n@observer\r\nclass NewEventModal extends Component {\r\n    render() {\r\n        return (\r\n            <Modal open={this.props.isModal} onClose={this.props.toggleModal} center styles={{ modal: { width: '100%' } }}>\r\n                <NewEventForm />\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewEventModal;","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n@inject(stores => ({\r\n    userId: stores.store.currentUser ? stores.store.currentUser.id : null,\r\n}))\r\n@observer\r\nclass UserEvents extends Component {\r\n    getEvents = () => {\r\n        const { events, userId, type } = this.props;\r\n        return events.map(e => {\r\n            return (<div key={e.id}>\r\n                <span>{e.title}</span>\r\n                <span className='date'>{moment(e.date).format('L HH:mm')}</span>\r\n                <span><Link to={`/events/${e.id}/${userId}`}>details</Link></span>\r\n                <span><Link to={`/events/${e.id}/${userId}/greetings`}>greetings</Link></span>\r\n                {type === 'current' && <span><Link to={`/events/${e.id}/${userId}/party`}>party!</Link></span>}\r\n            </div>)\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>{this.props.title}</h3>\r\n                <div className='user-events'>{this.props.events.length ? this.getEvents() : 'Nothing at the moment...'}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserEvents;","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport CustomLoader from '../general/CustomLoader';\r\nimport NewEventModal from './NewEventModal';\r\nimport UserEvents from './UserEvents';\r\n\r\n@inject(stores => ({\r\n  toggleModal: stores.store.toggleNewEventModal,\r\n  isLoading: stores.store.isLoading,\r\n  isSignedIn: stores.store.isSignedIn,\r\n  futureUserEvents: stores.store.futureUserEvents,\r\n  currentParties: stores.store.currentParties,\r\n}))\r\n@observer\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className='outer-wrapper home banner'>\r\n        <div className='container'>\r\n          <div className='hero'>\r\n            <div>\r\n              <div className='title'>Surprize!</div>\r\n              <div className='description'><b>Surprizer</b> lets you organize virtual surprise parties.</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='main-body'>\r\n            {this.props.isSignedIn && <button className='btn' type='button' onClick={this.props.toggleModal}>New Event</button>}\r\n            <NewEventModal />\r\n            {this.props.isSignedIn ? (\r\n              <CustomLoader isLoading={this.props.isLoading}>\r\n                <UserEvents title='Current Parties' events={this.props.currentParties} type='current' />\r\n                <UserEvents title='Upcoming Events' events={this.props.futureUserEvents} type='future' />\r\n              </CustomLoader>\r\n            ) : (\r\n                <div>Please sign in.\r\n                  <br />\r\n                  <br />\r\n                  Don't have an account?<br />\r\n                  <button className='btn' onClick={() => alert('soon')}>Sign Up</button>\r\n                </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n  greetingTabsTitles: stores.store.greetingTabsTitles,\r\n  setGreetingType: stores.store.setGreetingType,\r\n  type: stores.store.currentGreetingType,\r\n}))\r\n@observer\r\nclass GreetingsTabs extends Component {\r\n  render() {\r\n    return (\r\n      <div className='greeting-tabs-container'>\r\n        {this.props.greetingTabsTitles.map(t =>\r\n          (<span\r\n            onClick={() => this.props.setGreetingType(t.id)}\r\n            className={`greeting-tab ${this.props.type === t.id ? 'active-tab':''}`}\r\n            key={t.id}>\r\n            {t.title} {t.count > 0 && <span className='greeting-tab-pill'>{t.count}</span>}\r\n          </span>)\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GreetingsTabs;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport ReactQuill from 'react-quill';\r\nimport '../../../node_modules/react-quill/dist/quill.snow.css';\r\nimport Parser from 'html-react-parser';\r\nimport moment from 'moment';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faSave, faTrash, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@inject(stores => ({\r\n    updateGreeting: stores.store.updateGreeting,\r\n    deleteGreeting: stores.store.deleteGreeting,\r\n    currentUser: stores.store.currentUser\r\n}))\r\n@observer\r\nclass Greeting extends Component {\r\n    @observable text = '';\r\n    @observable isEditMode = false;\r\n    @observable isPrivate = false;\r\n\r\n    @action componentDidMount = () => {\r\n        this.text = this.props.greeting.text;\r\n        this.isPrivate = this.props.greeting.isPrivate;\r\n    };\r\n\r\n    @action handleChange = e => {\r\n        this[e.target.name] = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n    };\r\n\r\n    @action handleChangeQuill = e => {\r\n        this.text = e;\r\n    };\r\n\r\n    @action handleCancel = () => {\r\n        this.toggleEdit();\r\n        this.text = this.props.greeting.text;\r\n    };\r\n\r\n    @action handleSaveText = () => {\r\n        this.props.updateGreeting(this.props.greeting.id, { text: this.text, isPrivate: this.isPrivate });\r\n        this.toggleEdit();\r\n    };\r\n\r\n    @action handleDelete = () => {\r\n        this.props.deleteGreeting(this.props.greeting.id);\r\n    };\r\n\r\n    @action toggleEdit = () => {\r\n        this.isEditMode = !this.isEditMode;\r\n    };\r\n\r\n    quillModules = {\r\n        toolbar: [\r\n            [{ 'font': [] }],\r\n            ['bold', 'italic', 'underline', 'strike'],\r\n            ['blockquote'],\r\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n            [{ 'direction': 'rtl' }],\r\n            [{ 'color': [] }, { 'background': [] }],\r\n            [{ 'align': [] }],\r\n            ['clean']\r\n        ],\r\n    }\r\n\r\n    render() {\r\n        const { greeting, currentUser } = this.props;\r\n\r\n        return (\r\n            <div className='greeting-wrapper'>\r\n                <div className='left'>\r\n                    {this.isEditMode ?\r\n                        <div>\r\n                            <ReactQuill\r\n                                theme='snow'\r\n                                value={this.text}\r\n                                onChange={this.handleChangeQuill}\r\n                                modules={this.quillModules}\r\n                            />\r\n                            <label>Private:</label>\r\n                            <input\r\n                                name='isPrivate'\r\n                                type='checkbox'\r\n                                checked={this.isPrivate}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            {greeting.user.id === currentUser.id &&\r\n                                <div className='buttons'>\r\n                                    <span onClick={this.handleSaveText} title='Save'><FontAwesomeIcon icon={faSave} /></span>\r\n                                    <span onClick={this.handleCancel} title='Cancel'><FontAwesomeIcon icon={faTimes} /></span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div className='readonly'>\r\n                            {Parser(greeting.text)}\r\n                            {greeting.user && greeting.user.id === currentUser.id &&\r\n                                <div className='buttons'>\r\n                                    <span onClick={this.toggleEdit} title='Edit'><FontAwesomeIcon icon={faEdit} /></span>\r\n                                    <span onClick={this.handleDelete} title='Delete'><FontAwesomeIcon icon={faTrash} /></span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n                <div className='right'>\r\n                    <div>{greeting.user ? greeting.user.name : this.props.currentUser.name}, {moment(greeting.createdAt).format('L HH:mm')}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Greeting;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Greeting from './Greeting';\r\n\r\n@inject(stores => ({\r\n    type: stores.store.currentGreetingType,\r\n}))\r\n@observer\r\nclass Greetings extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.greetings &&\r\n                    this.props.greetings\r\n                        .filter(g => g.typeId === this.props.type)\r\n                        .map(g => <Greeting key={g.id} greeting={g} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Greetings;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport ReactQuill from 'react-quill';\r\nimport '../../../node_modules/react-quill/dist/quill.snow.css';\r\n\r\nimport CustomLoader from '../general/CustomLoader';\r\n\r\n@inject(stores => ({\r\n    createGreeting: stores.store.createGreeting,\r\n    isLoading: stores.store.isLoading\r\n}))\r\n@observer\r\nclass AddGreetingForm extends Component {\r\n    @observable text = '';\r\n    @observable isPrivate = false;\r\n    @observable typeId = 1;\r\n\r\n    @action handleChange = e => {\r\n        this[e.target.name] = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n    };\r\n\r\n    @action handleChangeQuill = e => {\r\n        this.text = e;\r\n    };\r\n\r\n    @action handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.createGreeting(this.text, this.isPrivate, this.typeId);\r\n    };\r\n\r\n    quillModules = {\r\n        toolbar: [\r\n            [{ 'font': [] }],\r\n            ['bold', 'italic', 'underline', 'strike'],\r\n            ['blockquote'],\r\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n            [{ 'direction': 'rtl' }],\r\n            [{ 'color': [] }, { 'background': [] }],\r\n            [{ 'align': [] }],\r\n            ['clean']\r\n        ],\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Add Greeting</h2>\r\n                <form className='form new-greeting-form' onSubmit={this.handleSubmit}>\r\n                    <label>{this.typeId === 1 ? 'Greeting' : 'Title'}:</label>\r\n\r\n                    {this.typeId === 1 ?\r\n                        //  Rich text editor for text greetings }\r\n                        (<ReactQuill\r\n                            theme='snow'\r\n                            value={this.text}\r\n                            onChange={this.handleChangeQuill}\r\n                            modules={this.quillModules}\r\n                        />)\r\n                        :\r\n                        // Simple text input for file greetings }\r\n                        (<input\r\n                            name='text'\r\n                            type='text'\r\n                            placeholder='Greeting'\r\n                            onChange={this.handleChange}\r\n                            value={this.text}\r\n                            required\r\n                        />)\r\n                    }\r\n\r\n                    <label>Private:</label>\r\n                    <input\r\n                        name='isPrivate'\r\n                        type='checkbox'\r\n                        checked={this.isPrivate}\r\n                        onChange={this.handleChange}\r\n                    />\r\n\r\n                    <CustomLoader isLoading={this.props.isLoading} height={40}>\r\n                        <button type='submit'>Save</button>\r\n                    </CustomLoader>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddGreetingForm;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Modal from 'react-responsive-modal';\r\n\r\nimport AddGreetingForm from './AddGreetingForm';\r\n\r\n@inject(stores => ({\r\n    isModal: stores.store.isAddGreetingModal,\r\n    toggleModal: stores.store.toggleAddGreetingModal\r\n}))\r\n@observer\r\nclass AddGreetingModal extends Component {\r\n    render() {\r\n        return (\r\n            <Modal open={this.props.isModal} onClose={this.props.toggleModal} center styles={{ modal: { width: '100%' } }}>\r\n                <AddGreetingForm />\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddGreetingModal;","import React, { Component } from 'react';\r\nimport AddGreetingModal from './AddGreetingModal';\r\nimport { inject } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n    toggleModal: stores.store.toggleAddGreetingModal\r\n}))\r\nclass AddGreeting extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button type='button' className='btn' onClick={this.props.toggleModal}>Add Greeting</button>\r\n                <AddGreetingModal />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddGreeting;","import React, { Component } from 'react';\r\nimport GreetingsTabs from './GreetingsTabs';\r\nimport Greetings from './Greetings';\r\nimport { inject, observer } from 'mobx-react';\r\nimport AddGreeting from './AddGreeting';\r\n\r\n@inject(stores => ({\r\n  getGreetingTypes: stores.store.getGreetingTypes\r\n}))\r\n@observer\r\nclass GreetingsBox extends Component {\r\n  componentDidMount = () => {\r\n    this.props.getGreetingTypes();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <GreetingsTabs />\r\n        <Greetings greetings={this.props.greetings} />\r\n        <AddGreeting />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GreetingsBox;","import React, { Component } from 'react'\r\n\r\nclass UsernameForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this) //refactor\r\n        this.onChange = this.onChange.bind(this)\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state.username)\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ username: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {/* <h3>What is your name?</h3> */}\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Name\"\r\n                            onChange={this.onChange}\r\n                            required\r\n                        />\r\n                        <br />\r\n                        <button className='btn' type=\"submit\">Join Chat</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsernameForm","import React, { Component } from 'react';\r\n\r\nclass MessageList extends Component {\r\n    render() {\r\n        return (\r\n            <div className='message-list-container'>\r\n                <ul>\r\n                    {this.props.messages.map((message, index) => (\r\n                        <li key={index}>\r\n                            <span className='sender-username'>{message.senderId}</span>{' '}\r\n                            <div className='message'>{message.text}</div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList;","import React, { Component } from 'react';\r\n\r\nclass SendMessageForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            text: '',\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state.text)\r\n        this.setState({ text: '' })\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ text: e.target.value })\r\n        if (this.props.onChange) {\r\n            this.props.onChange()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='send-container'>\r\n                <div>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Type a message here then hit ENTER\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.text}\r\n                        />\r\n                        <button typ='button' className='btn' onClick={this.onSubmit}>Send</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendMessageForm;","import React, { Component } from 'react';\r\n\r\nclass TypingIndicator extends Component {\r\n    render() {\r\n        if (this.props.usersWhoAreTyping.length > 0) {\r\n            return (\r\n                <div className='typing'>\r\n                    {`${this.props.usersWhoAreTyping\r\n                        .slice(0, 2)\r\n                        .join(' and ')} is typing`}\r\n                </div>\r\n            )\r\n        }\r\n        return <div />\r\n    }\r\n}\r\n\r\nexport default TypingIndicator;","import React, { Component } from 'react';\r\n\r\nclass WhosOnlineList extends Component {\r\n    renderUsers() {\r\n        return (\r\n            <ul className='whos-online-list'>\r\n                {this.props.users.map((user, index) => {\r\n                    if (user.id === this.props.currentUser.id) {\r\n                        return (\r\n                            <WhosOnlineListItem key={index} presenceState=\"online\">\r\n                                {user.name} (You)\r\n                      </WhosOnlineListItem>\r\n                        )\r\n                    }\r\n                    return (\r\n                        <WhosOnlineListItem key={index} presenceState={user.presence.state}>\r\n                            {user.name}\r\n                        </WhosOnlineListItem>\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (this.props.users) {\r\n            return this.renderUsers()\r\n        } else {\r\n            return <p>Loading...</p>\r\n        }\r\n    }\r\n}\r\n\r\nclass WhosOnlineListItem extends Component {\r\n    render() {\r\n        return (\r\n            <li>\r\n                <div>\r\n                    <div className='whos-online-pill' style={{\r\n                        backgroundColor: this.props.presenceState === 'online' ? '#539eff' : '#414756',\r\n                    }} /></div>\r\n                <div>{this.props.children}</div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WhosOnlineList;","import React, { Component } from 'react';\r\nimport Chatkit from '@pusher/chatkit';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport MessageList from './MessageList';\r\nimport SendMessageForm from './SendMessageForm';\r\nimport TypingIndicator from './TypingIndicator';\r\nimport WhosOnlineList from './WhosOnlineList';\r\n\r\n@inject(stores => ({\r\n    chatRoomId: stores.store.currentEvent.chatRoomId\r\n}))\r\n@observer\r\nclass ChatScreen extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentUser: {},\r\n            currentRoom: {},\r\n            messages: [],\r\n            usersWhoAreTyping: [],\r\n        }\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.sendTypingEvent = this.sendTypingEvent.bind(this)\r\n    }\r\n\r\n    sendMessage(text) {\r\n        this.state.currentUser.sendMessage({\r\n            text,\r\n            roomId: this.state.currentRoom.id,\r\n        })\r\n    }\r\n\r\n    sendTypingEvent() {\r\n        this.state.currentUser\r\n            .isTypingIn({ roomId: this.state.currentRoom.id })\r\n            .catch(error => console.error('error', error))\r\n    }\r\n\r\n    componentDidMount() {\r\n        const chatManager = new Chatkit.ChatManager({\r\n            instanceLocator: 'v1:us1:09d50864-3dac-4251-b92a-0b851b4da892',\r\n            userId: this.props.currentUsername,\r\n            tokenProvider: new Chatkit.TokenProvider({\r\n                url: '/chat/authenticate',\r\n                // url: 'http://localhost:5000/chat/authenticate',\r\n            }),\r\n        })\r\n\r\n        chatManager\r\n            .connect()\r\n            .then(currentUser => {\r\n                this.setState({ currentUser });\r\n                return currentUser.subscribeToRoom({\r\n                    roomId: this.props.chatRoomId,\r\n                    messageLimit: 100,\r\n                    hooks: {\r\n                        onNewMessage: message => {\r\n                            this.setState({\r\n                                messages: [...this.state.messages, message],\r\n                            })\r\n                        },\r\n\r\n                        onUserStartedTyping: user => {\r\n                            this.setState({\r\n                                usersWhoAreTyping: [...this.state.usersWhoAreTyping, user.name],\r\n                            })\r\n                        },\r\n\r\n                        onUserStoppedTyping: user => {\r\n                            this.setState({\r\n                                usersWhoAreTyping: this.state.usersWhoAreTyping.filter(\r\n                                    username => username !== user.name\r\n                                ),\r\n                            })\r\n                        },\r\n\r\n                        onUserCameOnline: () => this.forceUpdate(),\r\n                        onUserWentOffline: () => this.forceUpdate(),\r\n                        onUserJoined: () => this.forceUpdate(),\r\n                    },\r\n                })\r\n\r\n            })\r\n            .then(currentRoom => {\r\n                this.setState({ currentRoom })\r\n            })\r\n            .catch(error => console.error('error', error))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='chat-screen-container'>\r\n                <div className='chat-container'>\r\n                    <aside className='whos-online-list-container'>\r\n                        <WhosOnlineList\r\n                            currentUser={this.state.currentUser}\r\n                            users={this.state.currentRoom.users}\r\n                        />\r\n                    </aside>\r\n                    <section className='chat-list-container'>\r\n                        <MessageList messages={this.state.messages} />\r\n                        <TypingIndicator usersWhoAreTyping={this.state.usersWhoAreTyping} />\r\n                        <SendMessageForm onSubmit={this.sendMessage} onChange={this.sendTypingEvent} />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatScreen;","import React, { Component } from 'react';\r\nimport UsernameForm from './UsernameForm';\r\nimport ChatScreen from './ChatScreen';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n    chatLogin: stores.store.chatLogin\r\n}))\r\n@observer\r\nclass ChatContainer extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            currentUsername: '',\r\n            currentScreen: 'WhatIsYourUsernameScreen',\r\n        }\r\n    }\r\n\r\n    onUsernameSubmitted = username => {\r\n        this.props.chatLogin({ username })\r\n            .then(response => {\r\n                this.setState({\r\n                    currentUsername: username,\r\n                    currentScreen: 'ChatScreen',\r\n                })\r\n            })\r\n            .catch(error => console.error('error', error))\r\n    }\r\n\r\n    render() {  //refactor//////////////////////////////\r\n        if (this.state.currentScreen === 'WhatIsYourUsernameScreen') {\r\n            return <UsernameForm onSubmit={this.onUsernameSubmitted} />\r\n        }\r\n        if (this.state.currentScreen === 'ChatScreen') {\r\n            return <ChatScreen currentUsername={this.state.currentUsername} />\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChatContainer;","import React, { Component } from 'react';\r\nimport { action } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport GreetingsBox from '../greetings/GreetingsBox';\r\nimport CustomLoader from '../general/CustomLoader';\r\nimport ChatContainer from '../chat/ChatContainer';\r\n\r\n@inject(stores => ({\r\n    event: stores.store.currentEvent,\r\n    user: stores.store.currentUser,\r\n    getEventFull: stores.store.getEventFull,\r\n    isLoading: stores.store.isLoading,\r\n    createChatRoom: stores.store.createChatRoom,\r\n    parseQueryParams: stores.store.parseQueryParams,\r\n    currentGreetings: stores.store.currentGreetings,\r\n    setGreetingView: stores.store.setGreetingView,\r\n}))\r\n@observer\r\nclass EventParty extends Component {\r\n\r\n    @action componentDidMount = () => {\r\n        const { userId, eventId, parseQueryParams, setGreetingView } = this.props;\r\n        parseQueryParams({ eventId, userId });\r\n        setGreetingView('all');\r\n        if (this.props.event && !this.props.event.chatRoomId) {\r\n            this.props.createChatRoom();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { event } = this.props;\r\n        return (\r\n            <div className='outer-wrapper party banner'>\r\n                <div className='container'>\r\n                    <div className='hero'>\r\n                        <div>\r\n                            <div className='title'>Party on!</div>\r\n                            <div className='description'>This is the real party! Chat with people and mingle.</div>\r\n                        </div></div>\r\n                    <div className='main-body'>\r\n                        <CustomLoader isLoading={this.props.isLoading}>\r\n                            {event && <h3>Welcome to {event.title}</h3>}\r\n                            {event && event.chatRoomId && <ChatContainer />}\r\n                            {this.props.user && <h2>{this.props.user.name}</h2>}\r\n                            <GreetingsBox greetings={this.props.currentGreetings} />\r\n                        </CustomLoader>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventParty;","import React, { Component } from 'react';\r\nimport { action } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\nimport moment from 'moment';\r\n\r\nimport CustomLoader from '../general/CustomLoader';\r\n\r\n@inject(stores => ({\r\n    event: stores.store.currentEvent,\r\n    users: stores.store.currentUsers,\r\n    getEventFull: stores.store.getEventFull,\r\n    isLoading: stores.store.isLoading,\r\n    parseQueryParams: stores.store.parseQueryParams,\r\n}))\r\n@observer\r\nclass EventDetails extends Component {\r\n    @action componentDidMount = () => {\r\n        const { userId, eventId, parseQueryParams } = this.props;\r\n        parseQueryParams({ eventId, userId });\r\n    };\r\n\r\n    getUsersByRole = roleId => {\r\n        const userItems = this.props.users\r\n            .filter(u => u.eventsUsers.roleId === roleId)\r\n            .map(u => <li key={u.id}>{u.name || u.email || u.phone}</li>);\r\n        const list = <ul>{userItems}</ul>;\r\n        return list;\r\n    };\r\n\r\n    render() {\r\n        const { event } = this.props;\r\n        return (\r\n            <div className='outer-wrapper banner details'>\r\n                <div className='container'>\r\n\r\n                    <div className='hero'>\r\n                        <div>\r\n                            <div className='title'>The Event</div>\r\n                            <div className='description'>Some details about the event you're organizing.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='main-body'>\r\n                        <CustomLoader isLoading={this.props.isLoading}>\r\n                            {event && (\r\n                                <div>\r\n                                    <h3>{event.title}</h3>\r\n                                    <div className='event-details'>\r\n                                        <span>Date:</span>\r\n                                        <span>{moment(event.date).format('L HH:mm')}</span>\r\n                                        <span>Organizers:</span>\r\n                                        <div>{this.getUsersByRole(1)}</div>\r\n                                        <span>Surprizees:</span>\r\n                                        <div>{this.getUsersByRole(3)}</div>\r\n                                        <span>Guests:</span>\r\n                                        <div>{this.getUsersByRole(2)}</div>\r\n                                    </div>\r\n                                    <button type='button' className='btn' onClick={() => alert('soon')}>Edit</button>\r\n                                </div>\r\n                            )}\r\n                        </CustomLoader>\r\n                    </div></div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventDetails;","import React, { Component } from 'react';\r\nimport { action } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport GreetingsBox from '../greetings/GreetingsBox';\r\n\r\n@inject(stores => ({\r\n    parseQueryParams: stores.store.parseQueryParams,\r\n    eventTitle: stores.store.currentEvent ? stores.store.currentEvent.title : null,\r\n    roleTItle: stores.store.currentRole ? stores.store.currentRole.title : null,\r\n    ownGreetings: stores.store.ownGreetings,\r\n    setGreetingView: stores.store.setGreetingView,\r\n}))\r\n@observer\r\nclass GreetingsMgmt extends Component {\r\n    @action componentDidMount = () => {\r\n        const { userId, eventId, parseQueryParams, setGreetingView } = this.props;\r\n        parseQueryParams({ eventId, userId });\r\n        setGreetingView('own');\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='outer-wrapper greeting banner'>\r\n                <div className='container'>\r\n                    <div className='hero'>\r\n                        <div>\r\n                            <div className='title'>Greetings</div>\r\n                            <div className='description'>Your are here as {this.props.roleTItle}. Here you can write greetings and upload files that will be seen on the surprize party.</div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='main-body'>\r\n                        <h3>Greetings for {this.props.eventTitle}</h3>\r\n                        <GreetingsBox greetings={this.props.ownGreetings} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GreetingsMgmt;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { action } from 'mobx';\r\n\r\n@inject(stores => ({\r\n    redirectTo: stores.store.redirectTo,\r\n    resetRedirectTo: stores.store.resetRedirectTo,\r\n}))\r\n@observer\r\nclass RedirectIntercept extends Component {\r\n    @action componentDidMount = () => {\r\n        this.props.resetRedirectTo();\r\n    };\r\n\r\n    render() {\r\n        const { redirectTo } = this.props;\r\n        return <Redirect to={redirectTo} />\r\n    }\r\n}\r\n\r\nexport default RedirectIntercept;","import React, { Component } from 'react';\r\nimport CustomLoader from '../general/CustomLoader';\r\nimport UserEvents from '../home/UserEvents';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n    isLoading: stores.store.isLoading,\r\n    userEvents: stores.store.userEvents,\r\n}))\r\n@observer\r\nclass MyEvents extends Component {\r\n    render() {\r\n        return (\r\n            <div className='outer-wrapper banner events'>\r\n                <div className='container'>\r\n                    <div className='hero'>\r\n                        <div>\r\n                            <div className='title'>Events</div>\r\n                            <div className='description'>Here you can view all your events, past present & future.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='main-body'>\r\n                        <CustomLoader isLoading={this.props.isLoading}>\r\n                            <UserEvents title='My Events' events={this.props.userEvents} type='all' />\r\n                        </CustomLoader>\r\n                    </div>\r\n                </div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyEvents;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div className='outer-wrapper about banner'>\r\n                <div className='container'>\r\n\r\n                    <div className='hero'>\r\n                        <div>\r\n                            <div className='title'>About</div>\r\n                            <div className='description'>A little bit about Surprizer and me.</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='main-body'>\r\n                        <h3>About Me</h3>\r\n                        <div>I'm me</div>\r\n                        <h3>Photo Credits</h3>\r\n                        <h4><a href='https://unsplash.com' target='_blank' rel=\"noopener noreferrer\">unsplash.com</a></h4>\r\n                        <ul>\r\n                            <li>Ambreen Hasan</li>\r\n                            <li>Jason Leung</li>\r\n                            <li>Pablo Heimplatz</li>\r\n                            <li>Adi Goldstein</li>\r\n                            <li>Monique Carrati</li>\r\n                            <li>rawpixel</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\nimport NavBar from './components/general/NavBar';\r\nimport Home from './components/home/Home';\r\nimport EventParty from './components/mainPages/EventParty';\r\nimport EventDetails from './components/mainPages/EventDetails';\r\nimport GreetingsMgmt from './components/mainPages/GreetingsMgmt';\r\n// import Header from './components/general/Header';\r\nimport RedirectIntercept from './components/general/RedirectIntercept';\r\n\r\nimport { inject, observer } from 'mobx-react';\r\nimport MyEvents from './components/mainPages/MyEvents';\r\nimport About from './components/mainPages/About';\r\n\r\n@inject(stores => ({\r\n    redirectTo: stores.store.redirectTo\r\n}))\r\n@observer\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className='page-container'>\r\n                    {this.props.redirectTo && <RedirectIntercept />}\r\n                    <NavBar />\r\n\r\n                    {/* Home page */}\r\n                    <Route path=\"/\" exact render={() => <Home />} />\r\n\r\n                    {/* My events page */}\r\n                    <Route path=\"/events\" exact render={() => <MyEvents />} />\r\n\r\n                    {/* About page */}\r\n                    <Route path=\"/about\" exact render={() => <About />} />\r\n\r\n                    {/* TODO: ===================== if response with wrong params - redirect to 401 page */}\r\n                    {/* Event details page, visible to organizer */}\r\n                    <Route path=\"/events/:eventId/:userId\" exact render={({ match }) => (\r\n                        <EventDetails eventId={match.params.eventId} userId={match.params.userId} />\r\n                    )} />\r\n\r\n                    {/* Live party page, visible to everyone (content security trimmed) */}\r\n                    <Route path=\"/events/:eventId/:userId/party\" exact render={({ match }) => (\r\n                        <EventParty eventId={match.params.eventId} userId={match.params.userId} />\r\n                    )} />\r\n\r\n                    {/* Upload greetins page, visible to guests */}\r\n                    <Route path=\"/events/:eventId/:userId/greetings\" exact render={({ match }) => (\r\n                        <GreetingsMgmt eventId={match.params.eventId} userId={match.params.userId} />\r\n                    )} />\r\n\r\n                    {/* <Header /> */}\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import axios from 'axios';\r\n\r\nclass AjaxUtils {\r\n    constructor() {\r\n        this.EVENTS_PATH = '/events';\r\n        this.GREETING_PATH = '/greetings';\r\n        this.GREETING_TYPES_PATH = `${this.GREETING_PATH}/types`;\r\n        this.USERS_PATH = '/users';\r\n        this.CHAT_PATH = '/chat';\r\n        this.CHAT_ROOMS_PATH = `${this.CHAT_PATH}/rooms`;\r\n        this.CHAT_USERS_PATH = `${this.CHAT_PATH}/users`;\r\n    }\r\n\r\n    // Return a promise\r\n    queryApi = async (method, url, body) => {\r\n        let response;\r\n        try {\r\n            switch (method) {\r\n                case 'get':\r\n                    response = await axios.get(url);\r\n                    break;\r\n                case 'post':\r\n                    response = await axios.post(url, body);\r\n                    break;\r\n                case 'put':\r\n                    response = await axios.put(url, body);\r\n                    break;\r\n                case 'delete':\r\n                    response = await axios.delete(url);\r\n                    break;\r\n                default:\r\n                    throw new Error(`Unexpected method: ${method}`);\r\n            }\r\n            return response.data;\r\n        }\r\n        catch (error) { throw error; }\r\n    };\r\n}\r\n\r\nconst ajaxUtils = new AjaxUtils();\r\nexport default ajaxUtils;","import ajaxUtils from './AjaxUtils';\r\n\r\n// Return a promise\r\nclass TransportLayer {\r\n\r\n    // Get event with all greetings (trimmed by user permissions)\r\n    getEventFull = (eventId, userId) => {\r\n        const url = `${ajaxUtils.EVENTS_PATH}/${eventId}/${userId}`;\r\n        return ajaxUtils.queryApi('get', url);\r\n    };\r\n\r\n    // Get event with all greetings (trimmed by user permissions)\r\n    getUserById = userId => {\r\n        const url = `${ajaxUtils.USERS_PATH}/${userId}`;\r\n        return ajaxUtils.queryApi('get', url);\r\n    };\r\n\r\n    // Get events for current user (minus future events where he's surprisee)\r\n    getEventsByUser = userId => {\r\n        const url = `${ajaxUtils.USERS_PATH}/${userId}${ajaxUtils.EVENTS_PATH}`;\r\n        return ajaxUtils.queryApi('get', url);\r\n    };\r\n\r\n    // Create event\r\n    createEvent = event => {\r\n        const url = ajaxUtils.EVENTS_PATH;\r\n        return ajaxUtils.queryApi('post', url, event);\r\n    }\r\n\r\n    // Update user\r\n    updateUser = (userId, updateObject) => {\r\n        const url = `${ajaxUtils.USERS_PATH}/${userId}`;\r\n        return ajaxUtils.queryApi('put', url, updateObject);\r\n    };\r\n\r\n    // Get greeting types\r\n    getGreetingTypes = () => {\r\n        const url = `${ajaxUtils.GREETING_TYPES_PATH}`;\r\n        return ajaxUtils.queryApi('get', url);\r\n    }\r\n\r\n    // Update greeting\r\n    updateGreeting = (greetingId, updateObject) => {\r\n        const url = `${ajaxUtils.GREETING_PATH}/${greetingId}`;\r\n        return ajaxUtils.queryApi('put', url, updateObject);\r\n    };\r\n\r\n    // Create greeting\r\n    createGreeting = (greetingObject) => {\r\n        const url = ajaxUtils.GREETING_PATH;\r\n        return ajaxUtils.queryApi('post', url, greetingObject);\r\n    };\r\n\r\n    // Delete greeting\r\n    deleteGreeting = greetingId => {\r\n        const url = `${ajaxUtils.GREETING_PATH}/${greetingId}`;\r\n        return ajaxUtils.queryApi('delete', url);\r\n    };\r\n\r\n    // ===== chat related\r\n\r\n    // Create chat room\r\n    createChatRoom = eventId => {\r\n        const url = ajaxUtils.CHAT_ROOMS_PATH;\r\n        return ajaxUtils.queryApi('post', url, { eventId });\r\n    }\r\n\r\n    chatLogin = body => {\r\n        const url = ajaxUtils.CHAT_USERS_PATH;\r\n        return ajaxUtils.queryApi('post', url, body);\r\n    };\r\n}\r\n\r\nconst transportLayer = new TransportLayer();\r\nexport default transportLayer;","import { observable, action, reaction, computed } from 'mobx';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport transportLayer from '../utils/TransportLayer';\r\nimport ajaxUtils from '../utils/AjaxUtils';\r\n\r\nconst LS_USER_KEY = 'user';\r\n\r\nclass Store {\r\n    @observable currentEvent = null;\r\n    @observable currentUser = null;\r\n    @observable currentRole = null;\r\n    @observable currentUsers = [];\r\n    @observable currentGreetings = [];\r\n    @observable userEvents = [];\r\n    @observable greetingTypes = [];\r\n    @observable currentGreetingType = 1;\r\n\r\n    @observable isSignedIn = false;\r\n\r\n    @observable queryParams = {\r\n        userId: null,\r\n        eventId: null\r\n    };\r\n\r\n    // UI related\r\n    @observable isLoginModal = false;\r\n    @observable isNewEventModal = false;\r\n    @observable isAddGreetingModal = false;\r\n    @observable isLoading = false;\r\n    @observable redirectTo = null;\r\n    @observable greetingView = null;\r\n\r\n    constructor() {\r\n        // Handle ajax errors\r\n        axios.interceptors.response.use(\r\n            response => response,\r\n            error => {\r\n                // if (error.response.status === 401) {\r\n                //     this.isAuthenticated = false;\r\n                // }\r\n                // else {\r\n                    console.error(error.response);\r\n                // }\r\n                return Promise.reject(error);\r\n            });\r\n        this.initialize();\r\n    };\r\n\r\n    @action initialize = async () => {\r\n        this.getUserFromStorage();\r\n    };\r\n\r\n    @computed get ownGreetings() {\r\n        if (this.currentGreetings.length) {\r\n            return this.currentGreetings.filter(g => g.userId === this.currentUser.id);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    @action parseQueryParams = paramsObject => {\r\n        Object.keys(paramsObject).forEach(k => {\r\n            this.queryParams[k] = paramsObject[k];\r\n        });\r\n    };\r\n\r\n    @computed get currentUserExists() {\r\n        const exists = this.currentUser ? true : false;\r\n        return exists;\r\n    }\r\n\r\n    // Only until proper login implemented\r\n    @action dummyLogin = async () => {\r\n        await this.getUser(1);\r\n        this.toggleLoginModal();\r\n    };\r\n\r\n    @action getUserFromStorage = () => {\r\n        this.currentUser = JSON.parse(localStorage.getItem(LS_USER_KEY))\r\n            || this.currentUser;\r\n    };\r\n\r\n    @action getEventFull = async (eventId, userId) => {\r\n        try {\r\n            this.isLoading = true;\r\n            const data = await transportLayer.getEventFull(eventId, userId);\r\n            this.currentEvent = data.event;\r\n            this.currentRole = data.role;\r\n            this.currentGreetings = data.greetings;\r\n            this.currentUsers = data.users;\r\n            this.getUser(userId);\r\n            this.isLoading = false;\r\n        }\r\n        catch (err) { throw err; }\r\n    }\r\n\r\n    @action getGreetingTypes = async () => {\r\n        // TODO: only if something changed on the server\r\n        this.greetingTypes = await transportLayer.getGreetingTypes();\r\n    }\r\n\r\n    @computed get greetingTabsTitles() {\r\n        if (this.currentGreetings.length) {\r\n            const greetings = this.greetingView === 'all' ? this.currentGreetings : this.ownGreetings;\r\n            return this.greetingTypes\r\n                .map(t =>\r\n                    ({\r\n                        id: t.id,\r\n                        title: t.type,\r\n                        count: greetings\r\n                            .filter(g => g.typeId === t.id)\r\n                            .length\r\n                    }))\r\n        }\r\n        return [];\r\n    };\r\n\r\n    @computed get futureUserEvents() {\r\n        return this.userEvents.filter(e => new Date(e.date) > new Date());\r\n    };\r\n\r\n    @computed get currentParties() {\r\n        return this.userEvents\r\n            .filter(e => {\r\n                const now = moment();\r\n                const eventDate = moment(e.date);\r\n                const end = moment(e.date).add(4, 'h');\r\n                return now.isBetween(eventDate, end);\r\n            });\r\n    };\r\n\r\n    @action setGreetingType = typeId => {\r\n        this.currentGreetingType = typeId;\r\n    }\r\n\r\n    @action getUser = async userId => {\r\n        try {\r\n            this.isLoading = true;\r\n            const user = await transportLayer.getUserById(userId);\r\n            this.currentUser = user;\r\n            this.isLoading = false;\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action getEventsByUser = async () => {\r\n        try {\r\n            this.isLoading = true;\r\n            const events = await transportLayer.getEventsByUser(this.currentUser.id);\r\n            this.userEvents = events;\r\n            this.isLoading = false;\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action addEvent = async (title, date, users, isRedirect) => {\r\n        try {\r\n            this.isLoading = true;\r\n            const userId = this.currentUser.id;\r\n            const event = await transportLayer.createEvent({ title, date, userId, users });\r\n            this.toggleNewEventModal();\r\n            this.isLoading = false;\r\n            if (isRedirect) {\r\n                this.redirectTo = `${ajaxUtils.EVENTS_PATH}/${event.id}/${this.currentUser.id}`;\r\n            }\r\n            this.userEvents.push(event);\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action updateUser = async updateObject => {\r\n        try {\r\n            const user = await transportLayer.updateUser(this.currentUser.id, updateObject);\r\n            if (user) {\r\n                this.currentUser = user;\r\n            }\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action createGreeting = async (text, isPrivate, typeId) => {\r\n        try {\r\n            this.isLoading = true;\r\n            const userId = this.currentUser.id;\r\n            const eventId = this.currentEvent.id;\r\n            const greeting = await transportLayer.createGreeting({ userId, eventId, text, isPrivate, typeId });\r\n            this.toggleAddGreetingModal();\r\n            this.isLoading = false;\r\n            this.currentGreetings.push(greeting);\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action updateGreeting = async (greetingId, updateObject) => {\r\n        const greeting = await transportLayer.updateGreeting(greetingId, updateObject);\r\n        if (greeting) {\r\n            let currentGreeting = this.currentGreetings.find(g => g.id === greetingId);\r\n            Object.keys(updateObject).forEach(k => {\r\n                currentGreeting[k] = updateObject[k];\r\n            });\r\n        }\r\n    };\r\n\r\n    @action deleteGreeting = async greetingId => {\r\n        await transportLayer.deleteGreeting(greetingId);\r\n        let currentIndex = this.currentGreetings.findIndex(g => g.id === greetingId);\r\n        this.currentGreetings.splice(currentIndex, 1);\r\n    };\r\n\r\n    @action logout = () => {\r\n        // TODO: logout user if he's signed-in\r\n        this.currentUser = null;\r\n        this.queryParams.eventId = null;\r\n        this.queryParams.userId = null;\r\n        this.redirectTo = '/';\r\n    };\r\n\r\n    chatLogin = async body => {\r\n        try {\r\n            await transportLayer.chatLogin(body);\r\n        }\r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    getEventDetails = reaction(\r\n        () => ({ ...this.queryParams }),\r\n        params => {\r\n            if (params.userId && params.eventId) {\r\n                this.getEventFull(params.eventId, params.userId);\r\n            }\r\n        }\r\n    );\r\n\r\n    updateUserInStorage = reaction(\r\n        () => ({ ...this.currentUser }),\r\n        async () => {\r\n            if (this.currentUser) {\r\n                localStorage.setItem(LS_USER_KEY, JSON.stringify(this.currentUser))\r\n                this.isSignedIn = true;\r\n                await this.getEventsByUser();\r\n            }\r\n            else {\r\n                localStorage.removeItem(LS_USER_KEY);\r\n                this.isSignedIn = false;\r\n                this.userEvents = [];\r\n            }\r\n        }\r\n    );\r\n\r\n    // UI related\r\n    @action toggleLoginModal = () => {\r\n        this.isLoginModal = !this.isLoginModal;\r\n    };\r\n\r\n    @action toggleNewEventModal = () => {\r\n        this.isNewEventModal = !this.isNewEventModal;\r\n    };\r\n\r\n    @action toggleAddGreetingModal = () => {\r\n        this.isAddGreetingModal = !this.isAddGreetingModal;\r\n    };\r\n\r\n    @action resetRedirectTo = () => {\r\n        this.redirectTo = null;\r\n    };\r\n\r\n    @action setGreetingView = view => {\r\n        this.greetingView = view;\r\n    };\r\n\r\n    // Chat related\r\n    @action createChatRoom = async () => {\r\n        const roomId = await transportLayer.createChatRoom(this.currentEvent.id);\r\n        this.currentEvent.chatRoomId = roomId;\r\n    };\r\n}\r\n\r\nconst store = new Store();\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\n\nimport './index.css';\nimport App from './App';\nimport store from './stores/Store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));"],"sourceRoot":""}