{"version":3,"sources":["components/login/LoginForm.js","components/login/LoginModal.js","components/login/LoginButton.js","components/login/LoginControl.js","components/general/NavBar.js","components/general/CustomLoader.js","components/forms/guestPicker/GuestInput.js","components/forms/guestPicker/GuestPicker.js","components/home/NewEventForm.js","components/home/NewEventModal.js","components/home/UserEvents.js","components/home/Home.js","components/greetings/GreetingsTabs.js","components/greetings/Greeting.js","components/greetings/Greetings.js","components/greetings/AddGreetingForm.js","components/greetings/AddGreetingModal.js","components/greetings/AddGreeting.js","components/greetings/GreetingsBox.js","components/chat/UsernameForm.js","components/chat/MessageList.js","components/chat/SendMessageForm.js","components/chat/TypingIndicator.js","components/chat/WhosOnlineList.js","components/chat/ChatScreen.js","components/chat/ChatContainer.js","components/mainPages/EventParty.js","components/mainPages/EventDetails.js","components/mainPages/GreetingsMgmt.js","components/general/RedirectIntercept.js","components/mainPages/MyEvents.js","components/mainPages/About.js","App.js","utils/AjaxUtils.js","utils/TransportLayer.js","stores/Store.js","index.js"],"names":["LoginForm","inject","stores","dummyLogin","store","observer","react_default","a","createElement","type","placeholder","className","onClick","this","props","Component","LoginModal","isModal","isLoginModal","toggleModal","toggleLoginModal","index_es","open","onClose","closeOnEsc","closeOnOverlayClick","login_LoginForm","LoginButton","login_LoginModal","LoginControl","currentUserExists","username","currentUser","name","email","phone","logout","_this$props","concat","login_LoginButton","NavBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","links","title","to","map","l","i","NavLink","key","activeClassName","exact","login_LoginControl","CustomLoader","_Component","apply","arguments","inherits","createClass","value","isLoading","react_loader_spinner_default","color","height","children","GuestInput","guest","onChange","handleChange","required","disabled","action","e","_this2","updateGuest","index","target","GuestPicker","guestsChange","reaction","guests","g","objectSpread","setUsersFromPicker","roleId","guestPicker_GuestInput","addInput","observable","_this3","push","_this4","NewEventForm","addEvent","handleSubmit","preventDefault","date","users","onSubmit","guestPicker_GuestPicker","general_CustomLoader","NewEventModal","isNewEventModal","toggleNewEventModal","center","styles","modal","width","home_NewEventForm","UserEvents","userId","id","getEvents","events","moment","format","Link","length","Home","isSignedIn","futureUserEvents","currentParties","home_NewEventModal","home_UserEvents","GreetingsTabs","greetingTabsTitles","setGreetingType","currentGreetingType","t","count","Greeting","updateGreeting","deleteGreeting","quillModules","toolbar","font","list","direction","background","align","greeting","isEditMode","lib_default","theme","text","handleChangeQuill","modules","checked","isPrivate","user","handleSaveText","react_fontawesome_index_es","icon","faSave","handleCancel","faTimes","Parser","toggleEdit","faEdit","handleDelete","faTrash","createdAt","_this5","_this6","_this7","_this8","Greetings","greetings","filter","typeId","greetings_Greeting","AddGreetingForm","createGreeting","AddGreetingModal","isAddGreetingModal","toggleAddGreetingModal","greetings_AddGreetingForm","AddGreeting","greetings_AddGreetingModal","GreetingsBox","getGreetingTypes","componentDidMount","greetings_GreetingsTabs","greetings_Greetings","greetings_AddGreeting","UsernameForm","state","bind","assertThisInitialized","setState","MessageList","messages","message","senderId","SendMessageForm","TypingIndicator","usersWhoAreTyping","slice","join","WhosOnlineList","WhosOnlineList_WhosOnlineListItem","presenceState","presence","renderUsers","WhosOnlineListItem","style","backgroundColor","ChatScreen","chatRoomId","currentEvent","currentRoom","sendMessage","sendTypingEvent","roomId","isTypingIn","catch","error","console","Chatkit","ChatManager","instanceLocator","currentUsername","tokenProvider","TokenProvider","url","connect","then","subscribeToRoom","messageLimit","hooks","onNewMessage","toConsumableArray","onUserStartedTyping","onUserStoppedTyping","onUserCameOnline","forceUpdate","onUserWentOffline","onUserJoined","chat_WhosOnlineList","chat_MessageList","chat_TypingIndicator","chat_SendMessageForm","ChatContainer","chatLogin","onUsernameSubmitted","response","currentScreen","chat_UsernameForm","chat_ChatScreen","EventParty","event","getEventFull","createChatRoom","parseQueryParams","currentGreetings","chat_ChatContainer","greetings_GreetingsBox","_this2$props","eventId","EventDetails","GreetingsMgmt","eventTitle","roleTItle","currentRole","ownGreetings","RedirectIntercept","redirectTo","resetRedirectTo","Redirect","MyEvents","userEvents","About","App","BrowserRouter","general_RedirectIntercept","general_NavBar","Route","path","render","home_Home","mainPages_MyEvents","mainPages_About","_ref","match","mainPages_EventDetails","params","_ref2","mainPages_EventParty","_ref3","mainPages_GreetingsMgmt","ajaxUtils","AjaxUtils","queryApi","asyncToGenerator","regenerator_default","mark","_callee","method","body","wrap","_context","prev","next","t0","axios","get","sent","abrupt","post","put","delete","Error","data","t1","stop","_x","_x2","_x3","EVENTS_PATH","GREETING_PATH","GREETING_TYPES_PATH","USERS_PATH","CHAT_PATH","CHAT_ROOMS_PATH","CHAT_USERS_PATH","transportLayer","getUserById","getEventsByUser","createEvent","updateUser","updateObject","greetingId","greetingObject","LS_USER_KEY","Store","initializerDefineProperty","Store_descriptor","Store_descriptor2","Store_descriptor3","Store_descriptor4","Store_descriptor5","Store_descriptor6","Store_descriptor7","Store_descriptor8","Store_descriptor9","Store_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","getEventDetails","queryParams","updateUserInStorage","_callee2","_context2","localStorage","setItem","JSON","stringify","removeItem","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","interceptors","use","status","isAuthenticated","Promise","reject","initialize","greetingTypes","Date","now","eventDate","end","add","isBetween","_callee3","_context3","getUserFromStorage","computed","paramsObject","keys","forEach","k","_callee4","_context4","getUser","parse","getItem","_callee5","_context5","role","_callee6","_context6","_this9","_this10","_callee7","_context7","_this11","_callee8","_context8","_this12","_callee9","isRedirect","_context9","_this13","_callee10","_context10","_this14","_callee11","_context11","_this15","log","_callee12","currentGreeting","_context12","_this16","find","_callee13","currentIndex","_context13","_this17","findIndex","splice","_this18","_this19","_this20","_this21","_this22","_callee14","_context14","_this23","ReactDOM","index_module","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f2473a35.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n    dummyLogin: stores.store.dummyLogin\r\n}))\r\n@observer\r\nclass LoginForm extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type='text' placeholder='Username' />\r\n                <br />\r\n                <button className='btn' type='button' onClick={this.props.dummyLogin}>Login</button>\r\n                <br />\r\n                <small><i>hard-coded login user 'Ami' for now</i></small>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Modal from 'react-responsive-modal';\r\nimport LoginForm from './LoginForm';\r\n\r\n\r\n@inject(stores => ({\r\n    isModal: stores.store.isLoginModal,\r\n    toggleModal: stores.store.toggleLoginModal\r\n}))\r\n@observer\r\nclass LoginModal extends Component {\r\n    render() {\r\n        return (\r\n            <Modal open={this.props.isModal} onClose={this.props.toggleModal} closeOnEsc={false} closeOnOverlayClick={false}>\r\n                <LoginForm />\r\n            </Modal >\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginModal;","import React, { Component } from 'react';\r\nimport LoginModal from './LoginModal';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n  toggleModal: stores.store.toggleLoginModal,\r\n}))\r\n@observer\r\nclass LoginButton extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span onClick={this.props.toggleModal}>Login</span>\r\n                <LoginModal />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginButton;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport LoginButton from './LoginButton';\r\n\r\n@inject(stores => ({\r\n    currentUserExists: stores.store.currentUserExists,\r\n    username: stores.store.currentUser ? (stores.store.currentUser.name || stores.store.currentUser.email || stores.store.currentUser.phone) : '',\r\n    logout: stores.store.logout\r\n}))\r\n@observer\r\nclass LoginControl extends Component {\r\n    render() {\r\n        const { currentUserExists, logout, username } = this.props;\r\n\r\n        return (\r\n            <div className='login-btn'>\r\n                {currentUserExists ?\r\n                    <span onClick={logout}>{`Hi ${username}, Logout`}</span>\r\n                    :\r\n                    <LoginButton />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginControl;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport LoginControl from '../login/LoginControl';\r\n\r\nclass NavBar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.links = [\r\n            { title: 'Surprizer', to: '/' },\r\n            { title: 'My Events', to: '/events' },\r\n            { title: 'About', to: '/about' }\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='outer-wrapper'>\r\n                <div className='container nav-container'>\r\n                    {this.links.map((l, i) => <NavLink key={i} to={l.to} activeClassName='active-link' exact>{l.title}</NavLink>)}\r\n                    <LoginControl />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport class CustomLoader extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.isLoading ?\r\n                    (<div className=\"loader-container\">\r\n                        <Loader type=\"Circles\" color=\"#9c27b0\" height={this.props.height || 80} />\r\n                    </div>)\r\n                    :\r\n                    <div>{this.props.children}</div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomLoader;","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { action } from 'mobx';\r\n\r\n@observer\r\nclass GuestInput extends Component {\r\n\r\n    @action handleChange = e => {\r\n        this.props.updateGuest(this.props.index, e.target.name, e.target.value);\r\n    };\r\n\r\n    render() {\r\n        const { guest } = this.props;\r\n\r\n        return (\r\n            <div className='guest-input'>\r\n                <select name='type' value={guest.type} onChange={this.handleChange} required>\r\n                    <option value='' disabled>-</option>\r\n                    <option value='email'>Email</option>\r\n                    <option value='phone'>Phone</option>\r\n                </select>\r\n\r\n                {guest.type === 'email' &&\r\n                    <input\r\n                        name='email'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        onChange={this.handleChange}\r\n                        value={guest.email}\r\n                        required\r\n                    />\r\n                }\r\n\r\n                {guest.type === 'phone' &&\r\n                    <input\r\n                        name='phone'\r\n                        type='tel'\r\n                        placeholder='Phone'\r\n                        onChange={this.handleChange}\r\n                        value={guest.phone}\r\n                        required\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuestInput;","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { observable, action, reaction } from 'mobx';\r\n\r\nimport GuestInput from './GuestInput';\r\n\r\n@observer\r\nclass GuestPicker extends Component {\r\n    @observable guests = [{ type: '', email: '', phone: '' }];\r\n\r\n    @action addInput = () => {\r\n        this.guests.push({ type: '', email: '', phone: '' });\r\n    };\r\n\r\n    @action updateGuest = (index, type, value) => {\r\n        this.guests[index][type] = value;\r\n    };\r\n\r\n    guestsChange = reaction(\r\n        () => this.guests.map(g => { return { ...g } }),\r\n        guests => this.props.setUsersFromPicker(guests, this.props.roleId)\r\n    );\r\n\r\n    render() {\r\n        return (\r\n            <div className='guest-picker'>\r\n                {this.guests.map((g, i) =>\r\n                    <GuestInput key={i} guest={g} index={i} updateGuest={this.updateGuest} />\r\n                )}\r\n                <button className='icon-button' type='button' onClick={this.addInput}>+</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuestPicker;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\n\r\nimport GuestPicker from '../forms/guestPicker/GuestPicker';\r\nimport CustomLoader from '../general/CustomLoader';\r\n\r\n@inject(stores => ({\r\n    addEvent: stores.store.addEvent,\r\n    isLoading: stores.store.isLoading\r\n}))\r\n@observer\r\nclass NewEventForm extends Component {\r\n    @observable title = '';\r\n    @observable date = '';\r\n    @observable users = {};\r\n\r\n    @action handleChange = e => {\r\n        this[e.target.name] = e.target.value;\r\n    };\r\n\r\n    @action setUsersFromPicker = (guests, roleId) => {\r\n        this.users[roleId] = guests;\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.addEvent(this.title, this.date, this.users, true);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>New Event</h2>\r\n                <form className='form new-event-form' onSubmit={this.handleSubmit}>\r\n                    <label>Title:</label>\r\n                    <input\r\n                        name='title'\r\n                        type='text'\r\n                        placeholder='Title'\r\n                        onChange={this.handleChange}\r\n                        value={this.title}\r\n                        required\r\n                    />\r\n\r\n                    <label>Date:</label>\r\n                    <input\r\n                        name='date'\r\n                        type='datetime-local'\r\n                        placeholder='date'\r\n                        onChange={this.handleChange}\r\n                        value={this.date}\r\n                        required\r\n                    />\r\n\r\n                    <label>Guests:</label>\r\n                    <GuestPicker roleId={2} setUsersFromPicker={this.setUsersFromPicker} />\r\n\r\n                    <label>Surprisees:</label>\r\n                    <GuestPicker roleId={3} setUsersFromPicker={this.setUsersFromPicker} />\r\n\r\n                    <CustomLoader isLoading={this.props.isLoading} height={40}>\r\n                        <button className='btn' type='submit'>Save</button>\r\n                    </CustomLoader>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewEventForm;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Modal from 'react-responsive-modal';\r\n\r\nimport NewEventForm from './NewEventForm';\r\n\r\n@inject(stores => ({\r\n    isModal: stores.store.isNewEventModal,\r\n    toggleModal: stores.store.toggleNewEventModal\r\n}))\r\n@observer\r\nclass NewEventModal extends Component {\r\n    render() {\r\n        return (\r\n            <Modal open={this.props.isModal} onClose={this.props.toggleModal} center styles={{ modal: { width: '100%' } }}>\r\n                <NewEventForm />\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewEventModal;","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n@inject(stores => ({\r\n    userId: stores.store.currentUser ? stores.store.currentUser.id : null,\r\n}))\r\n@observer\r\nclass UserEvents extends Component {\r\n    getEvents = () => {\r\n        const { events, userId, type } = this.props;\r\n        return events.map(e => {\r\n            return (<div key={e.id}>\r\n                <span>{e.title}</span>\r\n                <span>{moment(e.date).format('L HH:mm')}</span>\r\n                <span><Link to={`/events/${e.id}/${userId}`}>details</Link></span>\r\n                <span><Link to={`/events/${e.id}/${userId}/greetings`}>greetings</Link></span>\r\n                {type === 'current' && <span><Link to={`/events/${e.id}/${userId}/party`}>party!</Link></span>}\r\n            </div>)\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>{this.props.title}</h3>\r\n                <div className='user-events'>{this.props.events.length ? this.getEvents() : 'Nothing at the moment...'}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserEvents;","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport CustomLoader from '../general/CustomLoader';\r\nimport NewEventModal from './NewEventModal';\r\nimport UserEvents from './UserEvents';\r\n\r\n@inject(stores => ({\r\n  toggleModal: stores.store.toggleNewEventModal,\r\n  isLoading: stores.store.isLoading,\r\n  isSignedIn: stores.store.isSignedIn,\r\n  futureUserEvents: stores.store.futureUserEvents,\r\n  currentParties: stores.store.currentParties,\r\n}))\r\n@observer\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className='outer-wrapper home'>\r\n        <div className='container'>\r\n          <div className='hero'>\r\n            <div>\r\n              <div className='title'>Surprize!</div>\r\n              <div className='description'><b>Surprizer</b> lets you organize virtual surprise parties.</div>\r\n              {this.props.isSignedIn && <button className='btn' type='button' onClick={this.props.toggleModal}>New Event</button>}\r\n              <NewEventModal />\r\n            </div>\r\n          </div>\r\n\r\n          <CustomLoader isLoading={this.props.isLoading}>\r\n            <UserEvents title='Current Parties' events={this.props.currentParties} type='current' />\r\n            <UserEvents title='Upcoming Events' events={this.props.futureUserEvents} type='future' />\r\n          </CustomLoader>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n  greetingTabsTitles: stores.store.greetingTabsTitles,\r\n  setGreetingType: stores.store.setGreetingType,\r\n  type: stores.store.currentGreetingType,\r\n}))\r\n@observer\r\nclass GreetingsTabs extends Component {\r\n  render() {\r\n    return (\r\n      <div className='greeting-tabs-container'>\r\n        {this.props.greetingTabsTitles.map(t =>\r\n          (<span\r\n            onClick={() => this.props.setGreetingType(t.id)}\r\n            className={`greeting-tab ${this.props.type === t.id ? 'active-tab':''}`}\r\n            key={t.id}>\r\n            {t.title} {t.count > 0 && <span className='greeting-tab-pill'>{t.count}</span>}\r\n          </span>)\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GreetingsTabs;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport ReactQuill from 'react-quill';\r\nimport '../../../node_modules/react-quill/dist/quill.snow.css';\r\nimport Parser from 'html-react-parser';\r\nimport moment from 'moment';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faSave, faTrash, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@inject(stores => ({\r\n    updateGreeting: stores.store.updateGreeting,\r\n    deleteGreeting: stores.store.deleteGreeting,\r\n    currentUser: stores.store.currentUser\r\n}))\r\n@observer\r\nclass Greeting extends Component {\r\n    @observable text = '';\r\n    @observable isEditMode = false;\r\n    @observable isPrivate = false;\r\n\r\n    @action componentDidMount = () => {\r\n        this.text = this.props.greeting.text;\r\n        this.isPrivate = this.props.greeting.isPrivate;\r\n    };\r\n\r\n    @action handleChange = e => {\r\n        this[e.target.name] = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n    };\r\n\r\n    @action handleChangeQuill = e => {\r\n        this.text = e;\r\n    };\r\n\r\n    @action handleCancel = () => {\r\n        this.toggleEdit();\r\n        this.text = this.props.greeting.text;\r\n    };\r\n\r\n    @action handleSaveText = () => {\r\n        this.props.updateGreeting(this.props.greeting.id, { text: this.text, isPrivate: this.isPrivate });\r\n        this.toggleEdit();\r\n    };\r\n\r\n    @action handleDelete = () => {\r\n        this.props.deleteGreeting(this.props.greeting.id);\r\n    };\r\n\r\n    @action toggleEdit = () => {\r\n        this.isEditMode = !this.isEditMode;\r\n    };\r\n\r\n    quillModules = {\r\n        toolbar: [\r\n            [{ 'font': [] }],\r\n            ['bold', 'italic', 'underline', 'strike'],\r\n            ['blockquote', 'code-block'],\r\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n            [{ 'direction': 'rtl' }],\r\n            [{ 'color': [] }, { 'background': [] }],\r\n            [{ 'align': [] }],\r\n            ['clean']\r\n        ],\r\n    }\r\n\r\n    render() {\r\n        const { greeting, currentUser } = this.props;\r\n\r\n        return (\r\n            <div className='greeting-wrapper'>\r\n                <div className='left'>\r\n                    {this.isEditMode ?\r\n                        <div>\r\n                            <ReactQuill\r\n                                theme='snow'\r\n                                value={this.text}\r\n                                onChange={this.handleChangeQuill}\r\n                                modules={this.quillModules}\r\n                            />\r\n                            <label>Private:</label>\r\n                            <input\r\n                                name='isPrivate'\r\n                                type='checkbox'\r\n                                checked={this.isPrivate}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            {greeting.user.id === currentUser.id &&\r\n                                <div className='buttons'>\r\n                                    <span onClick={this.handleSaveText} title='Save'><FontAwesomeIcon icon={faSave} /></span>\r\n                                    <span onClick={this.handleCancel} title='Cancel'><FontAwesomeIcon icon={faTimes} /></span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div className='readonly'>\r\n                            {Parser(greeting.text)}\r\n                            {greeting.user && greeting.user.id === currentUser.id &&\r\n                                <div className='buttons'>\r\n                                    <span onClick={this.toggleEdit} title='Edit'><FontAwesomeIcon icon={faEdit} /></span>\r\n                                    <span onClick={this.handleDelete} title='Delete'><FontAwesomeIcon icon={faTrash} /></span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n                <div className='right'>\r\n                    <div>{greeting.user ? greeting.user.name : this.props.currentUser.name}, {moment(greeting.createdAt).format('L HH:mm')}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Greeting;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Greeting from './Greeting';\r\n\r\n@inject(stores => ({\r\n    // greetings: stores.store.currentGreetings,\r\n    type: stores.store.currentGreetingType,\r\n}))\r\n@observer\r\nclass Greetings extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.greetings &&\r\n                    this.props.greetings\r\n                        .filter(g => g.typeId === this.props.type)\r\n                        .map(g => <Greeting key={g.id} greeting={g} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Greetings;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport ReactQuill from 'react-quill';\r\nimport '../../../node_modules/react-quill/dist/quill.snow.css';\r\n\r\nimport CustomLoader from '../general/CustomLoader';\r\n\r\n@inject(stores => ({\r\n    createGreeting: stores.store.createGreeting,\r\n    isLoading: stores.store.isLoading\r\n}))\r\n@observer\r\nclass AddGreetingForm extends Component {\r\n    @observable text = '';\r\n    @observable isPrivate = false;\r\n    @observable typeId = 1;\r\n\r\n    @action handleChange = e => {\r\n        this[e.target.name] = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n    };\r\n\r\n    @action handleChangeQuill = e => {\r\n        this.text = e;\r\n    };\r\n\r\n    @action handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.createGreeting(this.text, this.isPrivate, this.typeId);\r\n    };\r\n\r\n    quillModules = {\r\n        toolbar: [\r\n            [{ 'font': [] }],\r\n            ['bold', 'italic', 'underline', 'strike'],\r\n            ['blockquote', 'code-block'],\r\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n            [{ 'direction': 'rtl' }],\r\n            [{ 'color': [] }, { 'background': [] }],\r\n            [{ 'align': [] }],\r\n            ['clean']\r\n        ],\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Add Greeting</h2>\r\n                <form className='form new-greeting-form' onSubmit={this.handleSubmit}>\r\n                    <label>{this.typeId === 1 ? 'Greeting' : 'Title'}:</label>\r\n\r\n                    {this.typeId === 1 ?\r\n                        //  Rich text editor for text greetings }\r\n                        (<ReactQuill\r\n                            theme='snow'\r\n                            value={this.text}\r\n                            onChange={this.handleChangeQuill}\r\n                            modules={this.quillModules}\r\n                        />)\r\n                        :\r\n                        // Simple text input for file greetings }\r\n                        (<input\r\n                            name='text'\r\n                            type='text'\r\n                            placeholder='Greeting'\r\n                            onChange={this.handleChange}\r\n                            value={this.text}\r\n                            required\r\n                        />)\r\n                    }\r\n\r\n                    <label>Private:</label>\r\n                    <input\r\n                        name='isPrivate'\r\n                        type='checkbox'\r\n                        checked={this.isPrivate}\r\n                        onChange={this.handleChange}\r\n                    />\r\n\r\n                    <CustomLoader isLoading={this.props.isLoading} height={40}>\r\n                        <button type='submit'>Save</button>\r\n                    </CustomLoader>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddGreetingForm;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Modal from 'react-responsive-modal';\r\n\r\nimport AddGreetingForm from './AddGreetingForm';\r\n\r\n@inject(stores => ({\r\n    isModal: stores.store.isAddGreetingModal,\r\n    toggleModal: stores.store.toggleAddGreetingModal\r\n}))\r\n@observer\r\nclass AddGreetingModal extends Component {\r\n    render() {\r\n        return (\r\n            <Modal open={this.props.isModal} onClose={this.props.toggleModal} center styles={{ modal: { width: '100%' } }}>\r\n                <AddGreetingForm />\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddGreetingModal;","import React, { Component } from 'react';\r\nimport AddGreetingModal from './AddGreetingModal';\r\nimport { inject } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n    toggleModal: stores.store.toggleAddGreetingModal\r\n}))\r\nclass AddGreeting extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button type='button' className='btn' onClick={this.props.toggleModal}>Add Greeting</button>\r\n                <AddGreetingModal />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddGreeting;","import React, { Component } from 'react';\r\nimport GreetingsTabs from './GreetingsTabs';\r\nimport Greetings from './Greetings';\r\nimport { inject, observer } from 'mobx-react';\r\nimport AddGreeting from './AddGreeting';\r\n\r\n@inject(stores => ({\r\n  getGreetingTypes: stores.store.getGreetingTypes\r\n}))\r\n@observer\r\nclass GreetingsBox extends Component {\r\n  componentDidMount = () => {\r\n    this.props.getGreetingTypes();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <GreetingsTabs />\r\n        <Greetings greetings={this.props.greetings} />\r\n        <AddGreeting />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GreetingsBox;","import React, { Component } from 'react'\r\n\r\nclass UsernameForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this) //refactor\r\n        this.onChange = this.onChange.bind(this)\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state.username)\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ username: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {/* <h3>What is your name?</h3> */}\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Name\"\r\n                            onChange={this.onChange}\r\n                            required\r\n                        />\r\n                        <br />\r\n                        <button className='btn' type=\"submit\">Join Chat</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsernameForm","import React, { Component } from 'react';\r\n\r\nclass MessageList extends Component {\r\n    render() {\r\n        return (\r\n            <div className='message-list-container'>\r\n                <ul>\r\n                    {this.props.messages.map((message, index) => (\r\n                        <li key={index}>\r\n                            <span className='sender-username'>{message.senderId}</span>{' '}\r\n                            <div className='message'>{message.text}</div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList;","import React, { Component } from 'react';\r\n\r\nclass SendMessageForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            text: '',\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state.text)\r\n        this.setState({ text: '' })\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ text: e.target.value })\r\n        if (this.props.onChange) {\r\n            this.props.onChange()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='send-container'>\r\n                <div>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Type a message here then hit ENTER\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.text}\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendMessageForm;","import React, { Component } from 'react';\r\n\r\nclass TypingIndicator extends Component {\r\n    render() {\r\n        if (this.props.usersWhoAreTyping.length > 0) {\r\n            return (\r\n                <div className='typing'>\r\n                    {`${this.props.usersWhoAreTyping\r\n                        .slice(0, 2)\r\n                        .join(' and ')} is typing`}\r\n                </div>\r\n            )\r\n        }\r\n        return <div />\r\n    }\r\n}\r\n\r\nexport default TypingIndicator;","import React, { Component } from 'react';\r\n\r\nclass WhosOnlineList extends Component {\r\n    renderUsers() {\r\n        return (\r\n            <ul className='whos-online-list'>\r\n                {this.props.users.map((user, index) => {\r\n                    if (user.id === this.props.currentUser.id) {\r\n                        return (\r\n                            <WhosOnlineListItem key={index} presenceState=\"online\">\r\n                                {user.name} (You)\r\n                      </WhosOnlineListItem>\r\n                        )\r\n                    }\r\n                    return (\r\n                        <WhosOnlineListItem key={index} presenceState={user.presence.state}>\r\n                            {user.name}\r\n                        </WhosOnlineListItem>\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (this.props.users) {\r\n            return this.renderUsers()\r\n        } else {\r\n            return <p>Loading...</p>\r\n        }\r\n    }\r\n}\r\n\r\nclass WhosOnlineListItem extends Component {\r\n    render() {\r\n        return (\r\n            <li>\r\n                <div>\r\n                    <div className='whos-online-pill' style={{\r\n                        backgroundColor: this.props.presenceState === 'online' ? '#539eff' : '#414756',\r\n                    }} /></div>\r\n                <div>{this.props.children}</div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WhosOnlineList;","import React, { Component } from 'react';\r\nimport Chatkit from '@pusher/chatkit';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport MessageList from './MessageList';\r\nimport SendMessageForm from './SendMessageForm';\r\nimport TypingIndicator from './TypingIndicator';\r\nimport WhosOnlineList from './WhosOnlineList';\r\n\r\n@inject(stores => ({\r\n    chatRoomId: stores.store.currentEvent.chatRoomId\r\n}))\r\n@observer\r\nclass ChatScreen extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentUser: {},\r\n            currentRoom: {},\r\n            messages: [],\r\n            usersWhoAreTyping: [],\r\n        }\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.sendTypingEvent = this.sendTypingEvent.bind(this)\r\n    }\r\n\r\n    sendMessage(text) {\r\n        this.state.currentUser.sendMessage({\r\n            text,\r\n            roomId: this.state.currentRoom.id,\r\n        })\r\n    }\r\n\r\n    sendTypingEvent() {\r\n        this.state.currentUser\r\n            .isTypingIn({ roomId: this.state.currentRoom.id })\r\n            .catch(error => console.error('error', error))\r\n    }\r\n\r\n    componentDidMount() {\r\n        const chatManager = new Chatkit.ChatManager({\r\n            instanceLocator: 'v1:us1:09d50864-3dac-4251-b92a-0b851b4da892',\r\n            userId: this.props.currentUsername,\r\n            tokenProvider: new Chatkit.TokenProvider({\r\n                url: '/chat/authenticate',\r\n                // url: 'http://localhost:5000/chat/authenticate',\r\n            }),\r\n        })\r\n\r\n        chatManager\r\n            .connect()\r\n            .then(currentUser => {\r\n                this.setState({ currentUser });\r\n                return currentUser.subscribeToRoom({\r\n                    roomId: this.props.chatRoomId,\r\n                    messageLimit: 100,\r\n                    hooks: {\r\n                        onNewMessage: message => {\r\n                            this.setState({\r\n                                messages: [...this.state.messages, message],\r\n                            })\r\n                        },\r\n\r\n                        onUserStartedTyping: user => {\r\n                            this.setState({\r\n                                usersWhoAreTyping: [...this.state.usersWhoAreTyping, user.name],\r\n                            })\r\n                        },\r\n\r\n                        onUserStoppedTyping: user => {\r\n                            this.setState({\r\n                                usersWhoAreTyping: this.state.usersWhoAreTyping.filter(\r\n                                    username => username !== user.name\r\n                                ),\r\n                            })\r\n                        },\r\n\r\n                        onUserCameOnline: () => this.forceUpdate(),\r\n                        onUserWentOffline: () => this.forceUpdate(),\r\n                        onUserJoined: () => this.forceUpdate(),\r\n                    },\r\n                })\r\n\r\n            })\r\n            .then(currentRoom => {\r\n                this.setState({ currentRoom })\r\n            })\r\n            .catch(error => console.error('error', error))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='chat-screen-container'>\r\n                <div className='chat-container'>\r\n                    <aside className='whos-online-list-container'>\r\n                        <WhosOnlineList\r\n                            currentUser={this.state.currentUser}\r\n                            users={this.state.currentRoom.users}\r\n                        />\r\n                    </aside>\r\n                    <section className='chat-list-container'>\r\n                        <MessageList messages={this.state.messages} />\r\n                        <TypingIndicator usersWhoAreTyping={this.state.usersWhoAreTyping} />\r\n                        <SendMessageForm onSubmit={this.sendMessage} onChange={this.sendTypingEvent} />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatScreen;","import React, { Component } from 'react';\r\nimport UsernameForm from './UsernameForm';\r\nimport ChatScreen from './ChatScreen';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n    chatLogin: stores.store.chatLogin\r\n}))\r\n@observer\r\nclass ChatContainer extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            currentUsername: '',\r\n            currentScreen: 'WhatIsYourUsernameScreen',\r\n        }\r\n    }\r\n\r\n    onUsernameSubmitted = username => {\r\n        this.props.chatLogin({ username })\r\n            .then(response => {\r\n                this.setState({\r\n                    currentUsername: username,\r\n                    currentScreen: 'ChatScreen',\r\n                })\r\n            })\r\n            .catch(error => console.error('error', error))\r\n    }\r\n\r\n    render() {  //refactor//////////////////////////////\r\n        if (this.state.currentScreen === 'WhatIsYourUsernameScreen') {\r\n            return <UsernameForm onSubmit={this.onUsernameSubmitted} />\r\n        }\r\n        if (this.state.currentScreen === 'ChatScreen') {\r\n            return <ChatScreen currentUsername={this.state.currentUsername} />\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChatContainer;","import React, { Component } from 'react';\r\nimport { action } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport GreetingsBox from '../greetings/GreetingsBox';\r\nimport CustomLoader from '../general/CustomLoader';\r\nimport ChatContainer from '../chat/ChatContainer';\r\n\r\n@inject(stores => ({\r\n    event: stores.store.currentEvent,\r\n    user: stores.store.currentUser,\r\n    getEventFull: stores.store.getEventFull,\r\n    isLoading: stores.store.isLoading,\r\n    createChatRoom: stores.store.createChatRoom,\r\n    parseQueryParams: stores.store.parseQueryParams,\r\n    currentGreetings: stores.store.currentGreetings,\r\n}))\r\n@observer\r\nclass EventParty extends Component {\r\n\r\n    @action componentDidMount = () => {\r\n        const { userId, eventId, parseQueryParams } = this.props;\r\n        parseQueryParams({ eventId, userId });\r\n    };\r\n\r\n    render() {\r\n        const { event } = this.props;\r\n        return (\r\n            <div className='outer-wrapper party'>\r\n                <div className='container'>\r\n                    <div className='hero'>\r\n                        <div>\r\n                            <div className='title'>Party on!</div>\r\n                            <div className='description'>This is the real party! Chat with people and mingle.</div>\r\n\r\n                        </div></div>\r\n                    <CustomLoader isLoading={this.props.isLoading}>\r\n                        {/* replace with automatic creation of room */}\r\n                        {event && !event.chatRoomId && <div>\r\n                            <button type='button' onClick={this.props.createChatRoom}>Create chat</button>\r\n                            <small>will be auto created</small></div>}\r\n\r\n                        {event && <h3>Welcome to {event.title}</h3>}\r\n                        {event && event.chatRoomId && <ChatContainer />}\r\n                        {this.props.user && <h2>{this.props.user.name}</h2>}\r\n\r\n                        <GreetingsBox greetings={this.props.currentGreetings} />\r\n                    </CustomLoader>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventParty;","import React, { Component } from 'react';\r\nimport { action } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport CustomLoader from '../general/CustomLoader';\r\nimport GreetingsBox from '../greetings/GreetingsBox';\r\n\r\n@inject(stores => ({\r\n    event: stores.store.currentEvent,\r\n    getEventFull: stores.store.getEventFull,\r\n    isLoading: stores.store.isLoading,\r\n    parseQueryParams: stores.store.parseQueryParams,\r\n}))\r\n@observer\r\nclass EventDetails extends Component {\r\n    @action componentDidMount = () => {\r\n        const { userId, eventId, parseQueryParams } = this.props;\r\n        parseQueryParams({ eventId, userId });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <CustomLoader isLoading={this.props.isLoading}>\r\n                {this.props.event && this.props.event.title}\r\n                <GreetingsBox />\r\n            </CustomLoader>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventDetails;","import React, { Component } from 'react';\r\nimport { action } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport GreetingsBox from '../greetings/GreetingsBox';\r\n\r\n@inject(stores => ({\r\n    parseQueryParams: stores.store.parseQueryParams,\r\n    eventTitle: stores.store.currentEvent ? stores.store.currentEvent.title : null,\r\n    roleTItle: stores.store.currentRole ? stores.store.currentRole.title : null,\r\n    ownGreetings: stores.store.ownGreetings\r\n}))\r\n@observer\r\nclass GreetingsMgmt extends Component {\r\n    @action componentDidMount = () => {\r\n        const { userId, eventId, parseQueryParams } = this.props;\r\n        parseQueryParams({ eventId, userId });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='outer-wrapper gr'>\r\n                <div className='container'>\r\n                    <div className='hero'>\r\n                        <div>\r\n                            <div className='title'>Greetings</div>\r\n                            <div className='description'>Your are here as {this.props.roleTItle}. Here you can write greetings and upload files that will be seen on the surprize party.</div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <h3>Greetings for {this.props.eventTitle}</h3>\r\n                    <GreetingsBox greetings={this.props.ownGreetings} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GreetingsMgmt;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { action } from 'mobx';\r\n\r\n@inject(stores => ({\r\n    redirectTo: stores.store.redirectTo,\r\n    resetRedirectTo: stores.store.resetRedirectTo,\r\n}))\r\n@observer\r\nclass RedirectIntercept extends Component {\r\n    @action componentDidMount = () => {\r\n        this.props.resetRedirectTo();\r\n    };\r\n\r\n    render() {\r\n        const { redirectTo } = this.props;\r\n        return <Redirect to={redirectTo} />\r\n    }\r\n}\r\n\r\nexport default RedirectIntercept;","import React, { Component } from 'react';\r\nimport CustomLoader from '../general/CustomLoader';\r\nimport UserEvents from '../home/UserEvents';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n@inject(stores => ({\r\n    isLoading: stores.store.isLoading,\r\n    userEvents: stores.store.userEvents,\r\n}))\r\n@observer\r\nclass MyEvents extends Component {\r\n    render() {\r\n        return (\r\n            <div className='outer-wrapper events'>\r\n                <div className='container'>\r\n                    <div className='hero'>\r\n                        <div>\r\n                            <div className='title'>Events</div>\r\n                            <div className='description'>Here you can view all your events, past present & future.</div>\r\n                        </div>\r\n                    </div>\r\n                    <CustomLoader isLoading={this.props.isLoading}>\r\n                        <UserEvents title='My Events' events={this.props.userEvents} type='all' />\r\n                    </CustomLoader>\r\n                </div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyEvents;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div className='outer-wrapper about'>\r\n                <div className='container'>\r\n\r\n                    <div className='hero'>\r\n                        <div>\r\n                            <div className='title'>About</div>\r\n                            <div className='description'>A little bit about Surprizer and me.</div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <h3>About Me</h3>\r\n                    <div>I'm me</div>\r\n\r\n                    <h3>Photo Credits</h3>\r\n                    <ul>\r\n                        <li>Photo by Jason Leung on Unsplash</li>\r\n                        <li>Photo by Adi Goldstein on Unsplash</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\nimport NavBar from './components/general/NavBar';\r\nimport Home from './components/home/Home';\r\nimport EventParty from './components/mainPages/EventParty';\r\nimport EventDetails from './components/mainPages/EventDetails';\r\nimport GreetingsMgmt from './components/mainPages/GreetingsMgmt';\r\n// import Header from './components/general/Header';\r\nimport RedirectIntercept from './components/general/RedirectIntercept';\r\n\r\nimport { inject, observer } from 'mobx-react';\r\nimport MyEvents from './components/mainPages/MyEvents';\r\nimport About from './components/mainPages/About';\r\n\r\n@inject(stores => ({\r\n    redirectTo: stores.store.redirectTo\r\n}))\r\n@observer\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    {this.props.redirectTo && <RedirectIntercept />}\r\n                    <NavBar />\r\n\r\n                    {/* Home page */}\r\n                    <Route path=\"/\" exact render={() => <Home />} />\r\n\r\n                    {/* My events page */}\r\n                    <Route path=\"/events\" exact render={() => <MyEvents />} />\r\n\r\n                    {/* About page */}\r\n                    <Route path=\"/about\" exact render={() => <About />} />\r\n\r\n                    {/* TODO: ===================== if response with wrong params - redirect to 401 page */}\r\n                    {/* Event details page, visible to organizer */}\r\n                    <Route path=\"/events/:eventId/:userId\" exact render={({ match }) => (\r\n                        <EventDetails eventId={match.params.eventId} userId={match.params.userId} />\r\n                    )} />\r\n\r\n                    {/* Live party page, visible to everyone (content security trimmed) */}\r\n                    <Route path=\"/events/:eventId/:userId/party\" exact render={({ match }) => (\r\n                        <EventParty eventId={match.params.eventId} userId={match.params.userId} />\r\n                    )} />\r\n\r\n                    {/* Upload greetins page, visible to guests */}\r\n                    <Route path=\"/events/:eventId/:userId/greetings\" exact render={({ match }) => (\r\n                        <GreetingsMgmt eventId={match.params.eventId} userId={match.params.userId} />\r\n                    )} />\r\n\r\n                    {/* <Header /> */}\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import axios from 'axios';\r\n\r\nclass AjaxUtils {\r\n    constructor() {\r\n        this.EVENTS_PATH = '/events';\r\n        this.GREETING_PATH = '/greetings';\r\n        this.GREETING_TYPES_PATH = `${this.GREETING_PATH}/types`;\r\n        this.USERS_PATH = '/users';\r\n        this.CHAT_PATH = '/chat';\r\n        this.CHAT_ROOMS_PATH = `${this.CHAT_PATH}/rooms`;\r\n        this.CHAT_USERS_PATH = `${this.CHAT_PATH}/users`;\r\n    }\r\n\r\n    // Return a promise\r\n    queryApi = async (method, url, body) => {\r\n        let response;\r\n        try {\r\n            switch (method) {\r\n                case 'get':\r\n                    response = await axios.get(url);\r\n                    break;\r\n                case 'post':\r\n                    response = await axios.post(url, body);\r\n                    break;\r\n                case 'put':\r\n                    response = await axios.put(url, body);\r\n                    break;\r\n                case 'delete':\r\n                    response = await axios.delete(url);\r\n                    break;\r\n                default:\r\n                    throw new Error(`Unexpected method: ${method}`);\r\n            }\r\n            return response.data;\r\n        }\r\n        catch (error) { throw error; }\r\n    };\r\n}\r\n\r\nconst ajaxUtils = new AjaxUtils();\r\nexport default ajaxUtils;","import ajaxUtils from './AjaxUtils';\r\n\r\n// Return a promise\r\nclass TransportLayer {\r\n\r\n    // Get event with all greetings (trimmed by user permissions)\r\n    getEventFull = (eventId, userId) => {\r\n        const url = `${ajaxUtils.EVENTS_PATH}/${eventId}/${userId}`;\r\n        return ajaxUtils.queryApi('get', url);\r\n    };\r\n\r\n    // Get event with all greetings (trimmed by user permissions)\r\n    getUserById = userId => {\r\n        const url = `${ajaxUtils.USERS_PATH}/${userId}`;\r\n        return ajaxUtils.queryApi('get', url);\r\n    };\r\n\r\n    // Get events for current user (minus future events where he's surprisee)\r\n    getEventsByUser = userId => {\r\n        const url = `${ajaxUtils.USERS_PATH}/${userId}${ajaxUtils.EVENTS_PATH}`;\r\n        return ajaxUtils.queryApi('get', url);\r\n    };\r\n\r\n    // Create event\r\n    createEvent = event => {\r\n        const url = ajaxUtils.EVENTS_PATH;\r\n        return ajaxUtils.queryApi('post', url, event);\r\n    }\r\n\r\n    // Update user\r\n    updateUser = (userId, updateObject) => {\r\n        const url = `${ajaxUtils.USERS_PATH}/${userId}`;\r\n        return ajaxUtils.queryApi('put', url, updateObject);\r\n    };\r\n\r\n    // Get greeting types\r\n    getGreetingTypes = () => {\r\n        const url = `${ajaxUtils.GREETING_TYPES_PATH}`;\r\n        return ajaxUtils.queryApi('get', url);\r\n    }\r\n\r\n    // Update greeting\r\n    updateGreeting = (greetingId, updateObject) => {\r\n        const url = `${ajaxUtils.GREETING_PATH}/${greetingId}`;\r\n        return ajaxUtils.queryApi('put', url, updateObject);\r\n    };\r\n\r\n    // Create greeting\r\n    createGreeting = (greetingObject) => {\r\n        const url = ajaxUtils.GREETING_PATH;\r\n        return ajaxUtils.queryApi('post', url, greetingObject);\r\n    };\r\n\r\n    // Delete greeting\r\n    deleteGreeting = greetingId => {\r\n        const url = `${ajaxUtils.GREETING_PATH}/${greetingId}`;\r\n        return ajaxUtils.queryApi('delete', url);\r\n    };\r\n\r\n    // ===== chat related\r\n\r\n    // Create chat room\r\n    createChatRoom = eventId => {\r\n        const url = ajaxUtils.CHAT_ROOMS_PATH;\r\n        return ajaxUtils.queryApi('post', url, { eventId });\r\n    }\r\n\r\n    chatLogin = body => {\r\n        const url = ajaxUtils.CHAT_USERS_PATH;\r\n        return ajaxUtils.queryApi('post', url, body);\r\n    };\r\n}\r\n\r\nconst transportLayer = new TransportLayer();\r\nexport default transportLayer;","import { observable, action, reaction, computed } from 'mobx';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport transportLayer from '../utils/TransportLayer';\r\nimport ajaxUtils from '../utils/AjaxUtils';\r\n\r\nconst LS_USER_KEY = 'user';\r\n\r\nclass Store {\r\n    @observable currentEvent = null;\r\n    @observable currentUser = null;\r\n    @observable currentRole = null;\r\n    @observable currentGreetings = [];\r\n    @observable userEvents = [];\r\n    @observable greetingTypes = [];\r\n    @observable currentGreetingType = 1;\r\n\r\n    @observable isSignedIn = false;\r\n\r\n    @observable queryParams = {\r\n        userId: null,\r\n        eventId: null\r\n    };\r\n\r\n    // UI related\r\n    @observable isLoginModal = false;\r\n    @observable isNewEventModal = false;\r\n    @observable isAddGreetingModal = false;\r\n    @observable isLoading = false;\r\n    @observable redirectTo = null;\r\n\r\n    constructor() {\r\n        // Handle ajax errors\r\n        axios.interceptors.response.use(\r\n            response => response,\r\n            error => {\r\n                if (error.response.status === 401) {\r\n                    this.isAuthenticated = false;\r\n                }\r\n                else {\r\n                    console.error(error.response);\r\n                }\r\n                return Promise.reject(error);\r\n            });\r\n        this.initialize();\r\n    };\r\n\r\n    @action initialize = async () => {\r\n        this.getUserFromStorage();\r\n    };\r\n\r\n    @computed get ownGreetings() {\r\n        if (this.currentGreetings.length) {\r\n            return this.currentGreetings.filter(g => g.userId === this.currentUser.id);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    @action parseQueryParams = paramsObject => {\r\n        Object.keys(paramsObject).forEach(k => {\r\n            this.queryParams[k] = paramsObject[k];\r\n        });\r\n    };\r\n\r\n    @computed get currentUserExists() {\r\n        const exists = this.currentUser ? true : false;\r\n        return exists;\r\n    }\r\n\r\n    // Only until proper login implemented\r\n    @action dummyLogin = async () => {\r\n        await this.getUser(1);\r\n        this.toggleLoginModal();\r\n    };\r\n\r\n    @action getUserFromStorage = () => {\r\n        this.currentUser = JSON.parse(localStorage.getItem(LS_USER_KEY))\r\n            || this.currentUser;\r\n    };\r\n\r\n    @action getEventFull = async (eventId, userId) => {\r\n        try {\r\n            this.isLoading = true;\r\n            const data = await transportLayer.getEventFull(eventId, userId);\r\n            this.currentEvent = data.event;\r\n            this.currentRole = data.role;\r\n            this.currentGreetings = data.greetings;\r\n            this.getUser(userId);\r\n            this.isLoading = false;\r\n        }\r\n        catch (err) { throw err; }\r\n    }\r\n\r\n    @action getGreetingTypes = async () => {\r\n        // TODO: only if something changed on the server\r\n        this.greetingTypes = await transportLayer.getGreetingTypes();\r\n    }\r\n\r\n    @computed get greetingTabsTitles() {\r\n        return this.greetingTypes\r\n            .map(t =>\r\n                ({\r\n                    id: t.id,\r\n                    title: t.type,\r\n                    count: this.currentGreetings\r\n                        .filter(g => g.typeId === t.id)\r\n                        .length\r\n                }))\r\n    }\r\n\r\n    @computed get futureUserEvents() {\r\n        return this.userEvents.filter(e => new Date(e.date) > new Date());\r\n    }\r\n\r\n    @computed get currentParties() {\r\n        return this.userEvents\r\n            .filter(e => {\r\n                const now = moment();\r\n                const eventDate = moment(e.date);\r\n                const end = moment(e.date).add(4, 'h');\r\n                return now.isBetween(eventDate, end);\r\n            });\r\n    }\r\n\r\n    @action setGreetingType = typeId => {\r\n        this.currentGreetingType = typeId;\r\n    }\r\n\r\n    @action getUser = async userId => {\r\n        try {\r\n            this.isLoading = true;\r\n            const user = await transportLayer.getUserById(userId);\r\n            this.currentUser = user;\r\n            this.isLoading = false;\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action getEventsByUser = async () => {\r\n        try {\r\n            this.isLoading = true;\r\n            const events = await transportLayer.getEventsByUser(this.currentUser.id);\r\n            this.userEvents = events;\r\n            this.isLoading = false;\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action addEvent = async (title, date, users, isRedirect) => {\r\n        try {\r\n            this.isLoading = true;\r\n            const userId = this.currentUser.id;\r\n            const event = await transportLayer.createEvent({ title, date, userId, users });\r\n            this.toggleNewEventModal();\r\n            this.isLoading = false;\r\n            if (isRedirect) {\r\n                this.redirectTo = `${ajaxUtils.EVENTS_PATH}/${event.id}/${this.currentUser.id}`;\r\n            }\r\n            this.userEvents.push(event);\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action updateUser = async updateObject => {\r\n        try {\r\n            const user = await transportLayer.updateUser(this.currentUser.id, updateObject);\r\n            if (user) {\r\n                this.currentUser = user;\r\n            }\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action createGreeting = async (text, isPrivate, typeId) => {\r\n        try {\r\n            this.isLoading = true;\r\n            const userId = this.currentUser.id;\r\n            const eventId = this.currentEvent.id;\r\n            const greeting = await transportLayer.createGreeting({ userId, eventId, text, isPrivate, typeId });\r\n            this.toggleAddGreetingModal();\r\n            this.isLoading = false;\r\n            this.currentGreetings.push(greeting);\r\n            console.log(this.currentGreetings)\r\n        }\r\n        catch (err) { throw err; }\r\n    };\r\n\r\n    @action updateGreeting = async (greetingId, updateObject) => {\r\n        const greeting = await transportLayer.updateGreeting(greetingId, updateObject);\r\n        if (greeting) {\r\n            let currentGreeting = this.currentGreetings.find(g => g.id === greetingId);\r\n            Object.keys(updateObject).forEach(k => {\r\n                currentGreeting[k] = updateObject[k];\r\n            });\r\n        }\r\n    };\r\n\r\n    @action deleteGreeting = async greetingId => {\r\n        await transportLayer.deleteGreeting(greetingId);\r\n        let currentIndex = this.currentGreetings.findIndex(g => g.id === greetingId);\r\n        this.currentGreetings.splice(currentIndex, 1);\r\n    };\r\n\r\n    @action logout = () => {\r\n        // TODO: logout user if he's signed-in\r\n        this.currentUser = null;\r\n        this.queryParams.eventId = null;\r\n        this.queryParams.userId = null;\r\n        this.redirectTo = '/';\r\n    };\r\n\r\n    chatLogin = async body => {\r\n        try {\r\n            await transportLayer.chatLogin(body);\r\n        }\r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    getEventDetails = reaction(\r\n        () => ({ ...this.queryParams }),\r\n        params => {\r\n            if (params.userId && params.eventId) {\r\n                this.getEventFull(params.eventId, params.userId);\r\n            }\r\n        }\r\n    );\r\n\r\n    updateUserInStorage = reaction(\r\n        () => ({ ...this.currentUser }),\r\n        async () => {\r\n            if (this.currentUser) {\r\n                localStorage.setItem(LS_USER_KEY, JSON.stringify(this.currentUser))\r\n                this.isSignedIn = true;\r\n                await this.getEventsByUser();\r\n            }\r\n            else {\r\n                localStorage.removeItem(LS_USER_KEY);\r\n                this.isSignedIn = false;\r\n                this.userEvents = [];\r\n            }\r\n        }\r\n    );\r\n\r\n    // UI related\r\n    @action toggleLoginModal = () => {\r\n        this.isLoginModal = !this.isLoginModal;\r\n    };\r\n\r\n    @action toggleNewEventModal = () => {\r\n        this.isNewEventModal = !this.isNewEventModal;\r\n    };\r\n\r\n    @action toggleAddGreetingModal = () => {\r\n        this.isAddGreetingModal = !this.isAddGreetingModal;\r\n    };\r\n\r\n    @action resetRedirectTo = () => {\r\n        this.redirectTo = null;\r\n    };\r\n\r\n    // Chat related\r\n    @action createChatRoom = async () => {\r\n        const roomId = await transportLayer.createChatRoom(this.currentEvent.id);\r\n        this.currentEvent.chatRoomId = roomId;\r\n    };\r\n}\r\n\r\nconst store = new Store();\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\n\nimport './index.css';\nimport App from './App';\nimport store from './stores/Store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));"],"sourceRoot":""}